文件：LIBV413_IIC_SLAVE_TEST_V100.c 盛群编译器版本 3.00 页次1



;  41: void IIC_Msg(){
  41  0000              __ptm0rph EQU [06eH]
  41  0000              __ptm0rpl EQU [06dH]
  41  0000              __ptm0ah EQU [06cH]
  41  0000              __ptm0al EQU [06bH]
  41  0000              __ptm0dh EQU [06aH]
  41  0000              __ptm0dl EQU [069H]
  41  0000              __ptm0c1 EQU [068H]
  41  0000              __ptm0c0 EQU [067H]
  41  0000              __ctm0ah EQU [066H]
  41  0000              __ctm0al EQU [065H]
  41  0000              __ctm0dh EQU [064H]
  41  0000              __ctm0dl EQU [063H]
  41  0000              __ctm0c1 EQU [062H]
  41  0000              __ctm0c0 EQU [061H]
  41  0000              __tkm3c1 EQU [060H]
  41  0000              __tkm3c0 EQU [05fH]
  41  0000              __tkm3roh EQU [05eH]
  41  0000              __tkm3rol EQU [05dH]
  41  0000              __tkm316dh EQU [05cH]
  41  0000              __tkm316dl EQU [05bH]
  41  0000              __tkm2c1 EQU [05aH]
  41  0000              __tkm2c0 EQU [059H]
  41  0000              __tkm2roh EQU [058H]
  41  0000              __tkm2rol EQU [057H]
  41  0000              __tkm216dh EQU [056H]
  41  0000              __tkm216dl EQU [055H]
  41  0000              __tkm1c1 EQU [054H]
  41  0000              __tkm1c0 EQU [053H]
  41  0000              __tkm1roh EQU [052H]
  41  0000              __tkm1rol EQU [051H]
  41  0000              __tkm116dh EQU [050H]
  41  0000              __tkm116dl EQU [04fH]
  41  0000              __tkm0c1 EQU [04eH]
  41  0000              __tkm0c0 EQU [04dH]
  41  0000              __tkm0roh EQU [04cH]
  41  0000              __tkm0rol EQU [04bH]
  41  0000              __tkm016dh EQU [04aH]
  41  0000              __tkm016dl EQU [049H]
  41  0000              __tkc1 EQU [048H]
  41  0000              __tk16dh EQU [047H]
  41  0000              __tk16dl EQU [046H]
  41  0000              __tkc0 EQU [045H]
  41  0000              __tktmr EQU [044H]
  41  0000              __pdpu EQU [043H]
  41  0000              __pdc EQU [042H]
  41  0000              __pd EQU [041H]
  41  0000              __ctrl EQU [03dH]
  41  0000              __pcpu EQU [03bH]
  41  0000              __pcc EQU [03aH]
  41  0000              __pc EQU [039H]
  41  0000              __slcdc3 EQU [036H]
  41  0000              __slcdc2 EQU [035H]
  41  0000              __slcdc1 EQU [034H]
  41  0000              __slcdc0 EQU [033H]
  41  0000              __tmpc EQU [030H]
  41  0000              __txr_rxr EQU [02cH]
文件：LIBV413_IIC_SLAVE_TEST_V100.c 盛群编译器版本 3.00 页次2 

文件：LIBV413_IIC_SLAVE_TEST_V100.c 盛群编译器版本 3.00 页次2

  41  0000              __brg EQU [02bH]
  41  0000              __ucr2 EQU [02aH]
  41  0000              __ucr1 EQU [029H]
  41  0000              __usr EQU [028H]
  41  0000              __iica EQU [027H]
  41  0000              __iicd EQU [026H]
  41  0000              __iicc1 EQU [025H]
  41  0000              __iicc0 EQU [024H]
  41  0000              __i2ctoc EQU [023H]
  41  0000              __pbpu EQU [022H]
  41  0000              __pbc EQU [021H]
  41  0000              __pb EQU [020H]
  41  0000              __eed EQU [01fH]
  41  0000              __eea EQU [01eH]
  41  0000              __pscr EQU [01cH]
  41  0000              __tbc EQU [01bH]
  41  0000              __wdtc EQU [01aH]
  41  0000              __sledc1 EQU [019H]
  41  0000              __sledc0 EQU [018H]
  41  0000              __pawu EQU [017H]
  41  0000              __papu EQU [016H]
  41  0000              __pac EQU [015H]
  41  0000              __pa EQU [014H]
  41  0000              __lvrc EQU [013H]
  41  0000              __lvdc EQU [012H]
  41  0000              __intc3 EQU [011H]
  41  0000              __intc2 EQU [010H]
  41  0000              __intc1 EQU [0fH]
  41  0000              __intc0 EQU [0eH]
  41  0000              __integ EQU [0dH]
  41  0000              __smod EQU [0bH]
  41  0000              __status EQU [0aH]
  41  0000              __tbhp EQU [09H]
  41  0000              __tblh EQU [08H]
  41  0000              __tblp EQU [07H]
  41  0000              __pcl EQU [06H]
  41  0000              __acc EQU [05H]
  41  0000              __bp EQU [04H]
  41  0000              __mp1 EQU [03H]
  41  0000              __iar1 EQU [02H]
  41  0000              __mp0 EQU [01H]
  41  0000              __iar0 EQU [00H]
  41  0000              @IIC_Msg .SECTION 'CODE'
  41  0000              PUBLIC _IIC_Msg
  41  0000              _IIC_Msg PROC

;  43:         message 'IIC Slave Mode'
  43  0000              message 'IIC Slave Mode'
  43  0000              L1:
  43  0000  0003        RET
  43  0001              _IIC_Msg ENDP

; 134: void LIBV413_IIC_SLAVE_TEST_V100_INITIAL(){
 134  0000              @LIBV413_IIC_SLAVE_TEST_V100_INITIAL .SECTION 'CODE'
 134  0000              PUBLIC _LIBV413_IIC_SLAVE_TEST_V100_INITIAL
 134  0000              _LIBV413_IIC_SLAVE_TEST_V100_INITIAL PROC

; 140:     _papu0=1;
文件：LIBV413_IIC_SLAVE_TEST_V100.c 盛群编译器版本 3.00 页次3 

 140  0000  3016        SET [016H].0

; 141:     _papu2=1;
 141  0001  3116        SET [016H].2
文件：LIBV413_IIC_SLAVE_TEST_V100.c 盛群编译器版本 3.00 页次3


; 144:     GET_LIB_VER();
 144  0002  2000     E  CALL _GET_LIB_VER

; 145:     IIC_R_RAM[0]=DATA_BUF[0];
 145  0003  0700     E  MOV A,_DATA_BUF
 145  0004  0080     R  MOV _IIC_R_RAM,A

; 146:     IIC_R_RAM[1]=DATA_BUF[1];
 146  0005  0700     E  MOV A,_DATA_BUF[1]
 146  0006  0080     R  MOV _IIC_R_RAM[1],A

; 147:     GET_KEY_AMOUNT();
 147  0007  2000     E  CALL _GET_KEY_AMOUNT

; 148:     IIC_R_RAM[2]=_acc;
 148  0008  0705        MOV A,__acc
 148  0009  0080     R  MOV _IIC_R_RAM[2],A

; 150:     IIC_RW_RAM[0]=0;
 150  000A  1F00     R  CLR _IIC_RW_RAM

; 151:     IIC_RW_RAM[1]=0;
 151  000B  1F00     R  CLR _IIC_RW_RAM[1]

; 152:     IIC_RW_RAM[2]=IIC_R_RAM[2];
 152  000C  0700     R  MOV A,_IIC_R_RAM[2]
 152  000D  0080     R  MOV _IIC_RW_RAM[2],A

; 153:     IIC_RW_RAM[3]=GLOBE_VARIES[0];
 153  000E  0700     E  MOV A,_GLOBE_VARIES
 153  000F  0080     R  MOV _IIC_RW_RAM[3],A
 154  0010                                   else IIC_R_RAM[3]|=0x80;
                    }
                }else{
                    if(IIC_Data[Index]==CMD_RW_Global){
                        IIC_CheckSUM=0;
                        IIC_R_RAM[3]|=0x01;
                    }

                    if(IIC_R_RAM[3]&0x01){
                        if(IIC_Data[Index]<0xd8){
                            IIC_RW_RAM[(IIC_Data[Index]-0xd0)]=IIC_Data[In];
                        }else{
                            IIC_Data[Out]=(IIC_Data[Index]-0xd5);   //0xd8+3
                            GLOBE_VARIES[IIC_Data[Out]]=IIC_Data[In];
                        }
                        IIC_CheckSUM+=IIC_Data[In];
                        IIC_Data[Index]++;      //Next
                    }
                }
                /****************************************/
            }else{
                /****************************************/
文件：LIBV413_IIC_SLAVE_TEST_V100.c 盛群编译器版本 3.00 页次4 

                /*  start+device(addr)+w+DATA   */
                IIC_Data[Index]=IIC_Data[In];
                bWrite1st=1;
                /****************************************/
                goto PRERead;


                NextData2OutBuf:
                    IIC_Data[Index]++;      //Next
                PRERead:
                    IIC_Data[Out]=0;
                    if(IIC_Data[Index]<0x10){
                        switch(IIC_Data[Index]){
                            case 0:
                                IIC_Data[Out]=IIC_R_RAM[0];
                                break;
                            case 1:
                                IIC_Data[Out]=IIC_R_RAM[1];
                                break;
                            case 2:
                                IIC_Data[Out]=IIC_R_RAM[2];
                                break;
                            case 3:
                                IIC_Data[Out]=IIC_R_RAM[3];
                                break;
                            case 4:
                                IIC_Data[Out]=KEY_IO_SEL[0]^0xff;
                                break;
                            case 5:
                                IIC_Data[Out]=KEY_IO_SEL[1]^0xff;
                                break;
                            case 6:
                                IIC_Data[Out]=KEY_IO_SEL[2]^0xff;
                                break;
                            case 7:
                                IIC_Data[Out]=KEY_IO_SEL[3]^0xff;
                                break;

                            case 8:
                                IIC_Data[Out]=KEY_DATA[0];
                                break;
                            case 9:
                                IIC_Data[Out]=KEY_DATA[1];
                                break;
                            case 10:
                                IIC_Data[Out]=KEY_DATA[2];
                                break;
                            case 11:
                                IIC_Data[Out]=KEY_DATA[3];
                                break;
                        }
                        //IIC_Data[Out]=IIC_R_RAM[IIC_Data[Index]];


                    }else if(IIC_Data[Index]<0x50){ //0x10~0x4F (Key ENV)
                        if((IIC_Data[Index]&0b00000001)==0){

                            #asm
                                extern  _KEY_REF:BYTE ;FREQ:BYTE

文件：LIBV413_IIC_SLAVE_TEST_V100.c 盛群编译器版本 3.00 页次5 

                                mov a,_IIC_Data[Index]
                                sub a,010h
                                clr [0ah].0
                                rrc __acc
                                rl  __acc
                                rl  __acc

                                add a,OFFSET    _KEY_REF[0] ;_KEY_FREQ[0]
                                inc __acc
                                mov __mp1,a
                                mov a,bank  _KEY_REF[0];FREQ[0]
                                mov __bp,a

                                mov a,__iar1
                                mov _IIC_Data[Out],a
                              ; inc __mp1
                              ; mov a,__iar1
                              ; and a,0fh
                              ; mov _IIC_Data[In],a
                                clr _IIC_Data[In]  
                            #endasm
                        }else IIC_Data[Out]=IIC_Data[In];

                    }else if(IIC_Data[Index]<0x90){ //0x50~0x8f (Key REF)
                        if((IIC_Data[Index]&0b00000001)==0){

                            #asm
                               ;extern  _KEY_REF:BYTE
                                mov a,_IIC_Data[Index]
                                sub a,050h
                                clr [0ah].0
                                rrc __acc
                                rl  __acc
                                rl  __acc

                                add a,OFFSET    _KEY_REF[0]
                                mov __mp1,a
                                mov a,bank  _KEY_REF[0]
                                mov __bp,a

                                mov a,__iar1
                                mov _IIC_Data[Out],a
                              ; inc __mp1
                              ; mov a,__iar1
                              ; and a,0fh
                              ; mov _IIC_Data[In],a
                                clr _IIC_Data[In]  
                            #endasm
                        }else IIC_Data[Out]=IIC_Data[In];

                    }else if(IIC_Data[Index]<0xb0){ //0x90~0xaf (Key Offset)
                    }else if(IIC_Data[Index]<0xd0){ //0xb0~0xcf (Key RCC)

                        #asm
                               ;extern  _KEY_STATUS:BYTE
                            mov a,_IIC_Data[Index]
                            sub a,0b0h
                            rl  __acc
                            rl  __acc
                            add a,OFFSET   _KEY_REF[0]  
文件：LIBV413_IIC_SLAVE_TEST_V100.c 盛群编译器版本 3.00 页次6 

                            add a,3
                            mov __mp1,a
                            mov a,bank  _KEY_REF[0]
                            mov __bp,a

                            mov a,__iar1
                            mov _IIC_Data[Out],a
                        #endasm

                        //IIC_Data[In]=(IIC_Data[Index]-0xb0);
                        //IIC_Data[Out]=BALANCE_CAP[IIC_Data[In]];
                    }else if(IIC_Data[Index]>=0xd8){

                        #asm
                            mov a,_IIC_Data[Index]
                            sub a,0d5h      //0d8+3
                            add a,OFFSET _GLOBE_VARIES
                            mov __mp1,a
                            mov a,BANK _GLOBE_VARIES
                            mov __bp,a
                            mov a,__iar1

                            mov _IIC_Data[Out],a
                        #endasm

                        //IIC_Data[In]=(IIC_Data[Index]-0xd8)+3;
                        //IIC_Data[Out]=GLOBE_VARIES[IIC_Data[In]];
                    }else if(IIC_Data[Index]>=0xd0){    // 0xd0~0xff
                        #asm
                            mov a,_IIC_Data[Index]
                            sub a,0d0h
                            add a,OFFSET _IIC_RW_RAM
                            mov __mp1,a
                            mov a,BANK _IIC_RW_RAM
                            mov __bp,a
                            mov a,__iar1

                            mov _IIC_Data[Out],a
                        #endasm

                        //IIC_Data[Out]=IIC_RW_RAM[(IIC_Data[Index]-0xd0)];
                    }
                /****************************************/
            }
        }
    }



}
/*******************************************************************/




