文件：USER_PROGRAM_VO1.c 盛群编译器版本 3.00 页次1



; 101: const	uchar	C_NUM_7SEG[17]={
 101  0000              _C_NUM_7SEG .SECTION INPAGE PRIVATE 'CODE'
 101  0000              PUBLIC l_C_NUM_7SEG
 101  0000              l_C_NUM_7SEG:
 101  0000  0386        ADDM A,[06h]
 101  0001              _C_NUM_7SEG:
 101  0001  09CF        RET A,207
 101  0002  0903        RET A,3
 101  0003  095E        RET A,94
 101  0004  095B        RET A,91
 101  0005  0993        RET A,147
 101  0006  09D9        RET A,217
 101  0007  09DD        RET A,221
 101  0008  0943        RET A,67
 101  0009  09DF        RET A,223
 101  000A  09DB        RET A,219
 101  000B  09D7        RET A,215
 101  000C  099D        RET A,157
 101  000D  091C        RET A,28
 101  000E  091F        RET A,31
 101  000F  099D        RET A,157
 101  0010  09D4        RET A,212
 101  0011  0900        RET A,0

; 117: {
 117  0012              __ptm0rph EQU [06eH]
 117  0012              __ptm0rpl EQU [06dH]
 117  0012              __ptm0ah EQU [06cH]
 117  0012              __ptm0al EQU [06bH]
 117  0012              __ptm0dh EQU [06aH]
 117  0012              __ptm0dl EQU [069H]
 117  0012              __ptm0c1 EQU [068H]
 117  0012              __ptm0c0 EQU [067H]
 117  0012              __ctm0ah EQU [066H]
 117  0012              __ctm0al EQU [065H]
 117  0012              __ctm0dh EQU [064H]
 117  0012              __ctm0dl EQU [063H]
 117  0012              __ctm0c1 EQU [062H]
 117  0012              __ctm0c0 EQU [061H]
 117  0012              __tkm3c1 EQU [060H]
 117  0012              __tkm3c0 EQU [05fH]
 117  0012              __tkm3roh EQU [05eH]
 117  0012              __tkm3rol EQU [05dH]
 117  0012              __tkm316dh EQU [05cH]
 117  0012              __tkm316dl EQU [05bH]
 117  0012              __tkm2c1 EQU [05aH]
 117  0012              __tkm2c0 EQU [059H]
 117  0012              __tkm2roh EQU [058H]
 117  0012              __tkm2rol EQU [057H]
 117  0012              __tkm216dh EQU [056H]
 117  0012              __tkm216dl EQU [055H]
 117  0012              __tkm1c1 EQU [054H]
 117  0012              __tkm1c0 EQU [053H]
 117  0012              __tkm1roh EQU [052H]
 117  0012              __tkm1rol EQU [051H]
 117  0012              __tkm116dh EQU [050H]
 117  0012              __tkm116dl EQU [04fH]
文件：USER_PROGRAM_VO1.c 盛群编译器版本 3.00 页次2 

 117  0012              __tkm0c1 EQU [04eH]
文件：USER_PROGRAM_VO1.C 盛群编译器版本 3.00 页次2

 117  0012              __tkm0c0 EQU [04dH]
 117  0012              __tkm0roh EQU [04cH]
 117  0012              __tkm0rol EQU [04bH]
 117  0012              __tkm016dh EQU [04aH]
 117  0012              __tkm016dl EQU [049H]
 117  0012              __tkc1 EQU [048H]
 117  0012              __tk16dh EQU [047H]
 117  0012              __tk16dl EQU [046H]
 117  0012              __tkc0 EQU [045H]
 117  0012              __tktmr EQU [044H]
 117  0012              __pdpu EQU [043H]
 117  0012              __pdc EQU [042H]
 117  0012              __pd EQU [041H]
 117  0012              __ctrl EQU [03dH]
 117  0012              __pcpu EQU [03bH]
 117  0012              __pcc EQU [03aH]
 117  0012              __pc EQU [039H]
 117  0012              __slcdc3 EQU [036H]
 117  0012              __slcdc2 EQU [035H]
 117  0012              __slcdc1 EQU [034H]
 117  0012              __slcdc0 EQU [033H]
 117  0012              __tmpc EQU [030H]
 117  0012              __txr_rxr EQU [02cH]
 117  0012              __brg EQU [02bH]
 117  0012              __ucr2 EQU [02aH]
 117  0012              __ucr1 EQU [029H]
 117  0012              __usr EQU [028H]
 117  0012              __iica EQU [027H]
 117  0012              __iicd EQU [026H]
 117  0012              __iicc1 EQU [025H]
 117  0012              __iicc0 EQU [024H]
 117  0012              __i2ctoc EQU [023H]
 117  0012              __pbpu EQU [022H]
 117  0012              __pbc EQU [021H]
 117  0012              __pb EQU [020H]
 117  0012              __eed EQU [01fH]
 117  0012              __eea EQU [01eH]
 117  0012              __pscr EQU [01cH]
 117  0012              __tbc EQU [01bH]
 117  0012              __wdtc EQU [01aH]
 117  0012              __sledc1 EQU [019H]
 117  0012              __sledc0 EQU [018H]
 117  0012              __pawu EQU [017H]
 117  0012              __papu EQU [016H]
 117  0012              __pac EQU [015H]
 117  0012              __pa EQU [014H]
 117  0012              __lvrc EQU [013H]
 117  0012              __lvdc EQU [012H]
 117  0012              __intc3 EQU [011H]
 117  0012              __intc2 EQU [010H]
 117  0012              __intc1 EQU [0fH]
 117  0012              __intc0 EQU [0eH]
 117  0012              __integ EQU [0dH]
 117  0012              __smod EQU [0bH]
 117  0012              __status EQU [0aH]
 117  0012              __tbhp EQU [09H]
 117  0012              __tblh EQU [08H]
文件：USER_PROGRAM_VO1.c 盛群编译器版本 3.00 页次3 

 117  0012              __tblp EQU [07H]
 117  0012              __pcl EQU [06H]
 117  0012              __acc EQU [05H]
文件：USER_PROGRAM_VO1.C 盛群编译器版本 3.00 页次3

 117  0012              __bp EQU [04H]
 117  0012              __mp1 EQU [03H]
 117  0012              __iar1 EQU [02H]
 117  0012              __mp0 EQU [01H]
 117  0012              __iar0 EQU [00H]
 117  0000              @@Interrupt_Extemal .SECTION AT 04H 'CODE'
 117  0000  2800     R  JMP _Interrupt_Extemal
 117  0000              @Interrupt_Extemal .SECTION 'CODE'
 117  0000              _Interrupt_Extemal PROC
 117  0000  0080     E  MOV V1A,A
 117  0001  070A        MOV A,[0AH]
 117  0002  0080     E  MOV V1S,A

; 118: 	_nop();		
 118  0003  0000        NOP
 118  0004              L1:
 118  0004  0700     E  MOV A,V1S
 118  0005  008A        MOV [0AH],A
 118  0006  0700     E  MOV A,V1A
 118  0007  0004        RETI
 118  0008              _Interrupt_Extemal ENDP
 118  0008              RAMBANK 0 @Interrupt_Extemal
 118  0000              @Interrupt_Extemal .SECTION 'DATA'

; 127: {
 127  0000              @@Interrupt_CTM0_CCRP .SECTION AT 010H 'CODE'
 127  0000  2800     R  JMP _Interrupt_CTM0_CCRP
 127  0000              @Interrupt_CTM0_CCRP .SECTION 'CODE'
 127  0000              _Interrupt_CTM0_CCRP PROC
 127  0000  0080     E  MOV V4A,A
 127  0001  070A        MOV A,[0AH]
 127  0002  0080     E  MOV V4S,A

; 128:  _nop();	
 128  0003  0000        NOP
 128  0004              L2:
 128  0004  0700     E  MOV A,V4S
 128  0005  008A        MOV [0AH],A
 128  0006  0700     E  MOV A,V4A
 128  0007  0004        RETI
 128  0008              _Interrupt_CTM0_CCRP ENDP
 128  0008              RAMBANK 0 @Interrupt_CTM0_CCRP
 128  0000              @Interrupt_CTM0_CCRP .SECTION 'DATA'

; 139: {
 139  0000              @@Interrupt_CTM0_CCRA .SECTION AT 014H 'CODE'
 139  0000  2800     R  JMP _Interrupt_CTM0_CCRA
 139  0000              @Interrupt_CTM0_CCRA .SECTION 'CODE'
 139  0000              _Interrupt_CTM0_CCRA PROC
 139  0000  0080     E  MOV V5A,A
 139  0001  070A        MOV A,[0AH]
 139  0002  0080     E  MOV V5S,A
 139  0003  0703        MOV A,[03H]
 139  0004  0080     E  MOV V5MP1,A
 139  0005  0704        MOV A,[04H]
文件：USER_PROGRAM_VO1.c 盛群编译器版本 3.00 页次4 

 139  0006  0080     E  W_TIME<=C_1_H)     // 低电平寄存器范围在 750uS-1000uS之间, 表示此BIT为 1
												{
													r_receive_buf[0]|=0x00;
												}
												else
													{
														r_RECEIVE_NUM_COUNT=0;
														/*
//														r_receive_buf[0]=0;
//														r_receive_buf[1]=0;
//														r_receive_buf[2]=0;
//														r_receive_buf[3]=0;
//														r_receive_buf[4]=0;
//														r_receive_buf[5]=0;
//														r_receive_buf[6]=0;
//														r_receive_buf[7]=0;
														*/
													}
										}
								 if(b_receive_ok==0)														//  传输结束前 移动BIT位, 保存接收的数据
								 	{
										_status&=0xf0;
										#asm
										  rlc		_r_receive_buf[0]
										  rlc		_r_receive_buf[1]
										  rlc		_r_receive_buf[2]
										  rlc		_r_receive_buf[3]
										  rlc		_r_receive_buf[4]
										  rlc		_r_receive_buf[5]
										  rlc		_r_receive_buf[6]
										  rlc		_r_receive_buf[7]
										#endasm
									/*
//									_rlc(r_receive_buf[0]);						// 接收数据
//									_rlc(r_receive_buf[1]);
//									_rlc(r_receive_buf[2]);
//									_rlc(r_receive_buf[3]);
//									_rlc(r_receive_buf[4]);
//									_rlc(r_receive_buf[5]);
//									_rlc(r_receive_buf[6]);
//									_rlc(r_receive_buf[7]);
									*/
									  r_RECEIVE_NUM_COUNT++;
								  }
								 else									//  如果 b_receive_ok 不为 0, 说明上一次数据调整未完成, 不接收新的数据数据
								 	{
								 		r_RECEIVE_NUM_COUNT=0;
								 	}
							}
							else
								{																							// 64BIT 接收完成
									if(r_receive_buf[0]==0xf0) 
										{
											b_receive_ok=1;												  //  数据接收完成 且正确... 此标志用于对显示缓存的更新
											r_Adjustment_num=6;
										}
								}
					}
		}
		else
文件：USER_PROGRAM_VO1.c 盛群编译器版本 3.00 页次5 

			{
				if(b_pin_RECEIVE_D)															// 上次 接收脚的状态
					{																			  			// 1->0
						b_pin_RECEIVE_D=0;
						r_PIN_RECEIVE_LOW_TIME=0;
					}
					else
						{																			  // 0->0							
							 if(r_PIN_RECEIVE_LOW_TIME<10) r_PIN_RECEIVE_LOW_TIME++;
						}
			}
			
				
	if(b_receive_ok)								// 接收正确后，将接收的数据调整到显示BUF区
		{
			if(r_Adjustment_num>0) 
				{
					r_Adjustment_num--;	
					if(r_Adjustment_num<4)          //数据排列---针对数码管
						{
							r_show_buf[r_Adjustment_num]=r_receive_buf[r_Adjustment_num+1];
						}
						else                         //数据排列---针对LED
							{
								r_temp=r_receive_buf[(r_Adjustment_num/2)+5];
								if(r_Adjustment_num%2) r_temp=r_temp>>4;
								r_temp1=(r_temp<<1)&0x10;
								r_temp=r_temp&0x07;
								r_show_led_buf[r_Adjustment_num]=r_temp1|r_temp;								
							}
				}				
				else 
					{ 
						b_receive_ok=0;
						r_Adjustment_num=6;
					}
		}		

	//-----------------
	//发送数据数据
	//
		if(b_KEY_SEND)																	// 开始输出数据
		{
			if(r_SEND_BIT_TIME)
				{				
					r_SEND_BIT_TIME--;
					_pin_SEND_D=0;
					if(b_PIN_ST)
						 _pin_SEND_C=1;
						else
						 _pin_SEND_C=0;
				}
				else
					{
						if(b_PIN_ST)
							{				
								if(r_SEND_KEY_COUNT<16)
									{
										if(r_SEND_KEY_COUNT==0)                  	//  传输 KEY 数据,  保留KEY反码
											{
文件：USER_PROGRAM_VO1.c 盛群编译器版本 3.00 页次6 

													r_send_buf1=~r_send_buf;						// 
											}
											else
												{
													if(r_SEND_KEY_COUNT==8)							//  传输KEY反码
														{
															r_send_buf=r_send_buf1;         //  KEY值传输完成后, 更新反码到BUF区
														}
												}
										r_SEND_KEY_COUNT++;
									}
									else
										{
											b_KEY_SEND=0;
										}
									
								b_PIN_ST=0;
								if(r_send_buf&0x80) r_SEND_BIT_TIME=7;				// 1: -> LOW 8*250uS 
									else r_SEND_BIT_TIME=3;                     // 0: -> LOW 4*250uS
							}
							else
								{
									b_PIN_ST=1;
									if(r_send_buf&0x80) r_SEND_BIT_TIME=3;				// 1: -> HIGH  4*250uS 
										else r_SEND_BIT_TIME=7;                     // 0: -> HIGH  8*250uS
								  r_send_buf=r_send_buf<<1;											// BUF数据左移一位, 用于下一BIT传输
								}
					}
		}
	
}

//==============================================
//**********************************************
// PTM1 CCRP INTERRUPT
//==============================================
#pragma vector  Interrupt_PTM1_CCRP       @ 0x18
void Interrupt_PTM1_CCRP()
{
 _nop();	
	
}

//==============================================
//**********************************************
// PTM1 CCRA INTERRUPT
//==============================================
#pragma vector  Interrupt_PTM1_CCRA        @ 0x1C
void Interrupt_PTM1_CCRA()
{
 _nop();
}

//==============================================
//**********************************************
//==============================================
void USER_PROGRAM_INITIAL()
{
  _papu=0;
  _pcpu=0;
文件：USER_PROGRAM_VO1.c 盛群编译器版本 3.00 页次7 

  _pdpu=0;
  
  _pac=0xff;	
  _pcc=0xff;	
  _pdc=0xff;	
  _pc=0xff;		
  _pd=0xff;	
  _pa=0xff;	
  
  _lvdc=0x07;
  	 
  _slcdc0=0x00;
  _slcdc1=0x00;
  _slcdc2=0x00;
  _slcdc3=0x00;
  _tmpc=0x00;			// PTM 输出功能控制寄存器
  
  _usr=0x00;
  _ucr1=0x00;
  _ucr2=0x00;
  _txr_rxr=0x00;
  _brg=0x00;
  
  _sledc0=0xff;		// IO驱动电流设定到最大
  _sledc1=0xff;		// IO驱动电流设定到最大
  
  _pscr=0x00;			// 时基-时钟源设置寄存器
  //_ctrl=0x10;			// 0x00: 8MHz, 0x10:16MHz , 0x02: 12MHz, 0x11:8MHz 
  
  _iicc0=0x00;
  _iicc1=0x00;
  _iicd=0x00;
  _iica=0x00;
  
  //;---------定时器TM0配置
	 /*--remark:-
	 		//;--------TM0C0 
       _ct0pau=0;								// TM0C0.7---TM0寄存器暂停位; 1: 暂停
       _ct0ck2=1;
       _ct0ck1=1;
       _ct0ck0=1;								// TM0C0[6:4](T0CK[2:0])---TM0 时钟源; 000：Fsys/4; 001:Fsys; 010:Fh/16; 011:Fh/64; 100&101:Ftbc; 110:TCK0上升沿; 111:TCK0下降沿
			 _ct0on=0;									// TM0C0.3---计数器运行控制位
			 
		 //;--------TM0C1  
			 _ct0m1=1;
			 _ct0m0=1;									// TM0C1[7:6](T0M[1:0])---功能选择; 00: 比较匹配输出; 01：捕捉输入模式; 10: PWM模式; 11:定时计数模式
			 _ct0io1=0;
			 _ct0io0=0;								// TM0C1[5:4](T0IO[1:0])---见规格书; 定时模式未使用. PWM模式---10: PWM输出
			 _ct0oc=0;									// TM0C1.3--- 输出脚初始状态; 0: 初始低/低有效； 1: 初始高/高有效
			 _ct0pol=0;								// TM0C1.2--- 输出极性; 0： 同相			 
			 _ct0dpx=0;								// TM0C1.1--- 占空比/频率 比较选择; 0： CCRP周期, CCRA=占空比
			 _ct0cclr=0;								// TM0C1.0--- 计数器周期匹配; 0: CCRP匹配; 1: CCRA匹配
			 
		 //;--------
			 _tm0rp=100;							//  CCRP周期： 256*_tm0rp个TM0时钟周期
			*/ 
			 _ctm0al=1000&0xff;  			// // 低字节的操作, 仅在其相应的高字节操作执行时发生 //
			 _ctm0ah=1000/256;								//  CCRA周期： (256*_tm0ah + _tm0al)个TM0时钟周期
			 
			 _ctm0c0=0x00;							// CTM0时钟： Fsys/4   
文件：USER_PROGRAM_VO1.c 盛群编译器版本 3.00 页次8 

			 _ctm0c1=0x0c1;							//   定时计数模式;  CCRA匹配;  定时时间 1000*4/16MHz = 250uS
			 		 
			 _ct0on=1;
			 	
			 	 //;----------INTCG
	    _ints1=1;
	    _ints0=1;									// _integ[1:0]:INT0触发沿, 11:双边
	 //;----------INTC0
	    // INTC0[6:4]: 中断请求标志： _int0f, _ocpf, _ovpf
	    _inte=0;										//INTC0.1: INT0 中断控制位
	    _emi=1;											//INTC0.0: 总中断
	 //;----------MFI1
	   //  MFI0[5:4] : 中断请求标志: _t0af (TM0, CCRA), _t0pf (TM0, CCRP)
	   //  MFI0[1:0] : 中断控制标志: _ctma0e (TM0, CCRA), _ctmp0e (TM0, CCRP)   
	   _ctma0e=1;	
		
		 r_receive_buf[0]=0xf0;
		 r_receive_buf[1]=8;
		 r_receive_buf[2]=8;
		 r_receive_buf[3]=8;
		 r_receive_buf[4]=8;
		 r_receive_buf[5]=8;
		 r_receive_buf[6]=8;
		 r_receive_buf[7]=8;
		 b_receive_ok=1;
		 r_Adjustment_num=6;
}

//==============================================
//**********************************************
//==============================================
void USER_PROGRAM()
{
 if(b_2ms)
 	{
 		r_2ms=0;
 		BS82C16A_LIBV413();
 	}
 
 if(SCAN_CYCLEF)
 	{ 
	  GET_KEY_BITMAP();
	  
	  if(r_KEY_STATUS1!=DATA_BUF[0]||r_KEY_STATUS2!=DATA_BUF[1])
	  	{
	  		r_KEY_STATUS1=DATA_BUF[0];
	  		r_KEY_STATUS2=DATA_BUF[1];
	  		r_KEY_DEBOUNCE_TIME=0;
	  	}
	  	else
	  		{
	  			if(r_KEY_DEBOUNCE_TIME<C_KEY_DEBOUNCE_TIME)
	  				{
	  					r_KEY_DEBOUNCE_TIME++;
	  				}
	  				else
	  				{
	  					if(r_KEY_BUF[0]!=r_KEY_STATUS1||r_KEY_BUF[1]!=r_KEY_STATUS2)
	  						{
			  					b_KEY_SEND=0;														// 更新按键数据过程中, 不发送
文件：USER_PROGRAM_VO1.c 盛群编译器版本 3.00 页次9 

			  					r_KEY_BUF[0]=r_KEY_STATUS1;
			  					r_KEY_BUF[1]=r_KEY_STATUS2;
	  							b_KEY_ACTION=1;
			  					b_KEY_SEND=1;														// 更新按键数据完成后, 发送
	  						}
	  				}
	  		}
  }
  
  
  	if(r_KEY_BUF[0]==0x01&&r_KEY_BUF[1]==0)	{ r_temp2=0xA1; r_show_led_buf[1]=0x01;}
  	if(r_KEY_BUF[0]==0x02&&r_KEY_BUF[1]==0)	{ r_temp2=0xA2; r_show_led_buf[2]=0x10;}
  	if(r_KEY_BUF[0]==0x04&&r_KEY_BUF[1]==0)	{ r_temp2=0xA3; r_show_led_buf[3]=0x10;}
  	if(r_KEY_BUF[0]==0x08&&r_KEY_BUF[1]==0)	r_temp2=0xA4;
  	if(r_KEY_BUF[0]==0x010&&r_KEY_BUF[1]==0)	r_temp2=0xA5;
  	if(r_KEY_BUF[0]==0x020&&r_KEY_BUF[1]==0)	r_temp2=0xA6;
  	if(r_KEY_BUF[0]==0x040&&r_KEY_BUF[1]==0)	r_temp2=0xA7;
  	if(r_KEY_BUF[0]==0x080&&r_KEY_BUF[1]==0)	r_temp2=0xA8;
  	if(r_KEY_BUF[1]==0x01&&r_KEY_BUF[0]==0)	r_temp2=0xA9;
  	if(r_KEY_BUF[1]==0x02&&r_KEY_BUF[0]==0)	r_temp2=0xAA;
  	if(r_KEY_BUF[1]==0x04&&r_KEY_BUF[0]==0)	r_temp2=0xAB;
  	if(r_KEY_BUF[1]==0x08&&r_KEY_BUF[0]==0)	r_temp2=0xAC;
  	if(r_KEY_BUF[1]==0x010&&r_KEY_BUF[0]==0)	r_temp2=0xAD;
  	if(r_KEY_BUF[1]==0x020&&r_KEY_BUF[0]==0)	r_temp2=0xAE;
  	if(r_KEY_BUF[1]==0x040&&r_KEY_BUF[0]==0)	r_temp2=0xAF;
  	if(r_KEY_BUF[1]==0x080&&r_KEY_BUF[0]==0)	r_temp2=0xA0;
  	if(r_KEY_BUF[1]==0&&r_KEY_BUF[0]==0) { r_temp2=0;r_show_led_buf[1]=0x00;r_show_led_buf[2]=0x00;r_show_led_buf[3]=0x00;}
  	
  	if(b_KEY_SEND==0)   r_send_buf=r_temp2;       // 在不传输的时段, 更新按键值
  	
  	//  显示测试 按键值
	  r_show_buf[1]=r_temp2&0x0f;
	  r_show_buf[0]=(r_temp2>>4)&0x0f;
	  r_show_buf[2]=~r_show_buf[0];
	  r_show_buf[3]=~r_show_buf[1];
	  r_show_led_buf[0]=0x00;									// bit0(PA0): COM2;  bit1(PA1): COM3;  bit2(PA2):COM1;  bit4(PA4):COM4
	  //r_show_led_buf[1]=0x01;									// L7: COM2(PA0)  ,SEG2
	  //r_show_led_buf[2]=0x10; 								// L14: COM4(PA4) ,SEG3
	  //r_show_led_buf[3]=0x10; 								// L10: COM4(PA4) ,SEG4
	  r_show_led_buf[4]=0x00;
	  r_show_led_buf[5]=0x00;
}
