"File: BS82C16A_LIBV413.asm  Holtek Cross-Assembler  Version 2.92      Page 1


   1  0000              message '***************************************************************'
   2  0000              message '*PROJECT NAME :BS82C16A LIBRARY V4.13                         *' 
   3  0000              message '*     VERSION :                                               *' 
   4  0000              message '*     IC BODY :BS82C16A                                       *' 
   5  0000              message '* ICE VERSION :ICE VERSION IDE3000V7.71                       *' 
   6  0000              message '*      REMARK :                                               *' 
   7  0000              message '***************************************************************'
   8  0000                      
   9  0000              
  10  0000                      #define LibraryVersion          413H
  11  0000                      #define KeyAmount               16
  12  0000                      ;--                                                
  13  0000                      #define BalanceCentralPoint     128
  14  0000                      ;--                  
  15  0000                      #define RAMbank0Address         080H
  16  0000                      #define RAMbank1Address         080H
  17  0000                      #define RAMbank2Address         080H
  18  0000              ;;      #define RAMbank3Address         080H
  19  0000                      ;--
  20  0000                      #define TouchINTaddress         008H
  21  0000                      #define LibraryVersionAddress   TouchINTaddress + 1
  22  0000                      #define TouchTimeBaseINTaddress 00CH
  23  0000              
  24  0000              
  25  0000              
  26  0000                      INCLUDE BS82C16A_LIBV413.INC






  27  0000              
  28  0000                      ;-SUBROUTIN
  29  0000                      PUBLIC  _BS82C16A_LIBV413_INITIAL 
  30  0000                      PUBLIC  _BS82C16A_LIBV413         
  31  0000                      PUBLIC  _LIBRARY_RESET                  
  32  0000                      PUBLIC  _GET_KEY_BITMAP
  33  0000                      PUBLIC  _GET_ENV_VALUE
  34  0000                      PUBLIC  _GET_REF_VALUE
  35  0000                      PUBLIC  _GET_RCC_VALUE
  36  0000                      PUBLIC  _GET_LIB_VER
  37  0000                      PUBLIC  _GET_KEY_AMOUNT
  38  0000                      PUBLIC  _CHECK_KEY_WAKEUP
  39  0000                    
  40  0000                      ;-DATA
  41  0000                      PUBLIC  _DATA_BUF
  42  0000                      PUBLIC  _GLOBE_VARIES
  43  0000                      PUBLIC  _KEY_REF 
  44  0000                      PUBLIC  _KEY_STATUS
  45  0000                      PUBLIC  _TKS_TIME_BASE
  46  0000                      PUBLIC  _STANDBY_TIME
  47  0000                      PUBLIC  _KEY_IO_SEL   
  48  0000                      PUBLIC  _SAMPLE_TIMES 
  49  0000                      PUBLIC  _KEY_DATA
  50  0000                    
  51  0000                      ;-FLAG
  52  0000                      PUBLIC  _TKS_FLAGA  
  53  0000                      PUBLIC  _SCAN_CYCLEF
"File: BS82C16A_LIBV413.asm  Holtek Cross-Assembler  Version 2.92      Page 2

  54  0000                      PUBLIC  _FORCE_CALIBRATEF
  55  0000                      PUBLIC  _ANY_KEY_PRESSF
  56  0000                      PUBLIC  _TKS_ACTIVEF
  57  0000                      PUBLIC  _TKS_63MSF
  58  0000                      PUBLIC  _TKS_250MSF
  59  0000                      PUBLIC  _TKS_500MSF
  60  0000              
  61  0000              
  62  0000                                     
  63  0000                      ;-----------------                                       
  64  0000                      ;-RAM BANK DECLARE
  65  0000                      ;-----------------
  66  0000              ifdef   RAMbank0Address                                                     
  67  0000                      RAMBANK 0 TKS_LIBRARY_DATA0
  68  0000              endif
  69  0000              ;----------------------------------
  70  0000              ifdef   RAMbank1Address
  71  0000                      RAMBANK 1 TKS_LIBRARY_DATA1
  72  0000              endif                                                            
  73  0000              ;----------------------------------
  74  0000              ifdef   RAMbank2Address
  75  0000                      RAMBANK 2 TKS_LIBRARY_DATA2
  76  0000              endif                                                            
  77  0000              ;----------------------------------
  78  0000              ifdef   RAMbank3Address
  79  0000                      RAMBANK 3 TKS_LIBRARY_DATA3
  80  0000              endif                                                            
  81  0000              ;----------------------------------
  82  0000                                                                   
  83  0000                      ;-DATA LENGTH DEFINE                                                                    
  84  0000                      #define         BYTE_DATA               1       ;BYTE                                   
  85  0000                      #define         WORD_DATA               2       ;WORD                                   
  86  0000                                                                                                      
  87  0000                                                                                                      
  88  0000              ;--------------------------------                           
  89  0000              ;------- RAM BANK0 AREA ---------                           
  90  0000              ;--------------------------------                           
  91  0000                      TKS_LIBRARY_DATA0       .SECTION AT RAMbank0Address   'DATA'                            
  92  0000                                                                                                      
  93  0000              ;-TKS GLOBE VARIES
  94  0000  0013[       _GLOBE_VARIES   DB      KeyAmount+3 DUP(?)                                              
            00
            ]
  95  0013              TKS_OPTIONA     EQU     0                                                               
  96  0013              TKS_OPTIONB     EQU     1                                                               
  97  0013              TKS_OPTIONC     EQU     2                                                               
  98  0013              KEY1_THR        EQU     3                                                               
  99  0013              KEY2_THR        EQU     4                                                               
 100  0013              KEY3_THR        EQU     5                                                               
 101  0013              KEY4_THR        EQU     6  
 102  0013              if      KeyAmount > 4                                        
 103  0013              KEY5_THR        EQU     7                                                               
 104  0013              KEY6_THR        EQU     8                                                               
 105  0013              KEY7_THR        EQU     9                                                               
 106  0013              KEY8_THR        EQU     10
 107  0013              endif
 108  0013              if      KeyAmount > 8                                        
 109  0013              KEY9_THR        EQU     11                                                              
 110  0013              KEY10_THR       EQU     12                                                              
 111  0013              KEY11_THR       EQU     13                                                              
"File: BS82C16A_LIBV413.asm  Holtek Cross-Assembler  Version 2.92      Page 3

 112  0013              KEY12_THR       EQU     14                                                              
 113  0013              endif
 114  0013              if      KeyAmount > 12                                       
 115  0013              KEY13_THR       EQU     15                                                              
 116  0013              KEY14_THR       EQU     16                                                              
 117  0013              KEY15_THR       EQU     17                                                              
 118  0013              KEY16_THR       EQU     18                                                              
 119  0013              endif
 120  0013              if      KeyAmount > 16                                       
 121  0013              KEY17_THR       EQU     19                                                              
 122  0013              KEY18_THR       EQU     20                                                              
 123  0013              KEY19_THR       EQU     21                                                              
 124  0013              KEY20_THR       EQU     22                                                              
 125  0013              endif
 126  0013              if      KeyAmount > 20                                       
 127  0013              KEY21_THR       EQU     23                                                              
 128  0013              KEY22_THR       EQU     24                                                              
 129  0013              KEY23_THR       EQU     25                                                              
 130  0013              KEY24_THR       EQU     26
 131  0013              endif                                                 
 132  0013              ;-OPTION A BIT DEFINE                                                                   
 133  0013              DBCE_DEF0       EQU     0                                                               
 134  0013              DBCE_DEF1       EQU     1                                                               
 135  0013              DBCE_DEF2       EQU     2                                                               
 136  0013              DBCE_DEF3       EQU     3                                                               
 137  0013              CALIBRATE_TIME0 EQU     4                                                               
 138  0013              CALIBRATE_TIME1 EQU     5                                                               
 139  0013              CALIBRATE_TIME2 EQU     6                                                               
 140  0013              CALIBRATE_TIME3 EQU     7                                                               
 141  0013              ;-OPTION B BIT DEFINE                                                                   
 142  0013              SENSIVITY_LEVEL EQU     0       ;0/2=SENSIVITY LOW ; 1/2=SENSIVITY HIGH            
 143  0013              ;               EQU     1                                                               
 144  0013              ;               EQU     2                                                               
 145  0013              ;               EQU     3                                                              
 146  0013              MAXON0          EQU     4       ;0=MAXIMUM ON TIME DISABLE                              
 147  0013              MAXON1          EQU     5                                                               
 148  0013              MAXON2          EQU     6                                                               
 149  0013              MAXON3          EQU     7                                                               
 150  0013              ;-OPTION C BIT DEFINE                                                                   
 151  0013              RESERVEA_OPN    EQU     0                                                               
 152  0013              RESERVEB_OPN    EQU     1                                                               
 153  0013              SAMPLE_SPEED    EQU     2       ;0/1 NORMAL/FAST SAMPLING SPEED                      
 154  0013              AUTO_RS         EQU     3       ;0/1 MANUAL/AUTO SELECT RS               
 155  0013              CS_PROTECT      EQU     4       ;0/1 DISABLE/ENABLE CS PROTECT MODE                    
 156  0013              ONE_KEY_ACTIVE  EQU     5       ;0/1 ONE/ANY KEY ACTIVE                                 
 157  0013              POWER_SAVE      EQU     6       ;0/1 DISABLE/ENABLE POWER SAVING MODE      
 158  0013              ACTIVE_LOGIC    EQU     7       ;0/1 DISABLE/ENABLE UPDATE REFERENCE WHEN PRESS
 159  0013              
 160  0013              
 161  0013              ;-COMMON RAM DEFINE                                                                     
 162  0013  0008[       _DATA_BUF       DB      8 DUP(?)                                                        
            00
            ]
 163  001B              ;THRESHOLD      EQU     _DATA_BUF[0]                                                    
 164  001B              ;               EQU     _DATA_BUF[1]                                                    
 165  001B              HYSTERESIS      EQU     _DATA_BUF[2]                                                    
 166  001B              POS_COUNT       EQU     _DATA_BUF[3]                                                    
 167  001B              NEG_COUNT       EQU     _DATA_BUF[4]                                                    
 168  001B              NEG_COUNT_BACKUP EQU    _DATA_BUF[5]                                                    
 169  001B              MAX_COUNT       EQU     _DATA_BUF[6] 
"File: BS82C16A_LIBV413.asm  Holtek Cross-Assembler  Version 2.92      Page 4

 170  001B              MAX_COUNT_KEY   EQU     _DATA_BUF[7]   
 171  001B              ;-MP & BP BUFFER
 172  001B              BP_BUF          EQU     _DATA_BUF[2] 
 173  001B              MP_BUF          EQU     _DATA_BUF[3]
 174  001B              
 175  001B              
 176  001B                    
 177  001B              ;-LIBRARY USED RAM DEFINE
 178  001B  00          _SAMPLE_TIMES   DB      ?                                                               
 179  001C  00          _STANDBY_TIME   DB      ?                                                               
 180  001D  00          _TKS_TIME_BASE  DB      ?                                                               
 181  001E  0002[       _KEY_IO_SEL     DB      ((KeyAmount-1)/8)+1 DUP(?)   ;BIT CONETNT 1=KEY 0=IO       
            00
            ]
 182  0020  0002[       _KEY_DATA       DB      ((KeyAmount-1)/8)+1 DUP(?)                                      
            00
            ]
 183  0022  0002[       KEY_BUF         DB      ((KeyAmount-1)/8)+1 DUP(?)                                      
            00
            ]
 184  0024  00          KEY_DBCE        DB      ?     
 185  0025  00          KEY_STATE_BUF   DB      ?               
 186  0026  00          CHANNEL_INDEX   DB      ?                                                               
 187  0027  0002[       BALANCE_BUF     DB      2 DUP(?)                                                        
            00
            ]
 188  0029  00          HALT_CAL_TIME   DB      ?                                                                 
 189  002A  00          CS_STAY_TIME    DB      ?
 190  002B  00          TKS_TIMER       DB      ?                                                                         
 191  002C  00          TKS_TIMERB      DB      ?                            
 192  002D              ;--                                               
 193  002D              CAL_TIMER       EQU     BALANCE_BUF[0]                                                                         
 194  002D              UNBALANCE_TIMER EQU     BALANCE_BUF[1]                    
 195  002D              HALT_DATA_BUF   EQU     TKS_TIMER
 196  002D                                                                             
 197  002D              ;-LIBRARY USED FLAG DEFINE
 198  002D              _TKS_FLAGA      LABEL   BYTE    ;for C complier V3
 199  002D  00          _FORCE_CALIBRATEF DBIT                                                                  
 200  002D              _TKS_ACTIVEF    DBIT                                                                    
 201  002D              _SCAN_CYCLEF    DBIT                                                                    
 202  002D              _ANY_KEY_PRESSF DBIT 
 203  002D              _TKS_63MSF      DBIT                                                                    
 204  002D              _TKS_250MSF     DBIT                                                                    
 205  002D              _TKS_500MSF     DBIT  
 206  002D              POWER_ON_STABLEF DBIT
 207  002E                
 208  002E                                                                                                      
 209  002E              ifdef   RAMbank1Address
 210  002E              ;--------------------------------                              
 211  002E              ;------- RAM BANK1 AREA ---------                              
 212  002E              ;--------------------------------                              
 213  0000                      TKS_LIBRARY_DATA1       .SECTION AT RAMbank1Address  'DATA'
 214  0000              endif                                 
 215  0000              ;-KEY STATUS & TIMER RAM DEFINE                                                                  
 216  0000  0030[       _KEY_STATUS     DB      KeyAmount*(WORD_DATA+BYTE_DATA) DUP(?)
            00
            ]
 217  0030              CS_INTERFEREF   EQU     7                                      
 218  0030              KEY_PRESSF      EQU     6                                      
 219  0030              KEY_STABLEF     EQU     5                                      
"File: BS82C16A_LIBV413.asm  Holtek Cross-Assembler  Version 2.92      Page 5

 220  0030              KEY_DBCEF       EQU     4                                      
 221  0030              KEY_DBCE3       EQU     3                                      
 222  0030              KEY_DBCE2       EQU     2                                      
 223  0030              KEY_DBCE1       EQU     1                                                               
 224  0030              KEY_DBCE0       EQU     0   
 225  0030              ;--                                   
 226  0030              _KEY_TIMER      EQU     _KEY_STATUS + 1                                                 
 227  0030              ;--
 228  0030              _CS_DBCE        EQU     _KEY_STATUS + 2 
 229  0030              CS_STRONGF      EQU     7
 230  0030              CS_PRESTRONGF   EQU     5
 231  0030              CS_APPEARF      EQU     6
 232  0030              CS_DBCE4        EQU     4
 233  0030              CS_DBCE3        EQU     3
 234  0030              CS_DBCE2        EQU     2
 235  0030              CS_DBCE1        EQU     1
 236  0030              CS_DBCE0        EQU     0
 237  0030                                   
 238  0030                         
 239  0030              ifdef   RAMbank2Address
 240  0030              ;--------------------------------                              
 241  0030              ;------- RAM BANK3 AREA ---------                              
 242  0030              ;--------------------------------                              
 243  0000                      TKS_LIBRARY_DATA2       .SECTION AT RAMbank2Address  'DATA'
 244  0000              endif                        
 245  0000                                                                                                      
 246  0000              ;-DEFINE KEY_RE RAM                                                                   
 247  0000  0040[       _KEY_REF        DB      KeyAmount*(WORD_DATA+WORD_DATA) DUP(?)
            00
            ]
 248  0040              _KEY_FREQ       EQU     _KEY_REF+1
 249  0040              _KEY_FREQ_BOT   EQU     _KEY_REF+2
 250  0040              _BALANCE_CAP    EQU     _KEY_REF+3
 251  0040                                                                                                      
 252  0040              ;-DEFINE FILTER RAM            
 253  0040  0040[       _KEY_LIMIT      DB      KeyAmount*(WORD_DATA+WORD_DATA) DUP(?) 
            00
            ]
 254  0080              _KEY_MAXA       EQU     _KEY_LIMIT+0
 255  0080              _KEY_MAXB       EQU     _KEY_LIMIT+1
 256  0080              _KEY_MINA       EQU     _KEY_LIMIT+2
 257  0080              _KEY_MINB       EQU     _KEY_LIMIT+3
 258  0080                                                                                                      
 259  0080              
 260  0080              
 261  0080              
 262  0080                       
 263  0080              ifdef   RAMbank3Address
 264  0080              ;--------------------------------                              
 265  0080              ;------- RAM BANK3 AREA ---------                              
 266  0080              ;--------------------------------                              
 267  0080                      TKS_LIBRARY_DATA3       .SECTION AT RAMbank3Address  'DATA'
 268  0080              endif                                 
 269  0080              
 270  0080                              ;==============
 271  0080                              ;=TKM0 INT. ===
 272  0080                              ;==============
 273  0000              TOUCH_INT       .SECTION  AT TouchINTaddress  'CODE'
 274  0000  0004                        RETI
 275  0001                              ;==============
"File: BS82C16A_LIBV413.asm  Holtek Cross-Assembler  Version 2.92      Page 6

 276  0001                              ;=LIB VERSION =
 277  0001                              ;==============
 278  0000              LIBRARY_VERSION .SECTION  AT LibraryVersionAddress 'CODE'
 279  0000  0413                        DC      LibraryVersion
 280  0001              
 281  0001                              ;==============
 282  0001                              ;=TIME BASE INT.
 283  0001                              ;==============
 284  0000              TIME_BASE_INT   .SECTION  AT TouchTimeBaseINTaddress 'CODE'
 285  0000                              ;-COUNT _TKS_TIME_BASE
 286  0000  569D                        SIZ     _TKS_TIME_BASE
 287  0001  0004                        RETI
 288  0002  5F9D                        SET     _TKS_TIME_BASE
 289  0003  0004                        RETI
 290  0004              
 291  0004              
 292  0004              
 293  0004              
 294  0000              TKS_LIBRARY_CODE        .SECTION   'CODE'
 295  0000              ;;***********************************************************                           
 296  0000              ;;*SUB. NAME:                                               *                           
 297  0000              ;;*INPUT    :                                               *                           
 298  0000              ;;*OUTPUT   :                                               *                           
 299  0000              ;;*USED REG.:                                               *                           
 300  0000              ;;*FUNCTION :                                               *                           
 301  0000              ;;***********************************************************
 302  0000              _BS82C16A_LIBV413:
 303  0000              
 304  0000              
 305  0000  752D                        CLR     _SCAN_CYCLEF
 306  0001              
 307  0001              
 308  0001                              ;-COUNT SAMPLE CYCLE (16 TIMES=40MS)
 309  0001  549B                        INC     _SAMPLE_TIMES
 310  0002  7E1B                        SZ      _SAMPLE_TIMES.4
 311  0003  5F1B                        CLR     _SAMPLE_TIMES
 312  0004              
 313  0004                              ;-CHECK IF TKS ACTIVE
 314  0004  78AD                        SNZ     _TKS_ACTIVEF
 315  0005  2000     R                  CALL    _PON_CALIBRATE
 316  0006              
 317  0006                              ;-TKM RESTART
 318  0006  2000     R                  CALL    _TKM_RESET
 319  0007              
 320  0007                              ;-IF TIMEBASE INT DISAPPER
 321  0007  3D8E                        SZ      TB0E
 322  0008  399B                        SNZ     TB0ON
 323  0009  2000     R                  CALL    TBASE_INITIAL
 324  000A              
 325  000A                              ;------------------------
 326  000A              WAIT_SYNC:      ;-WAIT 2.56 MS SYNC. TIME
 327  000A                              ;------------------------
 328  000A                              ;-CHECK IF 12MHZ
 329  000A  0FF1                        MOV     A,100H-15            
 330  000B  3ABD                        SNZ     CTRL.5          ;CHECK 10 (12MHZ)
 331  000C  3A3D                        SNZ     CTRL.4
 332  000D  0FF6                        MOV     A,100H-10                        
 333  000E                              ;-WAIT SYNC
 334  000E  431D                        ADD     A,_TKS_TIME_BASE
 335  000F  380A                        SNZ     C
"File: BS82C16A_LIBV413.asm  Holtek Cross-Assembler  Version 2.92      Page 7

 336  0010  2800     R                  JMP     WAIT_SYNC
 337  0011  5F1D                        CLR     _TKS_TIME_BASE
 338  0012              
 339  0012                              ;----------------------
 340  0012                              ;-TKS SAMPLING & FILTER
 341  0012                              ;----------------------
 342  0012  2000     R                  CALL    _TKS_SAMPLING
 343  0013  2000     R                  CALL    _TKS_FILTER
 344  0014  3EC5                        SZ      TKST            ;IF END OF ONE CYCLE
 345  0015  2800     R                  JMP     $-3
 346  0016              
 347  0016                              ;-COUNTING TSK TIMER
 348  0016  2000     R                  CALL    _TKS_TIMER
 349  0017              
 350  0017                              ;------------------------
 351  0017                              ;-TOUCH KEY SYSTEM ACTIVE
 352  0017                              ;------------------------
 353  0017  78AD                        SNZ     _TKS_ACTIVEF
 354  0018  0003                        RET
 355  0019              
 356  0019              
 357  0019  2000     R                  CALL    _TKS_STATE_CHECK
 358  001A              
 359  001A  2000     R                  CALL    _RE_BALANCE
 360  001B              
 361  001B  2000     R                  CALL    _NORMAL_CALIBRATE
 362  001C                                           
 363  001C  2000     R                  CALL    _FORCE_CALIBRATE
 364  001D                            
 365  001D  2000     R                  CALL    _CHECK_KEY_TIMER
 366  001E              
 367  001E  2000     R                  CALL    _CS_NOISE_CHECK
 368  001F              
 369  001F  0003                        RET
 370  0020              
 371  0020              
 372  0020              
 373  0020              ;;***********************************************************   
 374  0020              ;;*SUB. NAME:                                               *   
 375  0020              ;;*INPUT    :                                               *   
 376  0020              ;;*OUTPUT   :                                               *   
 377  0020              ;;*USED REG.:                                               *   
 378  0020              ;;*FUNCTION :                                               *   
 379  0020              ;;***********************************************************   
 380  0020              _TKM_RESET: 
 381  0020              
 382  0020                              ;-SET MAIN FREQ
 383  0020  0F03                        MOV     A,00000011B
 384  0021  00C8                        MOV     TKC1,A
 385  0022              
 386  0022                              ;-SET SAMPLING LENGTH (PRE X 2)
 387  0022  0FEC                        MOV     A,256-20;16                        ;SET 1024 COUNT             
 388  0023  7C01                        SZ      _GLOBE_VARIES[TKS_OPTIONB].SENSIVITY_LEVEL
 389  0024  0FDC                        MOV     A,256-36;32                        ;SET 2048 COUNT             
 390  0025  00C4                        MOV     TKTMR,A
 391  0026              
 392  0026              
 393  0026                              ;-INITIAL TKMXC0
 394  0026  0F27                        MOV     A,00100111B
 395  0027  7D82                        SZ      _GLOBE_VARIES[TKS_OPTIONC].AUTO_RS              
"File: BS82C16A_LIBV413.asm  Holtek Cross-Assembler  Version 2.92      Page 8

 396  0028  0F2F                        MOV     A,00101111B
 397  0029  00CD                        MOV     TKM0C0,A        ;KEY 1 ~ 4
 398  002A                              ;------------------------
 399  002A                      if      KeyAmount > 4           ;KEY 5 ~ 8
 400  002A  00D3                        MOV     TKM1C0,A
 401  002B                      endif
 402  002B                              ;------------------------
 403  002B                      if      KeyAmount > 8           ;KEY 9 ~ 12
 404  002B  00D9                        MOV     TKM2C0,A
 405  002C                      endif
 406  002C                              ;------------------------
 407  002C                      if      KeyAmount > 12          ;KEY 13~ 16
 408  002C  00DF                        MOV     TKM3C0,A
 409  002D                      endif
 410  002D                              ;------------------------
 411  002D                      if      KeyAmount > 16          ;KEY 17~ 20
 412  002D                              MOV     TKM4C0,A
 413  002D                      endif
 414  002D                              ;------------------------
 415  002D                      if      KeyAmount > 20          ;KEY 21~ 24
 416  002D                              MOV     TKM5C0,A
 417  002D                      endif
 418  002D                              ;------------------------
 419  002D              
 420  002D              
 421  002D                              ;-INITIAL TKMXC1        ;KEY 1 ~ 4
 422  002D  471E                        MOV     A,_KEY_IO_SEL[0]
 423  002E  0E0F                        AND     A,00001111B
 424  002F  00CE                        MOV     TKM0C1,A
 425  0030                              ;------------------------
 426  0030                      if      KeyAmount > 4           ;KEY 5 ~ 8
 427  0030  511E                        SWAPA   _KEY_IO_SEL[0]
 428  0031  0E0F                        AND     A,00001111B
 429  0032  00D4                        MOV     TKM1C1,A
 430  0033                      endif                                 
 431  0033                              ;------------------------
 432  0033                      if      KeyAmount > 8           ;KEY 9 ~ 12
 433  0033  471F                        MOV     A,_KEY_IO_SEL[1]
 434  0034  0E0F                        AND     A,00001111B
 435  0035  00DA                        MOV     TKM2C1,A
 436  0036                      endif
 437  0036                              ;------------------------
 438  0036                      if      KeyAmount > 12          ;KEY 13~ 16
 439  0036  511F                        SWAPA   _KEY_IO_SEL[1]
 440  0037  0E0F                        AND     A,00001111B
 441  0038  00E0                        MOV     TKM3C1,A
 442  0039                      endif
 443  0039                              ;------------------------
 444  0039                      if      KeyAmount > 16          ;KEY 17~ 20
 445  0039                              MOV     A,_KEY_IO_SEL[2]
 446  0039                              AND     A,00001111B
 447  0039                              MOV     TKM4C1,A
 448  0039                      endif
 449  0039                              ;------------------------
 450  0039                      if      KeyAmount > 20          ;KEY 21~ 24
 451  0039                              SWAPA   _KEY_IO_SEL[2]
 452  0039                              AND     A,00001111B
 453  0039                              MOV     TKM5C1,A
 454  0039                      endif
 455  0039                              ;------------------------
"File: BS82C16A_LIBV413.asm  Holtek Cross-Assembler  Version 2.92      Page 9

 456  0039              
 457  0039              
 458  0039  0003                        RET
 459  003A              
 460  003A              
 461  003A              
 462  003A              
 463  003A                 
 464  003A              ;;***********************************************************   
 465  003A              ;;*SUB. NAME:                                               *   
 466  003A              ;;*INPUT    :                                               *   
 467  003A              ;;*OUTPUT   :                                               *   
 468  003A              ;;*USED REG.:                                               *   
 469  003A              ;;*FUNCTION :                                               *   
 470  003A              ;;***********************************************************
 471  003A              _TKS_SAMPLING:
 472  003A                              ;-PRE INITIAL VARIES
 473  003A                              ;-LOAD SCALE
 474  003A  0F04                        MOV     A,HIGH (1024+256-BalanceCentralPoint)
 475  003B  7C01                        SZ      _GLOBE_VARIES[TKS_OPTIONB].SENSIVITY_LEVEL
 476  003C  0F08                        MOV     A,HIGH (2048+256-BalanceCentralPoint)
 477  003D  409A                        MOV     _DATA_BUF[7],A
 478  003E                              ;--
 479  003E  0F80                        MOV     A,LOW  (1024+256-BalanceCentralPoint)
 480  003F  7C01                        SZ      _GLOBE_VARIES[TKS_OPTIONB].SENSIVITY_LEVEL
 481  0040  0F80                        MOV     A,LOW  (2048+256-BalanceCentralPoint)
 482  0041  4093                        MOV     _DATA_BUF[0],A
 483  0042                              ;------------------------
 484  0042                      if      KeyAmount > 4           ;KEY 5 ~ 8
 485  0042  4094                        MOV     _DATA_BUF[1],A
 486  0043                      endif
 487  0043                              ;------------------------
 488  0043                      if      KeyAmount > 8           ;KEY 9 ~ 12
 489  0043  4095                        MOV     _DATA_BUF[2],A
 490  0044                      endif
 491  0044                              ;------------------------
 492  0044                      if      KeyAmount > 12          ;KEY 13~ 16
 493  0044  4096                        MOV     _DATA_BUF[3],A
 494  0045                      endif
 495  0045                              ;------------------------
 496  0045                      if      KeyAmount > 16          ;KEY 17~ 20
 497  0045                              MOV     _DATA_BUF[4],A
 498  0045                      endif
 499  0045                              ;------------------------
 500  0045                      if      KeyAmount > 20          ;KEY 21~ 24
 501  0045                              MOV     _DATA_BUF[5],A
 502  0045                      endif
 503  0045                              ;------------------------
 504  0045              
 505  0045              
 506  0045              HALT_SAMPLING:  ;-IF FIRST ENTRY & HALT MODE SAMPLING ENTRY
 507  0045  3BCD                        SNZ     TKM0C0.7
 508  0046  3F4D                        SZ      TKM0C0.6
 509  0047  2800     R                  JMP     $+2           
 510  0048  2800     R                  JMP     LOAD_BALCAP
 511  0049              
 512  0049              
 513  0049              SAMPLING_LOOP:  ;-SAMPLE NEXT KEY LOOP
 514  0049                              ;-WAIT SAMPLE FINISH
 515  0049  390E                        SNZ     TKME            ;IF STANDBY MODE ENABLE
"File: BS82C16A_LIBV413.asm  Holtek Cross-Assembler  Version 2.92      Page 10

 516  004A  2800     R                  JMP     $+3
 517  004B  3B45                        SNZ     TKRCOV
 518  004C  0002                        HALT
 519  004D                              ;--
 520  004D  3B45                        SNZ     TKRCOV
 521  004E  2800     R                  JMP     SAMPLING_LOOP
 522  004F              
 523  004F                              ;-READ COUNT
 524  004F  0749                        MOV     A,TKM016DL
 525  0050  4293                        SUBM    A,_DATA_BUF[0]
 526  0051  074A                        MOV     A,TKM016DH
 527  0052  521A                        SBC     A,_DATA_BUF[7]
 528  0053  1085                        SZ      ACC
 529  0054  5F93                        SET     _DATA_BUF[0]
 530  0055  380A                        SNZ     C
 531  0056  5F13                        CLR     _DATA_BUF[0]
 532  0057              
 533  0057                              ;------------------------
 534  0057                      if      KeyAmount > 4           ;KEY 5 ~ 8
 535  0057  074F                        MOV     A,TKM116DL
 536  0058  4294                        SUBM    A,_DATA_BUF[1]
 537  0059  0750                        MOV     A,TKM116DH
 538  005A  521A                        SBC     A,_DATA_BUF[7]
 539  005B  1085                        SZ      ACC
 540  005C  5F94                        SET     _DATA_BUF[1]
 541  005D  380A                        SNZ     C
 542  005E  5F14                        CLR     _DATA_BUF[1]
 543  005F                      endif
 544  005F                              ;------------------------
 545  005F                      if      KeyAmount > 8           ;KEY 9 ~ 12
 546  005F  0755                        MOV     A,TKM216DL
 547  0060  4295                        SUBM    A,_DATA_BUF[2]
 548  0061  0756                        MOV     A,TKM216DH
 549  0062  521A                        SBC     A,_DATA_BUF[7]
 550  0063  1085                        SZ      ACC
 551  0064  5F95                        SET     _DATA_BUF[2]
 552  0065  380A                        SNZ     C
 553  0066  5F15                        CLR     _DATA_BUF[2]
 554  0067                      endif
 555  0067                              ;------------------------
 556  0067                      if      KeyAmount > 12          ;KEY 13~ 16
 557  0067  075B                        MOV     A,TKM316DL
 558  0068  4296                        SUBM    A,_DATA_BUF[3]
 559  0069  075C                        MOV     A,TKM316DH
 560  006A  521A                        SBC     A,_DATA_BUF[7]
 561  006B  1085                        SZ      ACC
 562  006C  5F96                        SET     _DATA_BUF[3]
 563  006D  380A                        SNZ     C
 564  006E  5F16                        CLR     _DATA_BUF[3]
 565  006F                      endif
 566  006F                              ;------------------------
 567  006F                      if      KeyAmount > 16          ;KEY 17~ 20
 568  006F                              MOV     A,TKM416DL
 569  006F                              SUBM    A,_DATA_BUF[4]
 570  006F                              MOV     A,TKM416DH
 571  006F                              SBC     A,_DATA_BUF[7]
 572  006F                              SZ      ACC
 573  006F                              SET     _DATA_BUF[4]
 574  006F                              SNZ     C
 575  006F                              CLR     _DATA_BUF[4]
"File: BS82C16A_LIBV413.asm  Holtek Cross-Assembler  Version 2.92      Page 11

 576  006F                      endif
 577  006F                              ;------------------------
 578  006F                      if      KeyAmount > 20          ;KEY 21~ 24
 579  006F                              MOV     A,TKM516DL
 580  006F                              SUBM    A,_DATA_BUF[5]
 581  006F                              MOV     A,TKM516DH
 582  006F                              SBC     A,_DATA_BUF[7]
 583  006F                              SZ      ACC
 584  006F                              SET     _DATA_BUF[5]
 585  006F                              SNZ     C
 586  006F                              CLR     _DATA_BUF[5]
 587  006F                      endif
 588  006F                              ;------------------------
 589  006F              
 590  006F                              ;-RE-INITIAL TKM
 591  006F  1F45                        CLR     TKC0
 592  0070  0F40                        MOV     A,01000000B
 593  0071  03CD                        ADDM    A,TKM0C0
 594  0072                              ;------------------------
 595  0072                      if      KeyAmount > 4           ;KEY 5 ~ 8
 596  0072  03D3                        ADDM    A,TKM1C0
 597  0073                      endif
 598  0073                              ;------------------------
 599  0073                      if      KeyAmount > 8           ;KEY 9 ~ 12
 600  0073  03D9                        ADDM    A,TKM2C0
 601  0074                      endif
 602  0074                              ;------------------------
 603  0074                      if      KeyAmount > 12          ;KEY 13~ 16
 604  0074  03DF                        ADDM    A,TKM3C0
 605  0075                      endif
 606  0075                              ;------------------------
 607  0075                      if      KeyAmount > 16          ;KEY 17~ 20
 608  0075                              ADDM    A,TKM4C0
 609  0075                      endif
 610  0075                              ;------------------------
 611  0075                      if      KeyAmount > 20          ;KEY 21~ 24
 612  0075                              ADDM    A,TKM5C0
 613  0075                      endif
 614  0075                              ;------------------------
 615  0075  3C0A                        SZ      C
 616  0076  0003                        RET
 617  0077              
 618  0077              
 619  0077                              ;------------------------ 
 620  0077              LOAD_BALCAP:    ;-LOAD BALANCE CAP. VALUE
 621  0077                              ;------------------------
 622  0077              
 623  0077                              ;-TURN ON KEY/REF. OSC.
 624  0077  0F30                        MOV     A,00110000B
 625  0078  05CE                        ORM     A,TKM0C1
 626  0079                              ;------------------------
 627  0079                      if      KeyAmount > 4           ;KEY 5 ~ 8
 628  0079  05D4                        ORM     A,TKM1C1
 629  007A                      endif
 630  007A                              ;------------------------
 631  007A                      if      KeyAmount > 8           ;KEY 9 ~ 12
 632  007A  05DA                        ORM     A,TKM2C1
 633  007B                      endif
 634  007B                              ;------------------------
 635  007B                      if      KeyAmount > 12          ;KEY 13~ 16
"File: BS82C16A_LIBV413.asm  Holtek Cross-Assembler  Version 2.92      Page 12

 636  007B  05E0                        ORM     A,TKM3C1
 637  007C                      endif
 638  007C                              ;------------------------
 639  007C                      if      KeyAmount > 16          ;KEY 17~ 20
 640  007C                              ORM     A,TKM4C1
 641  007C                      endif
 642  007C                              ;------------------------
 643  007C                      if      KeyAmount > 20          ;KEY 21~ 24
 644  007C                              ORM     A,TKM5C1
 645  007C                      endif
 646  007C                              ;------------------------
 647  007C              
 648  007C                              ;-LOAD BALANCE CAP.
 649  007C  0F00     R                  MOV     A,BANK _KEY_REF
 650  007D  0084                        MOV     BP,A
 651  007E  114D                        SWAPA   TKM0C0
 652  007F  0E0C                        AND     A,00001100B     ;X4
 653  0080  0B83                        ADD     A,OFFSET _BALANCE_CAP
 654  0081  0083                        MOV     MP1,A
 655  0082  340A                        CLR     C
 656  0083  1A02                        RLCA    IAR1
 657  0084  00CB                        MOV     TKM0ROL,A         
 658  0085  1F4C                        CLR     TKM0ROH       
 659  0086  1ACC                        RLC     TKM0ROH            
 660  0087                              ;------------------------
 661  0087                      if      KeyAmount > 4           ;KEY 5 ~ 8
 662  0087  0F10                        MOV     A,4*4
 663  0088  0383                        ADDM    A,MP1 
 664  0089  340A                        CLR     C
 665  008A  1A02                        RLCA    IAR1
 666  008B  00D1                        MOV     TKM1ROL,A         
 667  008C  1F52                        CLR     TKM1ROH       
 668  008D  1AD2                        RLC     TKM1ROH            
 669  008E                      endif
 670  008E                              ;------------------------
 671  008E                      if      KeyAmount > 8           ;KEY 9 ~ 12
 672  008E  0F10                        MOV     A,4*4
 673  008F  0383                        ADDM    A,MP1
 674  0090  340A                        CLR     C
 675  0091  1A02                        RLCA    IAR1
 676  0092  00D7                        MOV     TKM2ROL,A
 677  0093  1F58                        CLR     TKM2ROH
 678  0094  1AD8                        RLC     TKM2ROH
 679  0095                      endif
 680  0095                              ;------------------------
 681  0095                      if      KeyAmount > 12          ;KEY 13~ 16
 682  0095  0F10                        MOV     A,4*4
 683  0096  0383                        ADDM    A,MP1
 684  0097  340A                        CLR     C
 685  0098  1A02                        RLCA    IAR1
 686  0099  00DD                        MOV     TKM3ROL,A
 687  009A  1F5E                        CLR     TKM3ROH
 688  009B  1ADE                        RLC     TKM3ROH
 689  009C                      endif
 690  009C                              ;------------------------
 691  009C                      if      KeyAmount > 16          ;KEY 17~ 20
 692  009C                              MOV     A,4*4
 693  009C                              ADDM    A,MP1
 694  009C                              CLR     C
 695  009C                              RLCA    IAR1
"File: BS82C16A_LIBV413.asm  Holtek Cross-Assembler  Version 2.92      Page 13

 696  009C                              MOV     TKM4ROL,A
 697  009C                              CLR     TKM4ROH
 698  009C                              RLC     TKM4ROH
 699  009C                      endif
 700  009C                              ;------------------------
 701  009C                      if      KeyAmount > 20          ;KEY 21~ 24
 702  009C                              MOV     A,4*4
 703  009C                              ADDM    A,MP1
 704  009C                              CLR     C
 705  009C                              RLCA    IAR1
 706  009C                              MOV     TKM5ROL,A
 707  009C                              CLR     TKM5ROH
 708  009C                              RLC     TKM5ROH
 709  009C                      endif
 710  009C                              ;------------------------
 711  009C              
 712  009C                              ;-RE-START SAMPLING
 713  009C  32C5                        SET     TKST
 714  009D              
 715  009D                              ;-IF END OF SAMPLING
 716  009D  3B4D                        SNZ     TKM0C0.6
 717  009E  3FCD                        SZ      TKM0C0.7
 718  009F  0003                        RET
 719  00A0                              ;-FIRST ENTRY
 720  00A0  2800     R                  JMP     SAMPLING_LOOP       
 721  00A1              
 722  00A1              
 723  00A1              ;;;***********************************************************   
 724  00A1              ;;;*SUB. NAME:                                               *   
 725  00A1              ;;;*INPUT    :                                               *   
 726  00A1              ;;;*OUTPUT   :                                               *   
 727  00A1              ;;;*USED REG.:                                               *   
 728  00A1              ;;;*FUNCTION :                                               *   
 729  00A1              ;;;***********************************************************   
 730  00A1              _BS82C16A_LIBV413_INITIAL:
 731  00A1              _LIBRARY_RESET:
 732  00A1              
 733  00A1                           ;  ;-TEST
 734  00A1                           ;  CLR     PAC.1
 735  00A1                           ;  SET     PA.1
 736  00A1                                                
 737  00A1              
 738  00A1  5F28                        CLR     UNBALANCE_TIMER
 739  00A2  74AD                        CLR     _TKS_ACTIVEF
 740  00A3  5FA4                        SET     KEY_DBCE
 741  00A4              
 742  00A4                              ;-BALANCE INITIAL
 743  00A4  5F28                        CLR     BALANCE_BUF[1]
 744  00A5  0F80                        MOV     A,10000000B
 745  00A6  40A7                        MOV     BALANCE_BUF[0],A
 746  00A7              
 747  00A7                              ;-SET BALANCE CAP
 748  00A7  5F26                        CLR     CHANNEL_INDEX
 749  00A8                              ;--
 750  00A8  2000     R                  CALL    GET_BALANCE_CAP_MPX
 751  00A9  4727                        MOV     A,BALANCE_BUF[0]
 752  00AA  0082                        MOV     IAR1,A
 753  00AB  2000     R                  CALL    CHECK_KEY_AMOUNT                             
 754  00AC  380A                        SNZ     C
 755  00AD  2800     R                  JMP     $-5
"File: BS82C16A_LIBV413.asm  Holtek Cross-Assembler  Version 2.92      Page 14

 756  00AE              
 757  00AE              
 758  00AE                              ;------------------                             
 759  00AE              TBASE_INITIAL:  ;-TIME BASE INITIAL                             
 760  00AE                              ;------------------
 761  00AE  0FF0                        MOV     A,11110000B
 762  00AF  069C                        ANDM    A,PSCR          ;Timbase 0 using Fsys clock
 763  00B0                              ;--
 764  00B0  0FF0                        MOV     A,11110000B     ;Using Timebase 0 
 765  00B1  069B                        ANDM    A,TBC
 766  00B2                              ;--
 767  00B2  0F0C                        MOV     A,00001100B     ;256 us BASE ON 16MHZ
 768  00B3  3EBD                        SZ      CTRL.5
 769  00B4  3E3D                        SZ      CTRL.4
 770  00B5  0F0B                        MOV     A,00001011B     ;256 us BASE ON 8MHZ ; 170.6 uS BASE ON 12MHZ
 771  00B6  059B                        ORM     A,TBC
 772  00B7  318E                        SET     TB0E
 773  00B8  300E                        SET     EMI
 774  00B9  0003                        RET                                             
 775  00BA                                               
 776  00BA                 
 777  00BA              
 778  00BA              ;;***********************************************************   
 779  00BA              ;;*SUB. NAME:                                               *   
 780  00BA              ;;*INPUT    :                                               *   
 781  00BA              ;;*OUTPUT   :                                               *   
 782  00BA              ;;*USED REG.:                                               *   
 783  00BA              ;;*FUNCTION :                                               *   
 784  00BA              ;;***********************************************************
 785  00BA              FILTER_INITIAL:
 786  00BA                              ;-SET CHANNEL INDEX
 787  00BA  184D                        RLA     TKM0C0
 788  00BB  1885                        RL      ACC
 789  00BC  0B03                        ADD     A,00000011B             ;-1
 790  00BD  0E03                        AND     A,00000011B
 791  00BE  40A6                        MOV     CHANNEL_INDEX,A
 792  00BF              
 793  00BF                              ;---
 794  00BF  0F92                        MOV     A,OFFSET _DATA_BUF - 1
 795  00C0  0081                        MOV     MP0,A
 796  00C1              
 797  00C1  0003                        RET
 798  00C2              
 799  00C2              ;;***********************************************************   
 800  00C2              ;;*SUB. NAME:                                               *   
 801  00C2              ;;*INPUT    :                                               *   
 802  00C2              ;;*OUTPUT   :                                               *   
 803  00C2              ;;*USED REG.:                                               *   
 804  00C2              ;;*FUNCTION :                                               *   
 805  00C2              ;;***********************************************************
 806  00C2              _TKS_FILTER:
 807  00C2  2000     R                  CALL    FILTER_INITIAL
 808  00C3                              ;-------------
 809  00C3              FILTER_LOOP:    ;-FILTER LOOP
 810  00C3                              ;-------------
 811  00C3  1481                        INC     MP0
 812  00C4                              ;-GET MAXA
 813  00C4  2000     R                  CALL    GET_KEY_LIMIT_MPX
 814  00C5  0702                        MOV     A,IAR1
 815  00C6  0200                        SUB     A,IAR0             
"File: BS82C16A_LIBV413.asm  Holtek Cross-Assembler  Version 2.92      Page 15

 816  00C7  0700                        MOV     A,IAR0               
 817  00C8  380A                        SNZ     C
 818  00C9  0082                        MOV     IAR1,A
 819  00CA              
 820  00CA                              ;-GET MAXB
 821  00CA  1483                        INC     MP1
 822  00CB  0702                        MOV     A,IAR1
 823  00CC  0200                        SUB     A,IAR0        
 824  00CD  0700                        MOV     A,IAR0              
 825  00CE  380A                        SNZ     C
 826  00CF  0082                        MOV     IAR1,A
 827  00D0              
 828  00D0                              ;-GET MINA
 829  00D0  1483                        INC     MP1
 830  00D1  0700                        MOV     A,IAR0        
 831  00D2  0202                        SUB     A,IAR1
 832  00D3  0700                        MOV     A,IAR0                
 833  00D4  380A                        SNZ     C
 834  00D5  0082                        MOV     IAR1,A
 835  00D6              
 836  00D6                              ;-GET MINB
 837  00D6  1483                        INC     MP1
 838  00D7  0700                        MOV     A,IAR0            
 839  00D8  0202                        SUB     A,IAR1
 840  00D9  0700                        MOV     A,IAR0                 
 841  00DA  380A                        SNZ     C
 842  00DB  0082                        MOV     IAR1,A
 843  00DC              
 844  00DC                              ;-IF TKS ACTIVE
 845  00DC  7CAD                        SZ      _TKS_ACTIVEF
 846  00DD  2800     R                  JMP     GET_NEW_FREQ   
 847  00DE              
 848  00DE                              ;-COUNT SUM 16 TIMES FOR AVERAGE
 849  00DE  2000     R                  CALL    GET_KEY_REF_MPX;FREQ_MPX
 850  00DF  0700                        MOV     A,IAR0
 851  00E0  509B                        SZ      _SAMPLE_TIMES
 852  00E1  0302                        ADD     A,IAR1
 853  00E2  0082                        MOV     IAR1,A
 854  00E3                              ;--
 855  00E3  1483                        INC     MP1
 856  00E4  1F05                        CLR     ACC
 857  00E5  509B                        SZ      _SAMPLE_TIMES
 858  00E6  1302                        ADC     A,IAR1
 859  00E7  0082                        MOV     IAR1,A
 860  00E8  2800     R                  JMP     END_TKS_FILTER
 861  00E9              
 862  00E9              GET_NEW_FREQ:   ;-GET NEW FREQ ; NEW FREQ BOT ; NEW FREQ DIFF
 863  00E9  789B                        SNZ     _SAMPLE_TIMES.1 ;00 = 10MS
 864  00EA  7C1B                        SZ      _SAMPLE_TIMES.0
 865  00EB  2800     R                  JMP     END_TKS_FILTER
 866  00EC              
 867  00EC                           ;; ;-TEST
 868  00EC                           ;; CLR     PAC.3
 869  00EC                           ;; MOV     A,00001000B
 870  00EC                           ;; XORM    A,PA
 871  00EC              
 872  00EC              
 873  00EC                              ;-GET MIN
 874  00EC                              ;-                      ;MINB
 875  00EC  7D1B                        SZ      _SAMPLE_TIMES.2      
"File: BS82C16A_LIBV413.asm  Holtek Cross-Assembler  Version 2.92      Page 16

 876  00ED  1583                        DEC     MP1             ;MINA
 877  00EE  0702                        MOV     A,IAR1
 878  00EF  1F82                        SET     IAR1            ;RESET MIN TO 255
 879  00F0  409A                        MOV     _DATA_BUF[7],A
 880  00F1              
 881  00F1                              ;-GET MAX
 882  00F1  1583                        DEC     MP1
 883  00F2  1583                        DEC     MP1
 884  00F3  0702                        MOV     A,IAR1
 885  00F4  1F02                        CLR     IAR1            ;RESET MAX TO 0
 886  00F5  4099                        MOV     _DATA_BUF[6],A
 887  00F6              
 888  00F6              
 889  00F6              
 890  00F6                              ;-SAVE KEY STATUS
 891  00F6  2000     R                  CALL    GET_KEY_STATUS_MPX
 892  00F7  0702                        MOV     A,IAR1
 893  00F8  4093                        MOV     _DATA_BUF[0],A
 894  00F9              
 895  00F9                              ;----------------  
 896  00F9                              ;-GET NEW FREQ
 897  00F9                              ;----------------
 898  00F9  2000     R                  CALL    GET_KEY_FREQ_MPX
 899  00FA  4719                        MOV     A,_DATA_BUF[6]
 900  00FB  0202                        SUB     A,IAR1
 901  00FC  3D0A                        SZ      Z
 902  00FD  2800     R                  JMP     GET_FREQ_BOT
 903  00FE                              ;-RECORD C FLAG
 904  00FE  5F19                        CLR     _DATA_BUF[6]
 905  00FF  380A                        SNZ     C
 906  0100  5F99                        SET     _DATA_BUF[6]
 907  0101              
 908  0101                              ;-50% IIR
 909  0101  5B99                        RRC     _DATA_BUF[6]
 910  0102  1B85                        RRC     ACC
 911  0103  7C19                        SZ      _DATA_BUF[6].0
 912  0104  2800     R                  JMP     GET_NFREQ
 913  0105                            ;;;-25%
 914  0105                            ;;SZ      ACC
 915  0105                            ;;RRC     _DATA_BUF[6]
 916  0105                            ;;SZ      ACC
 917  0105                            ;;RRC     ACC
 918  0105                              ;-12.5%
 919  0105  1085                        SZ      ACC
 920  0106  7D02                        SZ      _GLOBE_VARIES[TKS_OPTIONC].SAMPLE_SPEED
 921  0107  2800     R                  JMP     GET_NFREQ
 922  0108  5B99                        RRC     _DATA_BUF[6]
 923  0109  1B85                        RRC     ACC
 924  010A              
 925  010A              GET_NFREQ:      ;-GET NEW FREQ TOP
 926  010A  7819                        SNZ     _DATA_BUF[6].0
 927  010B  1085                        SZ      ACC
 928  010C  2800     R                  JMP     $+3
 929  010D  3C0A                        SZ      C
 930  010E  1485                        INC     ACC
 931  010F                              ;--
 932  010F  0382                        ADDM    A,IAR1
 933  0110              
 934  0110              
 935  0110              
"File: BS82C16A_LIBV413.asm  Holtek Cross-Assembler  Version 2.92      Page 17

 936  0110                              ;-----------------
 937  0110              GET_FREQ_BOT:   ;-GET NEW FREQ BOT
 938  0110                              ;-----------------
 939  0110  1483                        INC     MP1
 940  0111  471A                        MOV     A,_DATA_BUF[7]
 941  0112  0202                        SUB     A,IAR1
 942  0113  3D0A                        SZ      Z
 943  0114  2800     R                  JMP     END_TKS_FILTER
 944  0115                              ;-RECORD C FLAG
 945  0115  5F1A                        CLR     _DATA_BUF[7]
 946  0116  380A                        SNZ     C
 947  0117  5F9A                        SET     _DATA_BUF[7]
 948  0118              
 949  0118              
 950  0118                              ;-MORE IIR WHEN SERIES INTERFERE
 951  0118  5B9A                        RRC     _DATA_BUF[7]
 952  0119  7F93                        SZ      _DATA_BUF[0].CS_INTERFEREF
 953  011A  1B85                        RRC     ACC
 954  011B              
 955  011B                              ;-50% IIR
 956  011B  5B9A                        RRC     _DATA_BUF[7]
 957  011C  1B85                        RRC     ACC                       
 958  011D  781A                        SNZ     _DATA_BUF[7].0
 959  011E  2800     R                  JMP     GET_NFREQB
 960  011F                              ;-25%
 961  011F  1085                        SZ      ACC
 962  0120  5B9A                        RRC     _DATA_BUF[7]
 963  0121  1085                        SZ      ACC
 964  0122  1B85                        RRC     ACC                      
 965  0123                            ;;;-12.5%
 966  0123                            ;;SZ      ACC
 967  0123                            ;;RRC     _DATA_BUF[7]
 968  0123                            ;;SZ      ACC
 969  0123                            ;;RRC     ACC                        
 970  0123              
 971  0123              GET_NFREQB:
 972  0123                              ;-CHCEK IF OVER FLOW
 973  0123  781A                        SNZ     _DATA_BUF[7].0
 974  0124  1085                        SZ      ACC                    
 975  0125  2800     R                  JMP     $+3
 976  0126  3C0A                        SZ      C
 977  0127  1485                        INC     ACC    
 978  0128                              ;--                
 979  0128  0382                        ADDM    A,IAR1
 980  0129              
 981  0129              
 982  0129              END_TKS_FILTER: ;-END OF FILTER
 983  0129                              ;-NEXT IP     
 984  0129                            ;;MOV     A,004H          ;OFFSET 4 KEY
 985  0129                            ;;ADDM    A,CHANNEL_INDEX
 986  0129                            ;;MOV     A,CHANNEL_INDEX
 987  0129  2000     R                  CALL    CHECK_IP_AMOUNT
 988  012A  380A                        SNZ     C
 989  012B  2800     R                  JMP     FILTER_LOOP  
 990  012C  0003                        RET
 991  012D              
 992  012D              
 993  012D              
 994  012D              ;;***********************************************************   
 995  012D              ;;*SUB. NAME:                                               *   
"File: BS82C16A_LIBV413.asm  Holtek Cross-Assembler  Version 2.92      Page 18

 996  012D              ;;*INPUT    :                                               *   
 997  012D              ;;*OUTPUT   :                                               *   
 998  012D              ;;*USED REG.:                                               *   
 999  012D              ;;*FUNCTION :                                               *   
1000  012D              ;;***********************************************************
1001  012D              _CHECK_KEY_WAKEUP:
1002  012D              
1003  012D              
1004  012D                              ;-CHECK KEY STATUS OUTPUT IN ACC ; ACC=0 : NO ANY ACTIVATION            
1005  012D  7CAD                        SZ      _TKS_ACTIVEF    ;IF TKS ACTIVE                              
1006  012E  50A5                        SZ      KEY_STATE_BUF                                                  
1007  012F  2800     R                  JMP     ESC_HALT_MODE                                                   
1008  0130                                          
1009  0130                              ;-CHECK IF STANDBY TIME OUT
1010  0130  509C                        SZ      _STANDBY_TIME
1011  0131  7A2D                        SNZ     _TKS_63MSF
1012  0132  2800     R                  JMP     $+2
1013  0133  559C                        DEC     _STANDBY_TIME
1014  0134                              ;--
1015  0134  3AC5                        SNZ     TKST
1016  0135  509B                        SZ      _SAMPLE_TIMES
1017  0136  0003                        RET
1018  0137  509C                        SZ      _STANDBY_TIME
1019  0138  0003                        RET
1020  0139              
1021  0139                              ;------------------------------------------                             
1022  0139                              ;-COUNT & CHECK CALIBRATE TIME IN HALT MODE                             
1023  0139                              ;------------------------------------------ 
1024  0139  141A                        INCA    WDTC
1025  013A  0E03                        AND     A,00000011B
1026  013B  0F01                        MOV     A,1             ;Base on 125ms
1027  013C  390A                        SNZ     Z     
1028  013D  0F04                        MOV     A,4             ;Base on 500ms
1029  013E                              ;-COUNT & CHECK IF CALIBRATE TIME OUT IN HALT MODE                      
1030  013E  43A9                        ADDM    A,HALT_CAL_TIME                                                 
1031  013F  3C0A                        SZ      C               ;8 SEC                                         
1032  0140  5F29                        CLR     HALT_CAL_TIME                                                   
1033  0141                                                              
1034  0141                                                        
1035  0141                            ;;;-TEST                                                                  
1036  0141                            ;;SET     PA.3                                                            
1037  0141                              ;------------------------                                               
1038  0141                              ;-ENTRY HALT MODE INITIAL                                               
1039  0141                              ;------------------------
1040  0141  359B                        CLR     TB0ON           ;STOP TIME BASE COUNTING
1041  0142  358E                        CLR     TB0E
1042  0143                              ;--
1043  0143  310E                        SET     TKME            ;ENABLE TOUCH KEY INT
1044  0144                              ;--                                                                     
1045  0144  2000     R                  CALL    _TKM_RESET                                                      
1046  0145  300A                        SET     C               ;1/2 NORMAL SAMPLE TIME                         
1047  0146  1BC4                        RRC     TKTMR                                                           
1048  0147  300A                        SET     C               ;1/4 NORMAL SAMPLE TIME                         
1049  0148  1BC4                        RRC     TKTMR                                                           
1050  0149                                                                                      
1051  0149                              ;-LOAD CENTRAL INITIAL                                                  
1052  0149  0F01                        MOV     A,HIGH ((1024+256-BalanceCentralPoint)>>2)                      
1053  014A  7C01                        SZ      _GLOBE_VARIES[TKS_OPTIONB].SENSIVITY_LEVEL                      
1054  014B  0F02                        MOV     A,HIGH ((2048+256-BalanceCentralPoint)>>2)                      
1055  014C  409A                        MOV     _DATA_BUF[7],A                                                  
"File: BS82C16A_LIBV413.asm  Holtek Cross-Assembler  Version 2.92      Page 19

1056  014D                                                                                                      
1057  014D              HALT_TKS_SAMPLE:;-WAIT ALL MOUDLE SCAN DONE WITH HALT                                   
1058  014D  0F20                        MOV     A,LOW  ((1024+256-BalanceCentralPoint)>>2)                      
1059  014E  7C01                        SZ      _GLOBE_VARIES[TKS_OPTIONB].SENSIVITY_LEVEL                      
1060  014F  0F20                        MOV     A,LOW  ((2048+256-BalanceCentralPoint)>>2)                      
1061  0150  4093                        MOV     _DATA_BUF[0],A                                                  
1062  0151                              ;------------------------
1063  0151                      if      KeyAmount > 4           ;KEY 5 ~ 8
1064  0151  4094                        MOV     _DATA_BUF[1],A
1065  0152                      endif
1066  0152                              ;------------------------
1067  0152                      if      KeyAmount > 8           ;KEY 9 ~ 12
1068  0152  4095                        MOV     _DATA_BUF[2],A
1069  0153                      endif
1070  0153                              ;------------------------
1071  0153                      if      KeyAmount > 12          ;KEY 13~ 16
1072  0153  4096                        MOV     _DATA_BUF[3],A
1073  0154                      endif
1074  0154                              ;------------------------
1075  0154                      if      KeyAmount > 16          ;KEY 17~ 20
1076  0154                              MOV     _DATA_BUF[4],A
1077  0154                      endif
1078  0154                              ;------------------------
1079  0154                      if      KeyAmount > 20          ;KEY 21~ 24
1080  0154                              MOV     _DATA_BUF[5],A
1081  0154                      endif
1082  0154                              ;------------------------
1083  0154                                                                                                      
1084  0154  2000     R                  CALL    HALT_SAMPLING                                                   
1085  0155                                                                                                      
1086  0155  2000     R                  CALL    FILTER_INITIAL                                                  
1087  0156                            ;;;-SET CHANNEL INDEX                                                     
1088  0156                            ;;RLA     TKM0C0                                                          
1089  0156                            ;;RL      ACC                                                             
1090  0156                            ;;ADD     A,00000011B             ;-1                                     
1091  0156                            ;;AND     A,00000011B                                                     
1092  0156                            ;;MOV     CHANNEL_INDEX,A                                                 
1093  0156                            ;;;---                                                                    
1094  0156                            ;;MOV     A,OFFSET _DATA_BUF - 1                                          
1095  0156                            ;;MOV     MP0,A                                                           
1096  0156                              ;------------------------                                               
1097  0156              HALT_TKS_FILTER:;-GET FREQ IN HALT MODE -                                               
1098  0156                              ;------------------------    
1099  0156                            ;;;-SAVE TO FREQ   
1100  0156  2000     R                  CALL    GET_KEY_REF_MPX
1101  0157  0702                        MOV     A,IAR1
1102  0158  40AB                        MOV     HALT_DATA_BUF,A
1103  0159              
1104  0159                            ;;CALL    GET_KEY_FREQB_MPX                                                
1105  0159                              ;-X4 TO RECOVER ORIGNAL VALUE
1106  0159  1481                        INC     MP0                                                             
1107  015A  1800                        RLA     IAR0
1108  015B  1885                        RL      ACC
1109  015C                              ;-CHECK MAX
1110  015C  3B00                        SNZ     IAR0.6
1111  015D  3F80                        SZ      IAR0.7
1112  015E  1F85                        SET     ACC
1113  015F                              ;-SAVE FREQ
1114  015F  1483                        INC     MP1             ;FREQ
1115  0160  0302                        ADD     A,IAR1          ;50% IIR
"File: BS82C16A_LIBV413.asm  Holtek Cross-Assembler  Version 2.92      Page 20

1116  0161  1B85                        RRC     ACC
1117  0162  0082                        MOV     IAR1,A                                                          
1118  0163                              ;-SAVE FREQ BOT                                                        
1119  0163  1483                        INC     MP1             ;FREQB                                          
1120  0164  0082                        MOV     IAR1,A
1121  0165              
1122  0165                              ;-IF NEED TO UPDATE REF 
1123  0165  50A9                        SZ      HALT_CAL_TIME
1124  0166  2800     R                  JMP     $+4
1125  0167  1583                        DEC     MP1             ;FREQ
1126  0168  1583                        DEC     MP1             ;REF
1127  0169  0082                        MOV     IAR1,A
1128  016A              
1129  016A                              ;-|FREQ-REF|
1130  016A  42AB                        SUBM    A,HALT_DATA_BUF ;|FREQ-REF|
1131  016B  380A                        SNZ     C
1132  016C  41AB                        CPL     HALT_DATA_BUF
1133  016D               
1134  016D                              ;-LOAD KEY THRESHOLD
1135  016D                            ;;MOV     A,BANK _GLOBE_VARIES
1136  016D                            ;;MOV     BP,A
1137  016D  1F04                        CLR     BP
1138  016E  4726                        MOV     A,CHANNEL_INDEX
1139  016F  0B83                        ADD     A,OFFSET _GLOBE_VARIES[KEY1_THR]
1140  0170  0083                        MOV     MP1,A
1141  0171                              ;-CHECK IF KEY WAKEUP
1142  0171  472B                        MOV     A,HALT_DATA_BUF
1143  0172  0202                        SUB     A,IAR1
1144  0173  3C0A                        SZ      C
1145  0174  2800     R                  JMP     KEY_WAKEUP
1146  0175                                                                                                      
1147  0175                              ;-NEXT IP                                                               
1148  0175                           ;; MOV     A,004H          ;OFFSET 4 KEY                                   
1149  0175                           ;; ADDM    A,CHANNEL_INDEX                                                 
1150  0175                           ;; MOV     A,CHANNEL_INDEX                                                 
1151  0175  2000     R                  CALL    CHECK_IP_AMOUNT                       
1152  0176  380A                        SNZ     C                                                               
1153  0177  2800     R                  JMP     HALT_TKS_FILTER
1154  0178                                                                               
1155  0178                              ;-IF SAMPLE ALL KEY DONE                                                
1156  0178  3EC5                        SZ      TKST                                                      
1157  0179  2800     R                  JMP     HALT_TKS_SAMPLE 
1158  017A                                      
1159  017A                              ;-------------------------                                              
1160  017A                              ;-CHECK IF NEED RE_BALANCE                                              
1161  017A                              ;-------------------------                                              
1162  017A  50A9                        SZ      HALT_CAL_TIME    
1163  017B  2800     R                  JMP     ENTRY_HALT_MODE                                                 
1164  017C  2000     R                  CALL    HALT_RE_BALANCE         ;MAX 96 SEC                            
1165  017D  78AD                        SNZ     _TKS_ACTIVEF                                          
1166  017E  2800     R                  JMP     KEY_WAKEUP                                                      
1167  017F                                                                                                      
1168  017F                              ;----------------                                                       
1169  017F              ENTRY_HALT_MODE:;-ENTRY HALT MODE                                                       
1170  017F                              ;----------------                                                       
1171  017F  0002                        HALT 
1172  0180  509C                        SZ      _STANDBY_TIME
1173  0181  2800     R                  JMP     $+2
1174  0182  2800     R                  JMP     ENTRY_HALT_MODE
1175  0183                                                                                                      
"File: BS82C16A_LIBV413.asm  Holtek Cross-Assembler  Version 2.92      Page 21

1176  0183                              ;----------------                                                       
1177  0183              KEY_WAKEUP:     ;-KEY WAKE OCCUR-                                                       
1178  0183                              ;---------------- 
1179  0183  5F2B                        CLR     HALT_DATA_BUF                                
1180  0184  5624                        SIZA    KEY_DBCE                                                        
1181  0185  5F24                        CLR     KEY_DBCE                                                        
1182  0186                                                                                                      
1183  0186                              ;-----------------                                                      
1184  0186              ESC_HALT_MODE:  ;-ESCAPE HALT MODE                                                      
1185  0186                              ;-----------------                                                      
1186  0186  350E                        CLR     TKME                                                            
1187  0187  0F7E                        MOV     A,8*1000/63             ;8 SEC                                  
1188  0188  409C                        MOV     _STANDBY_TIME,A                                                 
1189  0189                              ;-CLEAR HALT CALIBRATE TIME                                             
1190  0189  0FC0                        MOV     A,24*1000/125           ;2 SEC CALIBRATE WHEN FIRST ENTRY HALT  
1191  018A  40A9                        MOV     HALT_CAL_TIME,A                                                 
1192  018B  0003                        RET                                                                     
1193  018C                                                                                                      
1194  018C                                                                                                              
1195  018C                 
1196  018C              ;;***********************************************************   
1197  018C              ;;*SUB. NAME:POWER ON CALIBRATE                             *   
1198  018C              ;;*INPUT    :                                               *   
1199  018C              ;;*OUTPUT   :ACC FFH= NOT BALANCE                           *   
1200  018C              ;;*USED REG.:                                               *   
1201  018C              ;;*FUNCTION :                                               *   
1202  018C              ;;***********************************************************   
1203  018C              _PON_CALIBRATE:
1204  018C              
1205  018C                              ;-CHECK SYNC. TIME
1206  018C  509B                        SZ      _SAMPLE_TIMES
1207  018D  0003                        RET
1208  018E                              ;--
1209  018E  5F26                        CLR     CHANNEL_INDEX
1210  018F                              ;--
1211  018F  7BA8                        SNZ     BALANCE_BUF[1].7                        
1212  0190  2800     R                  JMP     FAST_BALANCE  
1213  0191              
1214  0191                              ;-LOAD KEY / IO SETTING
1215  0191  471E                        MOV     A,_KEY_IO_SEL[0]
1216  0192  4095                        MOV     _DATA_BUF[2],A
1217  0193                              ;------------------------
1218  0193                      if      KeyAmount > 8           ;KEY 9 ~ 16
1219  0193  471F                        MOV     A,_KEY_IO_SEL[1]
1220  0194  4096                        MOV     _DATA_BUF[3],A
1221  0195                      endif
1222  0195                              ;------------------------
1223  0195                      if      KeyAmount > 16          ;KEY 17~ 24
1224  0195                              MOV     A,_KEY_IO_SEL[2]
1225  0195                              MOV     _DATA_BUF[4],A
1226  0195                      endif
1227  0195                              ;------------------------
1228  0195              
1229  0195                              ;--------------
1230  0195                              ;-LAST BALANCE
1231  0195                              ;-------------
1232  0195              LAST_BAL_LOOP:  ;-LAST BALANCE LOOP 
1233  0195              
1234  0195                              ;-LOAD AVERAGE COUNT
1235  0195  2000     R                  CALL    GET_KEY_REF_MPX;FREQ_MPX
"File: BS82C16A_LIBV413.asm  Holtek Cross-Assembler  Version 2.92      Page 22

1236  0196                              ;-DIVID 16
1237  0196  1102                        SWAPA   IAR1
1238  0197  0E0F                        AND     A,00FH
1239  0198  4093                        MOV     _DATA_BUF[0],A
1240  0199                              ;--
1241  0199  1483                        INC     MP1             ;FREQ 
1242  019A  1102                        SWAPA   IAR1
1243  019B  0EF0                        AND     A,0F0H
1244  019C  4593                        ORM     A,_DATA_BUF[0]
1245  019D              
1246  019D                              ;-SET LAST DATA TO FREQ
1247  019D  4713                        MOV     A,_DATA_BUF[0]
1248  019E  0082                        MOV     IAR1,A
1249  019F              
1250  019F                              ;-LOAD BACK UP LAST AVERAGE                      
1251  019F  1483                        INC     MP1             ;FREQ B        
1252  01A0  0702                        MOV     A,IAR1
1253  01A1  4094                        MOV     _DATA_BUF[1],A
1254  01A2              
1255  01A2                              ;-SET LAST DATA TO FREQB
1256  01A2  4713                        MOV     A,_DATA_BUF[0]
1257  01A3  0082                        MOV     IAR1,A
1258  01A4              
1259  01A4                              ;-SET LAST DATA TO LIMIT
1260  01A4  2000     R                  CALL    GET_KEY_LIMIT_MPX   ;MAXA
1261  01A5  4713                        MOV     A,_DATA_BUF[0]
1262  01A6  0082                        MOV     IAR1,A
1263  01A7  1483                        INC     MP1                 ;MAXB
1264  01A8  0082                        MOV     IAR1,A
1265  01A9  1483                        INC     MP1                 ;MINA
1266  01AA  0082                        MOV     IAR1,A
1267  01AB  1483                        INC     MP1                 ;MINB
1268  01AC  0082                        MOV     IAR1,A
1269  01AD              
1270  01AD                              ;-LOAD BALANCE CAP.
1271  01AD  2000     R                  CALL    GET_BALANCE_CAP_MPX  
1272  01AE                              ;--
1273  01AE  0F7F                        MOV     A,BalanceCentralPoint-1
1274  01AF  4293                        SUBM    A,_DATA_BUF[0]
1275  01B0  0F00                        MOV     A,LOW 10000H
1276  01B1  380A                        SNZ     C                                       
1277  01B2  4293                        SUBM    A,_DATA_BUF[0]
1278  01B3                              ;--                                             
1279  01B3  0F7F                        MOV     A,BalanceCentralPoint-1
1280  01B4  4294                        SUBM    A,_DATA_BUF[1]
1281  01B5  0F00                        MOV     A,LOW 10000H
1282  01B6  380A                        SNZ     C                                       
1283  01B7  4294                        SUBM    A,_DATA_BUF[1]
1284  01B8                              ;--                                             
1285  01B8  4714                        MOV     A,_DATA_BUF[1]                          
1286  01B9  4213                        SUB     A,_DATA_BUF[0]                          
1287  01BA                              ;--
1288  01BA  390A                        SNZ     Z
1289  01BB  380A                        SNZ     C
1290  01BC  1582                        DEC     IAR1
1291  01BD              
1292  01BD                              ;-CHECK IF KEY NOT ACTIVE
1293  01BD                              ;------------------------
1294  01BD                      if      KeyAmount > 16          ;KEY 17~ 24
1295  01BD                              RRC     _DATA_BUF[4]  
"File: BS82C16A_LIBV413.asm  Holtek Cross-Assembler  Version 2.92      Page 23

1296  01BD                      endif
1297  01BD                              ;------------------------
1298  01BD                      if      KeyAmount > 8           ;KEY 9 ~ 16
1299  01BD  5B96                        RRC     _DATA_BUF[3]
1300  01BE                      endif
1301  01BE                              ;------------------------
1302  01BE  5B95                        RRC     _DATA_BUF[2]
1303  01BF  380A                        SNZ     C
1304  01C0  1F02                        CLR     IAR1
1305  01C1              
1306  01C1                              ;--                                             
1307  01C1                            ;;INC     CHANNEL_INDEX                           
1308  01C1                            ;;MOV     A,CHANNEL_INDEX                         
1309  01C1                            ;;SUB     A,KeyAmount                             
1310  01C1  2000     R                  CALL    CHECK_KEY_AMOUNT                             
1311  01C2  380A                        SNZ     C                                       
1312  01C3  2800     R                  JMP     LAST_BAL_LOOP                           
1313  01C4                                       
1314  01C4                              ;-BALANCE DONE                                 
1315  01C4  70AD                        SET     _TKS_ACTIVEF
1316  01C5  702D                        SET     _FORCE_CALIBRATEF
1317  01C6                              ;--
1318  01C6  5F27                        CLR     BALANCE_BUF[0]
1319  01C7  5F28                        CLR     BALANCE_BUF[1]
1320  01C8              
1321  01C8  0003                        RET
1322  01C9              
1323  01C9              
1324  01C9              
1325  01C9                              ;----------------------------                   
1326  01C9              FAST_BALANCE:   ;-FAST BALANCE WITH BIT SHIFT                   
1327  01C9                              ;----------------------------                   
1328  01C9                              ;-DUMMY SAMPLE 4 CYCLE
1329  01C9  7928                        SNZ     BALANCE_BUF[1].2
1330  01CA  54A8                        INC     BALANCE_BUF[1]
1331  01CB  7928                        SNZ     BALANCE_BUF[1].2
1332  01CC  0003                        RET
1333  01CD              
1334  01CD              FAST_BAL_LOOP:  ;-FAST BALANCE LOOP
1335  01CD                              ;-LOAD KEY AVG
1336  01CD  2000     R                  CALL    GET_KEY_REF_MPX;FREQ_MPX
1337  01CE                              ;-DIVID 16
1338  01CE  1102                        SWAPA   IAR1
1339  01CF  0E0F                        AND     A,00FH
1340  01D0  4093                        MOV     _DATA_BUF[0],A
1341  01D1                              ;--
1342  01D1  1483                        INC     MP1
1343  01D2  1102                        SWAPA   IAR1
1344  01D3  0EF0                        AND     A,0F0H
1345  01D4  4593                        ORM     A,_DATA_BUF[0]
1346  01D5              
1347  01D5                              ;-BACKUP KEY FREQ TO KEY FREQ DIFF
1348  01D5  1483                        INC     MP1
1349  01D6  4713                        MOV     A,_DATA_BUF[0]
1350  01D7  0082                        MOV     IAR1,A
1351  01D8              
1352  01D8                              ;-LOAD BALANCE CAP.
1353  01D8  2000     R                  CALL    GET_BALANCE_CAP_MPX
1354  01D9                              ;-CHECK BALANCE POINT
1355  01D9  0F80                        MOV     A,BalanceCentralPoint
"File: BS82C16A_LIBV413.asm  Holtek Cross-Assembler  Version 2.92      Page 24

1356  01DA  4213                        SUB     A,_DATA_BUF[0]
1357  01DB                              ;-INVERT CURRENT BIT  
1358  01DB  4727                        MOV     A,BALANCE_BUF[0]  
1359  01DC  380A                        SNZ     C
1360  01DD  0482                        XORM    A,IAR1  
1361  01DE                                
1362  01DE                              ;-LOAD NEXT BIT 
1363  01DE  340A                        CLR     C
1364  01DF  5B27                        RRCA    BALANCE_BUF[0] 
1365  01E0  0582                        ORM     A,IAR1
1366  01E1              
1367  01E1              END_BALANCE:    ;-END OF BALANCE 
1368  01E1                            ;;INC     CHANNEL_INDEX
1369  01E1                            ;;MOV     A,CHANNEL_INDEX
1370  01E1                            ;;SUB     A,KeyAmount
1371  01E1  2000     R                  CALL    CHECK_KEY_AMOUNT                             
1372  01E2  380A                        SNZ     C
1373  01E3  2800     R                  JMP     FAST_BAL_LOOP
1374  01E4              
1375  01E4                              ;-SHIFT TO NEXT BIT
1376  01E4  340A                        CLR     C
1377  01E5  5BA7                        RRC     BALANCE_BUF[0]
1378  01E6  380A                        SNZ     C
1379  01E7  50A7                        SZ      BALANCE_BUF[0]
1380  01E8  0003                        RET
1381  01E9              
1382  01E9  73A8                        SET     BALANCE_BUF[1].7
1383  01EA              
1384  01EA                                                   
1385  01EA  5F26                        CLR     CHANNEL_INDEX    
1386  01EB              INC_BAL_CAP:    ;-BALANCE CAP INC    
1387  01EB  2000     R                  CALL    GET_BALANCE_CAP_MPX
1388  01EC  1482                        INC     IAR1
1389  01ED              
1390  01ED                            ;;INC     CHANNEL_INDEX           
1391  01ED                            ;;MOV     A,CHANNEL_INDEX         
1392  01ED                            ;;SUB     A,KeyAmount             
1393  01ED  2000     R                  CALL    CHECK_KEY_AMOUNT                             
1394  01EE  380A                        SNZ     C                       
1395  01EF  2800     R                  JMP     INC_BAL_CAP         
1396  01F0  0003                        RET                             
1397  01F1                                                              
1398  01F1                                                              
1399  01F1              
1400  01F1              ;;***********************************************************   
1401  01F1              ;;*SUB. NAME:RE_BALANCE                                     *   
1402  01F1              ;;*INPUT    :                                               *   
1403  01F1              ;;*OUTPUT   :                                               *   
1404  01F1              ;;*USED REG.:                                               *   
1405  01F1              ;;*FUNCTION :                                               *   
1406  01F1              ;;***********************************************************
1407  01F1              _RE_BALANCE:
1408  01F1                              ;-IF ANY KEY FUNCTION WILL ACTIVE
1409  01F1  50A5                        SZ      KEY_STATE_BUF                 
1410  01F2  5F28                        CLR     UNBALANCE_TIMER
1411  01F3                              ;--
1412  01F3  7F2D                        SZ      _TKS_500MSF
1413  01F4  50A5                        SZ      KEY_STATE_BUF                  
1414  01F5  0003                        RET
1415  01F6              
"File: BS82C16A_LIBV413.asm  Holtek Cross-Assembler  Version 2.92      Page 25

1416  01F6              HALT_RE_BALANCE:;-LOAD  BALANCE DRIFT VALUE
1417  01F6                              ;-PRE-SET BALANCE DRIFT
1418  01F6  0F0C                        MOV     A,12            
1419  01F7  7C01                        SZ      _GLOBE_VARIES[TKS_OPTIONB].SENSIVITY_LEVEL
1420  01F8  0F10                        MOV     A,16  
1421  01F9  3D0E                        SZ      TKME
1422  01FA  0B04                        ADD     A,4             ;MORE ADD 4 FOR HALT MODE
1423  01FB  4094                        MOV     _DATA_BUF[1],A
1424  01FC              
1425  01FC                              ;-LOAD KEY / IO SETTING
1426  01FC  471E                        MOV     A,_KEY_IO_SEL[0]
1427  01FD  4095                        MOV     _DATA_BUF[2],A
1428  01FE                              ;------------------------
1429  01FE                      if      KeyAmount > 8           ;KEY 9 ~ 16
1430  01FE  471F                        MOV     A,_KEY_IO_SEL[1]
1431  01FF  4096                        MOV     _DATA_BUF[3],A
1432  0200                      endif
1433  0200                              ;------------------------
1434  0200                      if      KeyAmount > 16          ;KEY 17~ 24
1435  0200                              MOV     A,_KEY_IO_SEL[2]
1436  0200                              MOV     _DATA_BUF[4],A
1437  0200                      endif
1438  0200                              ;------------------------
1439  0200              
1440  0200  5F26                        CLR     CHANNEL_INDEX
1441  0201                              ;----------------------
1442  0201              RE_BALANCE_LOOP:;-CHECK RE-BALANCE LOOP        
1443  0201                              ;----------------------
1444  0201                      if      KeyAmount > 16          ;KEY 17~ 24
1445  0201                              RRC     _DATA_BUF[4]  
1446  0201                      endif
1447  0201                              ;------------------------
1448  0201                      if      KeyAmount > 8           ;KEY 9 ~ 16
1449  0201  5B96                        RRC     _DATA_BUF[3]
1450  0202                      endif
1451  0202                              ;------------------------
1452  0202  5B95                        RRC     _DATA_BUF[2]
1453  0203  380A                        SNZ     C
1454  0204  2800     R                  JMP     END_RE_BALANCE
1455  0205              
1456  0205              
1457  0205                            ;;;-READ BALANCE CAP
1458  0205                            ;;CALL    GET_BALANCE_CAP_MPX
1459  0205                            ;;MOV     A,IAR1
1460  0205                            ;;MOV     _DATA_BUF[0],A
1461  0205              
1462  0205                              ;-READ KEY FREQ                             
1463  0205  2000     R                  CALL    GET_KEY_FREQ_MPX
1464  0206  0F80                        MOV     A,BalanceCentralPoint
1465  0207  0202                        SUB     A,IAR1
1466  0208                              ;--
1467  0208  1483                        INC     MP1     ;FREQ B
1468  0209  1483                        INC     MP1     ;BALANCE CAP
1469  020A                              ;--
1470  020A  380A                        SNZ     C
1471  020B  2800     R                  JMP     OVER_CENTRAL
1472  020C                              ;-UNDER CENTRAL BALANCE POINT
1473  020C  4214                        SUB     A,_DATA_BUF[1]
1474  020D  1402                        INCA    IAR1;_DATA_BUF[0]
1475  020E  2800     R                  JMP     CHECK_CAP_LIMIT
"File: BS82C16A_LIBV413.asm  Holtek Cross-Assembler  Version 2.92      Page 26

1476  020F              OVER_CENTRAL:   ;-OVER CENTRAL BALANCE POINT
1477  020F  0185                        CPL     ACC
1478  0210  4214                        SUB     A,_DATA_BUF[1]
1479  0211  0702                        MOV     A,IAR1;_DATA_BUF[0]
1480  0212              
1481  0212              CHECK_CAP_LIMIT:;-IF BALANCE CAP. IS MIN
1482  0212  1085                        SZ      ACC 
1483  0213  380A                        SNZ     C
1484  0214  2800     R                  JMP     END_RE_BALANCE
1485  0215                              ;-SOME KEY NEED TO RE_BALANCE
1486  0215  2800     R                  JMP     CHECK_UNBAL_TIMER
1487  0216              
1488  0216              
1489  0216              END_RE_BALANCE: ;-END OF RE-BALANCE
1490  0216                            ;;INC     CHANNEL_INDEX
1491  0216                            ;;MOV     A,CHANNEL_INDEX
1492  0216                            ;;SUB     A,KeyAmount
1493  0216  2000     R                  CALL    CHECK_KEY_AMOUNT                             
1494  0217  380A                        SNZ     C
1495  0218  2800     R                  JMP     RE_BALANCE_LOOP
1496  0219                              ;-NO KEY NEED TO RE-BALANCE
1497  0219  5F28                        CLR     UNBALANCE_TIMER
1498  021A  0003                        RET
1499  021B              
1500  021B              
1501  021B              CHECK_UNBAL_TIMER:;-COUNT & CHECK UNBALANCE TIMER
1502  021B  54A8                        INC     UNBALANCE_TIMER
1503  021C                              ;-IF UNBALANCE OVER 6/2 SEC THEN RE-INITIAL TOUCH KEY SYSTEM
1504  021C  0F04                        MOV     A,2*1000/500    ;2SEC
1505  021D  7FAD                        SZ      POWER_ON_STABLEF
1506  021E  0F0C                        MOV     A,6*1000/500    ;4SEC
1507  021F  4228                        SUB     A,UNBALANCE_TIMER
1508  0220  380A                        SNZ     C
1509  0221  2800     R                  JMP     _LIBRARY_RESET;;_BS82C16A_LIBV413_INITIAL
1510  0222  0003                        RET       
1511  0223              
1512  0223              
1513  0223              
1514  0223              
1515  0223              
1516  0223              
1517  0223              
1518  0223              ;;***********************************************************   
1519  0223              ;;*SUB. NAME:                                               *   
1520  0223              ;;*INPUT    :                                               *   
1521  0223              ;;*OUTPUT   :                                               *   
1522  0223              ;;*USED REG.:                                               *   
1523  0223              ;;*FUNCTION :                                               *   
1524  0223              ;;***********************************************************  
1525  0223              _FORCE_CALIBRATE:
1526  0223              
1527  0223  782D                        SNZ     _FORCE_CALIBRATEF
1528  0224  0003                        RET
1529  0225                              ;--
1530  0225  75AD                        CLR     _ANY_KEY_PRESSF
1531  0226  5F2B                        CLR     TKS_TIMER
1532  0227  5F2C                        CLR     TKS_TIMERB     
1533  0228  742D                        CLR     _FORCE_CALIBRATEF
1534  0229              
1535  0229  5F26                        CLR     CHANNEL_INDEX
"File: BS82C16A_LIBV413.asm  Holtek Cross-Assembler  Version 2.92      Page 27

1536  022A              
1537  022A              FORCE_CAL_LOOP: ;-FORCE CALIBRATE LOOP
1538  022A              
1539  022A                              ;-CLEAR REFERENCE WAIT DRIFT UPDATE
1540  022A  2000     R                  CALL    GET_KEY_REF_MPX
1541  022B  1F02                        CLR     IAR1
1542  022C                              ;-RESET KEY STATUS & TIMER
1543  022C  2000     R                  CALL    GET_KEY_STATUS_MPX
1544  022D  1F02                        CLR     IAR1    ;CLEAR KEY STATUS
1545  022E                              ;-CLEAR KEY TIMER
1546  022E  1483                        INC     MP1
1547  022F  1F02                        CLR     IAR1
1548  0230                              ;-CLEAR CS DEBOUNCE
1549  0230  1483                        INC     MP1
1550  0231  1F02                        CLR     IAR1
1551  0232                              ;--
1552  0232  2000     R                  CALL    CHECK_KEY_AMOUNT                             
1553  0233  380A                        SNZ     C
1554  0234  2800     R                  JMP     FORCE_CAL_LOOP
1555  0235              
1556  0235                              ;-CLEAR ALL KEY STATUS
1557  0235  5F20                        CLR     _KEY_DATA[0]
1558  0236  5F22                        CLR     KEY_BUF[0]
1559  0237                      ;--------------------------------
1560  0237                      if      KeyAmount > 8
1561  0237  5F21                        CLR     _KEY_DATA[1]
1562  0238  5F23                        CLR     KEY_BUF[1]
1563  0239                      endif
1564  0239                      ;--------------------------------
1565  0239                      if      KeyAmount > 16
1566  0239                              CLR     _KEY_DATA[2]
1567  0239                              CLR     KEY_BUF[2]
1568  0239                      endif     
1569  0239                      ;--------------------------------
1570  0239              
1571  0239  0003                        RET
1572  023A              
1573  023A              
1574  023A              
1575  023A              
1576  023A              
1577  023A              
1578  023A              
1579  023A              
1580  023A              ;;***********************************************************   
1581  023A              ;;*SUB. NAME:                                               *   
1582  023A              ;;*INPUT    :                                               *   
1583  023A              ;;*OUTPUT   :                                               *   
1584  023A              ;;*USED REG.:                                               *   
1585  023A              ;;*FUNCTION :                                               *   
1586  023A              ;;***********************************************************  
1587  023A              _NORMAL_CALIBRATE:
1588  023A              
1589  023A                              ;-CHECK IF SAMPLE TIMES =XXXX1111B = 40MS
1590  023A  541B                        INCA    _SAMPLE_TIMES
1591  023B  3A05                        SNZ     ACC.4
1592  023C  0003                        RET
1593  023D                              ;-TEST
1594  023D                            ;;MOV     A,00000010B
1595  023D                            ;;XORM    A,PA
"File: BS82C16A_LIBV413.asm  Holtek Cross-Assembler  Version 2.92      Page 28

1596  023D                            ; SZ      TKS_TIMER       ;31.25MS
1597  023D                            ; RET
1598  023D                              ;-CALCULATE CALIBRATE TIMER
1599  023D  54A7                        INC     CAL_TIMER
1600  023E  5100                        SWAPA   _GLOBE_VARIES[TKS_OPTIONA]
1601  023F  0E0F                        AND     A,00001111B
1602  0240  1485                        INC     ACC
1603  0241  1885                        RL      ACC             ;MINI=80MS ; MAX = 1280MS
1604  0242  4227                        SUB     A,CAL_TIMER
1605  0243  380A                        SNZ     C
1606  0244  5F27                        CLR     CAL_TIMER
1607  0245              
1608  0245              
1609  0245                              ;--------------------                                   
1610  0245                              ;-NORMAL CALIBRATION                                    
1611  0245                              ;--------------------                                   
1612  0245  5F26                        CLR     CHANNEL_INDEX  
1613  0246                              
1614  0246                            ;;;-TEST
1615  0246                            ;;INC     CHANNEL_INDEX
1616  0246                                                                                      
1617  0246              CALIBRATE_LOOP: ;-CALIBRATION LOOP 
1618  0246  2000     R                  CALL    GET_KEY_STATUS_MPX
1619  0247  0702                        MOV     A,IAR1          ;KEY STATUS
1620  0248  4095                        MOV     _DATA_BUF[2],A
1621  0249  1483                        INC     MP1
1622  024A  0702                        MOV     A,IAR1          ;KEY TIMER
1623  024B  4096                        MOV     _DATA_BUF[3],A
1624  024C  1483                        INC     MP1             ;CS DEBOUNCE
1625  024D  0702                        MOV     A,IAR1
1626  024E  4097                        MOV     _DATA_BUF[4],A
1627  024F                              ;-GET FREQ
1628  024F  2000     R                  CALL    GET_KEY_FREQB_MPX
1629  0250  0702                        MOV     A,IAR1
1630  0251  4098                        MOV     _DATA_BUF[5],A  ;SAVE FREQB
1631  0252                              ;--
1632  0252  1583                        DEC     MP1             ;FREQ 
1633  0253  0702                        MOV     A,IAR1
1634  0254  4099                        MOV     _DATA_BUF[6],A  ;SAVE FREQ
1635  0255              
1636  0255                              ;-IF CS INTERFERE OCCUR
1637  0255  7B95                        SNZ     _DATA_BUF[2].CS_INTERFEREF
1638  0256  2800     R                  JMP     GET_CAL_OFFSET
1639  0257                              ;-1/2 FREQ + FREQB FOR CAL
1640  0257  4318                        ADD     A,_DATA_BUF[5]
1641  0258  1B85                        RRC     ACC
1642  0259  7A02                        SNZ     _GLOBE_VARIES[TKS_OPTIONC].CS_PROTECT
1643  025A  7F97                        SZ      _DATA_BUF[4].CS_STRONGF
1644  025B  2800     R                  JMP     GET_CAL_OFFSET
1645  025C                              ;-CAL. WITH FREQB
1646  025C  4718                        MOV     A,_DATA_BUF[5]
1647  025D              
1648  025D              
1649  025D              
1650  025D              
1651  025D                              ;-IF CS INTERFERE
1652  025D                           ;; SNZ     _DATA_BUF[2].CS_INTERFEREF
1653  025D                           ;; JMP     GET_CAL_OFFSET
1654  025D                            ; ;-CALIBRATE BY FREQB
1655  025D                           ;; INC     MP1             ;KEY FREQB
"File: BS82C16A_LIBV413.asm  Holtek Cross-Assembler  Version 2.92      Page 29

1656  025D                           ;; MOV     A,IAR1
1657  025D                           ;; MOV     _DATA_BUF[5],A  ;SAVE FREQB
1658  025D                           ;; DEC     MP1             ;FREQ
1659  025D                            ; ;-IF CS STRONG
1660  025D                           ;; SNZ     _DATA_BUF[4].CS_STRONGF
1661  025D                           ;; JMP     GET_CAL_OFFSET
1662  025D                           ;; ADD     A,_DATA_BUF[6]
1663  025D                           ;; RRC     ACC             ;(FREQ+FREQB)/2
1664  025D              
1665  025D              
1666  025D              GET_CAL_OFFSET: ;-FREQ/FREQB - REF
1667  025D  1583                        DEC     MP1             ;REF
1668  025E  0202                        SUB     A,IAR1          ;FREQ/FREQB - REF
1669  025F  4093                        MOV     _DATA_BUF[0],A
1670  0260  3D0A                        SZ      Z
1671  0261  2800     R                  JMP     END_CALIBRATE
1672  0262                              ;-RECORD C FLAG
1673  0262  5F14                        CLR     _DATA_BUF[1]
1674  0263  380A                        SNZ     C
1675  0264  5F94                        SET     _DATA_BUF[1]
1676  0265              
1677  0265                              ;-CHECK IF KEY PRESS
1678  0265  7F15                        SZ      _DATA_BUF[2].KEY_PRESSF
1679  0266  2800     R                  JMP     KEY_PRESS_CAL
1680  0267              
1681  0267                              ;-----------------
1682  0267                              ;-NORMAL CALIBRATE
1683  0267                              ;----------------- 
1684  0267  7B97                        SNZ     _DATA_BUF[4].CS_STRONGF
1685  0268  2800     R                  JMP     $+6
1686  0269  7C27                        SZ      CAL_TIMER.0             ;80MS
1687  026A  2800     R                  JMP     END_CALIBRATE
1688  026B  7B94                        SNZ     _DATA_BUF[1].7          ;BIT7=0 UP CALIBRATE 
1689  026C  2800     R                  JMP     NORMAL_CAL
1690  026D  2800     R                  JMP     DO_CALIBRATE
1691  026E                                              
1692  026E              
1693  026E                              ;-CHECK IF NEED TO FAST UP CALIBRATE
1694  026E                            ;;SNZ     _DATA_BUF[2].CS_INTERFEREF
1695  026E  7F94                        SZ      _DATA_BUF[1].7
1696  026F  2800     R                  JMP     NORMAL_CAL
1697  0270                              ;IF OVER 1 THRESHOLD DONT FAST UP CALIBRATE
1698  0270  2000     R                  CALL    GET_KEY_THR_MP0
1699  0271  340A                        CLR     C
1700  0272  1B00                        RRCA    IAR0
1701  0273  0B80                        ADD     A,BalanceCentralPoint
1702  0274  4219                        SUB     A,_DATA_BUF[6]          ;IF FREQ OVER CENTRAL + 1/2 THRESHOLD
1703  0275  380A                        SNZ     C
1704  0276  2800     R                  JMP     NORMAL_CAL
1705  0277                              ;-FREQ - FREQB
1706  0277  4719                        MOV     A,_DATA_BUF[6]
1707  0278  4298                        SUBM    A,_DATA_BUF[5]
1708  0279  380A                        SNZ     C
1709  027A  5F18                        CLR     _DATA_BUF[5]
1710  027B                              ;-GET NOISE LEVEL  
1711  027B  2000     R                  CALL    GET_NOISE_LEVEL ;USER _DATA_BUF[7] ; ACC=1/2 NOISE LEVEL
1712  027C                            ;;SWAPA   IAR0
1713  027C                            ;;AND     A,00001111B
1714  027C                            ;;SZ      Z
1715  027C                            ;;MOV     A,IAR0  ;UNDER 16
"File: BS82C16A_LIBV413.asm  Holtek Cross-Assembler  Version 2.92      Page 30

1716  027C                            ;;SNZ     Z
1717  027C                            ;;ADD     A,16    ;OVER 16 THEN + 16
1718  027C                            ;;;--
1719  027C                            ;;CLR     C
1720  027C                            ;;RRC     ACC     ;1/2 NOISE LEVEL
1721  027C  4218                        SUB     A,_DATA_BUF[5]
1722  027D  3C0A                        SZ      C
1723  027E  2800     R                  JMP     DO_CALIBRATE
1724  027F              
1725  027F              
1726  027F              NORMAL_CAL:     ;-IF CALIBRATE INHIBIT TIME
1727  027F  4716                        MOV     A,_DATA_BUF[3]
1728  0280  0A03                        SUB     A,3                 ;1.5SEC ~ 2 SEC BAE ON 500MS
1729  0281  3C0A                        SZ      C
1730  0282  50A7                        SZ      CAL_TIMER
1731  0283  2800     R                  JMP     END_CALIBRATE
1732  0284  2800     R                  JMP     DO_CALIBRATE
1733  0285              
1734  0285              
1735  0285              
1736  0285                              ;-----------------------                                            
1737  0285              KEY_PRESS_CAL:  ;-KEY PRESSING CALIBRATE                                            
1738  0285                              ;-----------------------
1739  0285  7F82                        SZ      _GLOBE_VARIES[TKS_OPTIONC].ACTIVE_LOGIC                     
1740  0286  7E15                        SZ      _DATA_BUF[2].KEY_DBCEF      ;IF KEY DEBOUNCING              
1741  0287  2800     R                  JMP     END_CALIBRATE
1742  0288                              
1743  0288                            ;;;-IF CS STRONGF
1744  0288                            ;;SNZ     _DATA_BUF[4].CS_STRONGF
1745  0288                            ;;JMP     $+4
1746  0288                            ;;SET     ACC                 ;APPROACH BY 1
1747  0288                            ;;SET     _DATA_BUF[1]
1748  0288                            ;;JMP     APPROACH_REF
1749  0288                                                             
1750  0288                              ;-LOAD THRESHOLD RAM                                                
1751  0288  2000     R                  CALL    GET_KEY_THR_MP0                                             
1752  0289                              ;-IF OVER 1.75 THRESHOLD          
1753  0289  340A                        CLR     C                                                           
1754  028A  1B00                        RRCA    IAR0                                                        
1755  028B  0300                        ADD     A,IAR0                                                      
1756  028C  1B85                        RRC     ACC                                                         
1757  028D  0300                        ADD     A,IAR0                                                      
1758  028E                              ;-IF OVERFLOW                                                       
1759  028E  380A                        SNZ     C                                                           
1760  028F  3F80                        SZ      IAR0.7                                                      
1761  0290  2800     R                  JMP     END_CALIBRATE   ;THRESHOLD TOO MUCH
1762  0291                              ;--
1763  0291  4393                        ADDM    A,_DATA_BUF[0]
1764  0292  3C0A                        SZ      C                                                           
1765  0293  2800     R                  JMP     END_CALIBRATE 
1766  0294                              
1767  0294              
1768  0294                              ;----------------------                                 
1769  0294              DO_CALIBRATE:   ;-DO CALIBRATE FUNCTION
1770  0294                              ;----------------------
1771  0294              
1772  0294                           ;; ;-POINT TO REF
1773  0294                           ;; CALL    GET_KEY_REF_MPX         ;REFL
1774  0294                              ;-DO IIR FILTER & SAVE RESULT
1775  0294  0F01                        MOV     A,1
"File: BS82C16A_LIBV413.asm  Holtek Cross-Assembler  Version 2.92      Page 31

1776  0295  7F97                        SZ      _DATA_BUF[4].CS_STRONGF
1777  0296  7B94                        SNZ     _DATA_BUF[1].7          ;IF DOWN CALIBRATE
1778  0297  0F02                        MOV     A,2     ;1/4 IIR
1779  0298              ;;IIR_CALIBRATE:  ;-IIR CALIBRATE
1780  0298                            ;;;-25% IIR
1781  0298                            ;;RRC     _DATA_BUF[1]
1782  0298                            ;;RRC     _DATA_BUF[0]
1783  0298                              ;-25% IIR
1784  0298  5B94                        RRC     _DATA_BUF[1]
1785  0299  5B93                        RRC     _DATA_BUF[0]
1786  029A  1785                        SDZ     ACC
1787  029B  2800     R                  JMP     $-3
1788  029C              
1789  029C                              ;-MINIMUM = 1
1790  029C  0F01                        MOV     A,1
1791  029D  7814                        SNZ     _DATA_BUF[1].0
1792  029E  5093                        SZ      _DATA_BUF[0]
1793  029F  4713                        MOV     A,_DATA_BUF[0]
1794  02A0              
1795  02A0                              ;-SAVE IIR RESULT
1796  02A0  0382                        ADDM    A,IAR1
1797  02A1                              ;-IF "0" OVERFLOW
1798  02A1  7C14                        SZ      _DATA_BUF[1].0
1799  02A2  3C0A                        SZ      C
1800  02A3  2800     R                  JMP     $+2
1801  02A4  1F02                        CLR     IAR1
1802  02A5              
1803  02A5              
1804  02A5                              ;-CHECK IF CENTRAL POINT IN CS INTERFERE
1805  02A5  7F95                        SZ      _DATA_BUF[2].CS_INTERFEREF
1806  02A6  3B82                        SNZ     IAR1.7
1807  02A7  2800     R                  JMP     $+3               
1808  02A8  0F80                        MOV     A,BalanceCentralPoint
1809  02A9  0082                        MOV     IAR1,A
1810  02AA                                
1811  02AA                                                                                      
1812  02AA              END_CALIBRATE:  ;-END OF CALIBRATE                                      
1813  02AA                            ;;INC     CHANNEL_INDEX                                   
1814  02AA                            ;;MOV     A,CHANNEL_INDEX
1815  02AA                            ;;SUB     A,KeyAmount              
1816  02AA  2000     R                  CALL    CHECK_KEY_AMOUNT                             
1817  02AB  380A                        SNZ     C                                               
1818  02AC  2800     R                  JMP     CALIBRATE_LOOP                                  
1819  02AD                                                                                      
1820  02AD  0003                        RET                                                     
1821  02AE                                                                                      
1822  02AE              ;;***********************************************************                           
1823  02AE              ;;*SUB. NAME:                                               *                           
1824  02AE              ;;*INPUT    :                                               *                           
1825  02AE              ;;*OUTPUT   :                                               *                           
1826  02AE              ;;*USED REG.:                                               *                           
1827  02AE              ;;*FUNCTION :                                               *                           
1828  02AE              ;;***********************************************************
1829  02AE              _CHECK_KEY_TIMER:  
1830  02AE  7B2D                        SNZ     _TKS_500MSF
1831  02AF  0003                        RET
1832  02B0              
1833  02B0  5F26                        CLR     CHANNEL_INDEX                           
1834  02B1              CHK_KTIMER_LOOP:;-CHECK KEY TIMER  LOOP
1835  02B1  2000     R                  CALL    GET_KEY_STATUS_MPX
"File: BS82C16A_LIBV413.asm  Holtek Cross-Assembler  Version 2.92      Page 32

1836  02B2  0702                        MOV     A,IAR1
1837  02B3  4093                        MOV     _DATA_BUF[0],A
1838  02B4              
1839  02B4                              ;-COUNT KEY TIMER
1840  02B4  1483                        INC     MP1
1841  02B5  1602                        SIZA    IAR1
1842  02B6  0082                        MOV     IAR1,A
1843  02B7              
1844  02B7                              ;-------------------                   
1845  02B7                              ;-CHECK MAXON TIME -                  
1846  02B7                              ;-------------------              
1847  02B7  5901                        RRA     _GLOBE_VARIES[TKS_OPTIONB]
1848  02B8  0E78                        AND     A,01111000B     ;DIV2 TO MATCH PER STEP 4 SEC
1849  02B9  7F13                        SZ      _DATA_BUF[0].KEY_PRESSF       ;IF NO KEY PRESS
1850  02BA  3D0A                        SZ      Z
1851  02BB  2800     R                  JMP     END_CHK_KTIMER  ;MAXON TIME DISABLE
1852  02BC                              ;--
1853  02BC  0202                        SUB     A,IAR1
1854  02BD  3C0A                        SZ      C
1855  02BE  2800     R                  JMP     END_CHK_KTIMER
1856  02BF              
1857  02BF                              ;-LIMIT TIME OUT                               
1858  02BF  1F02                        CLR     IAR1            ;CLEAR KEY TIMER        
1859  02C0                              ;-HOLD CS BIT
1860  02C0  1583                        DEC     MP1
1861  02C1  0F80                        MOV     A,10000000B
1862  02C2  0682                        ANDM    A,IAR1
1863  02C3                            ;;CLR     IAR1            ;CLEAR KEY STATUS
1864  02C3              
1865  02C3                              ;-CLEAR REF
1866  02C3  2000     R                  CALL    GET_KEY_REF_MPX
1867  02C4  1F02                        CLR     IAR1
1868  02C5              
1869  02C5                                                                              
1870  02C5              END_CHK_KTIMER: ;-END OF CHECK MAXON TIME                       
1871  02C5                            ;;INC     CHANNEL_INDEX                           
1872  02C5                            ;;MOV     A,CHANNEL_INDEX                         
1873  02C5                            ;;SUB     A,KeyAmount                             
1874  02C5  2000     R                  CALL    CHECK_KEY_AMOUNT                             
1875  02C6  380A                        SNZ     C                                       
1876  02C7  2800     R                  JMP     CHK_KTIMER_LOOP                         
1877  02C8                                                                              
1878  02C8                                                                              
1879  02C8  0003                        RET                                             
1880  02C9                                                       
1881  02C9              
1882  02C9              ;;***********************************************************   
1883  02C9              ;;*SUB. NAME:                                               *   
1884  02C9              ;;*INPUT    :                                               *   
1885  02C9              ;;*OUTPUT   :                                               *   
1886  02C9              ;;*USED REG.:                                               *   
1887  02C9              ;;*FUNCTION :                                               *   
1888  02C9              ;;***********************************************************
1889  02C9              _TKS_STATE_CHECK:      
1890  02C9              
1891  02C9                              ;-CHECK IF SAMPLE TIMES =XXXXX010B
1892  02C9  7C9B                        SZ      _SAMPLE_TIMES.1         ;10
1893  02CA  7C1B                        SZ      _SAMPLE_TIMES.0
1894  02CB  2800     R                  JMP     $+2
1895  02CC  712D                        SET     _SCAN_CYCLEF
"File: BS82C16A_LIBV413.asm  Holtek Cross-Assembler  Version 2.92      Page 33

1896  02CD              
1897  02CD                              ;-CHECK IF SAMPLE TIMES =XXXXX001B
1898  02CD  789B                        SNZ     _SAMPLE_TIMES.1         ;01
1899  02CE  781B                        SNZ     _SAMPLE_TIMES.0          
1900  02CF  0003                        RET
1901  02D0                            ;;;-TEST
1902  02D0                            ;;CLR     PAC.3
1903  02D0                            ;;MOV     A,00001000B
1904  02D0                            ;;XORM    A,PA
1905  02D0              
1906  02D0              HALT_STATE_CHK: ;-LOAD THRESHOLD RAM ADDRESS
1907  02D0              
1908  02D0              
1909  02D0                              ;-CLEAR MAX COUNT 
1910  02D0  5F19                        CLR     MAX_COUNT       ;_DATA_BUF[6]
1911  02D1                              ;--
1912  02D1  5F26                        CLR     CHANNEL_INDEX
1913  02D2              
1914  02D2                            ;;;-TEST 
1915  02D2                            ;;INC     CHANNEL_INDEX
1916  02D2                              ;------------------------                       
1917  02D2              STATE_CHK_LOOP: ;-KEY STATE CHECK LOOP  -                       
1918  02D2                              ;------------------------
1919  02D2  2000     R                  CALL    GET_KEY_REF_MPX
1920  02D3  0702                        MOV     A,IAR1
1921  02D4  4097                        MOV     NEG_COUNT,A ;SAVE REF
1922  02D5  1483                        INC     MP1     ;FREQ
1923  02D6  0202                        SUB     A,IAR1  ;REF-FREQ
1924  02D7  380A                        SNZ     C
1925  02D8  1F05                        CLR     ACC
1926  02D9  4098                        MOV     NEG_COUNT_BACKUP,A
1927  02DA                              ;--
1928  02DA  1483                        INC     MP1     ;FREQ B
1929  02DB  4717                        MOV     A,NEG_COUNT
1930  02DC  0202                        SUB     A,IAR1  ;REF-FREQB
1931  02DD  380A                        SNZ     C
1932  02DE  2800     R                  JMP     $+4
1933  02DF  4097                        MOV     NEG_COUNT,A
1934  02E0  5F16                        CLR     POS_COUNT
1935  02E1  2800     R                  JMP     $+5
1936  02E2  0185                        CPL     ACC
1937  02E3  1485                        INC     ACC
1938  02E4  4096                        MOV     POS_COUNT,A
1939  02E5  5F17                        CLR     NEG_COUNT
1940  02E6              
1941  02E6                              ;-IF TOP UNDER REF 
1942  02E6  5098                        SZ      NEG_COUNT_BACKUP
1943  02E7  5F16                        CLR     POS_COUNT
1944  02E8              
1945  02E8              
1946  02E8                              ;-CHECK IF CS INTERFERE
1947  02E8  2000     R                  CALL    GET_CS_DBCE_MPX
1948  02E9  0702                        MOV     A,IAR1
1949  02EA  4093                        MOV     _DATA_BUF[0],A
1950  02EB                              ;--
1951  02EB  1583                        DEC     MP1             ;KEY TIMER
1952  02EC  1583                        DEC     MP1             ;KEY STATUS
1953  02ED  4718                        MOV     A,NEG_COUNT_BACKUP
1954  02EE  7A02                        SNZ     _GLOBE_VARIES[TKS_OPTIONC].CS_PROTECT
1955  02EF  7F93                        SZ      _DATA_BUF[0].CS_STRONGF
"File: BS82C16A_LIBV413.asm  Holtek Cross-Assembler  Version 2.92      Page 34

1956  02F0  2800     R                  JMP     $+2
1957  02F1  3B82                        SNZ     IAR1.CS_INTERFEREF
1958  02F2  4097                        MOV     NEG_COUNT,A
1959  02F3              
1960  02F3                              ;-LOAD THRESHOLD IN IAR0 & GET HYSTERESIS
1961  02F3  2000     R                  CALL    GET_KEY_THR_MP0
1962  02F4  340A                        CLR     C
1963  02F5  1B00                        RRCA    IAR0
1964  02F6  4095                        MOV     HYSTERESIS,A
1965  02F7              
1966  02F7                              ;--------------------                           
1967  02F7                              ;-CHECK PRESS STATE -                           
1968  02F7                              ;--------------------
1969  02F7                              ;-CHECK IF KEY PRESSED
1970  02F7  3F02                        SZ      IAR1.KEY_PRESSF
1971  02F8  2800     R                  JMP     KEY_HOLDING
1972  02F9                                                                                              
1973  02F9                              ;-----------------------                                        
1974  02F9                              ;-CHECK KEY IF KEY PRESS                                        
1975  02F9                              ;-----------------------                                        
1976  02F9                              ;-IF OVER NEG. THRESHOLD                                        
1977  02F9  0700                        MOV     A,IAR0;THRESHOLD                                        
1978  02FA  4217                        SUB     A,NEG_COUNT                                             
1979  02FB  380A                        SNZ     C                                                       
1980  02FC  2800     R                  JMP     KEY_PRESSING                                            
1981  02FD                                                                                              
1982  02FD                              ;-WAIT KEY PRESS STABLE                                         
1983  02FD  3E82                        SZ      IAR1.KEY_STABLEF                                        
1984  02FE  2800     R                  JMP     WAIT_REF_STABLE
1985  02FF              
1986  02FF                              ;-IF CS STRONG NO CHECK POS. DRIFT
1987  02FF  7F93                        SZ      _DATA_BUF[0].CS_STRONGF
1988  0300  2800     R                  JMP     $+5 
1989  0301                              ;-IF POS COUNT OVER THRESHOLD
1990  0301  4716                        MOV     A,POS_COUNT
1991  0302  0200                        SUB     A,IAR0
1992  0303  3C0A                        SZ      C
1993  0304  2800     R                  JMP     PDRIFT_DBCE
1994  0305                               
1995  0305                              ;-CLEAR DEBOUNCE & ALL KEY STATUS                               
1996  0305  0F80                        MOV     A,10000000B                                             
1997  0306  0682                        ANDM    A,IAR1                                                  
1998  0307  2800     R                  JMP     END_STATE_CHK                                           
1999  0308                                                                                              
2000  0308                              ;-----------------------                                        
2001  0308              KEY_PRESSING:   ;-KEY PRESS-ING --------                                        
2002  0308                              ;-----------------------                                        
2003  0308  0F80                        MOV     A,10000000B                                             
2004  0309  0682                        ANDM    A,IAR1  
2005  030A                              ;--               
2006  030A  3302                        SET     IAR1.KEY_PRESSF                                         
2007  030B  3282                        SET     IAR1.KEY_STABLEF   
2008  030C  3202                        SET     IAR1.KEY_DBCEF               
2009  030D  2800     R                  JMP     CLEAR_KTIMER                                            
2010  030E                                                                                              
2011  030E                              ;--------------------                                           
2012  030E              PDRIFT_DBCE:    ;-POS. DRIFT DEBOUNCE                                           
2013  030E                              ;--------------------                                           
2014  030E  1402                        INCA    IAR1
2015  030F  3A05                        SNZ     ACC.4
"File: BS82C16A_LIBV413.asm  Holtek Cross-Assembler  Version 2.92      Page 35

2016  0310  0082                        MOV     IAR1,A
2017  0311  3A05                        SNZ     ACC.4            
2018  0312  2800     R                  JMP     END_STATE_CHK                                           
2019  0313                              ;--                                                             
2020  0313  0F80                        MOV     A,10000000B                                             
2021  0314  0682                        ANDM    A,IAR1                                                  
2022  0315  3282                        SET     IAR1.KEY_STABLEF                                        
2023  0316  2800     R                  JMP     CLEAR_KTIMER                                            
2024  0317                                                                                              
2025  0317                                                                                              
2026  0317                                                                                              
2027  0317                              ;--------------                                                 
2028  0317              KEY_HOLDING:    ;-KEY HOLDING -                                                 
2029  0317                              ;--------------               
2030  0317                              ;-IF NEG COUNT UNDER HYSTERESIS ;20130529                       
2031  0317  4715                        MOV     A,HYSTERESIS                                            
2032  0318  3E02                        SZ      IAR1.KEY_DBCEF                                          
2033  0319  0700                        MOV     A,IAR0              ;IF KEY DEBOUCEING & NOT STABLE THEN CHECK THRESHOLD
2034  031A  4217                        SUB     A,NEG_COUNT                                             
2035  031B  3C0A                        SZ      C                                                       
2036  031C  2800     R                  JMP     KEY_RELEASING                                           
2037  031D                                                                
2038  031D                              ;-WAIT KEY PRESS STABLE                                         
2039  031D  3E82                        SZ      IAR1.KEY_STABLEF                                        
2040  031E  2800     R                  JMP     WAIT_REF_STABLE                                         
2041  031F                                                         
2042  031F                              ;--                  
2043  031F  7B82                        SNZ     _GLOBE_VARIES[TKS_OPTIONC].ACTIVE_LOGIC                 
2044  0320  2800     R                  JMP     NO_CHK_REPRESS                                          
2045  0321                                                                                              
2046  0321                              ;-CHECK RE-PRESS                                                
2047  0321                              ;-IF OVER THRESHOLD X 2 + 1 OR THRESHOLD X 3 IN CS INTERFERE
2048  0321                            ;;CLR     C
2049  0321  1A00                        RLCA    IAR0
2050  0322  3B82                        SNZ     IAR1.CS_INTERFEREF
2051  0323  1400                        INCA    IAR0 
2052  0324  3B80                        SNZ     IAR0.7      ;IF THRESHOLD OVER 128       
2053  0325  0300                        ADD     A,IAR0                                                  
2054  0326  380A                        SNZ     C                                                       
2055  0327  4217                        SUB     A,NEG_COUNT                                             
2056  0328  380A                        SNZ     C                                                       
2057  0329  2800     R                  JMP     RE_PRESS_DBCE                                           
2058  032A                                                                                              
2059  032A              NO_CHK_REPRESS: ;-CLEAR KEY DEBOUNCE                                            
2060  032A  0FC0                        MOV     A,11000000B                                             
2061  032B  0682                        ANDM    A,IAR1                                                  
2062  032C  2800     R                  JMP     END_STATE_CHK                                           
2063  032D                                                                                              
2064  032D                              ;-----------------------                                        
2065  032D              KEY_RELEASING:  ;-KEY RELEASING DEBOUNCE                                        
2066  032D                              ;-----------------------                                        
2067  032D  0F80                        MOV     A,10000000B                                             
2068  032E  0682                        ANDM    A,IAR1                                                  
2069  032F  3282                        SET     IAR1.KEY_STABLEF                                        
2070  0330                                                                                              
2071  0330              CLEAR_KTIMER:   ;-CLEAR KEY TIMER                                               
2072  0330  1483                        INC     MP1                                                     
2073  0331  1F02                        CLR     IAR1                                                    
2074  0332  2800     R                  JMP     END_STATE_CHK                                           
2075  0333                                                                                              
"File: BS82C16A_LIBV413.asm  Holtek Cross-Assembler  Version 2.92      Page 36

2076  0333                                                                                              
2077  0333                              ;----------------------                                         
2078  0333              RE_PRESS_DBCE:  ;-KEY RE-PRESS DEBOUNCE                                         
2079  0333                              ;----------------------                                         
2080  0333  1402                        INCA    IAR1
2081  0334  3A05                        SNZ     ACC.4
2082  0335  0082                        MOV     IAR1,A
2083  0336  3A05                        SNZ     ACC.4            
2084  0337  2800     R                  JMP     END_STATE_CHK                                           
2085  0338                              ;--                                                             
2086  0338  0FC0                        MOV     A,11000000B                                             
2087  0339  0682                        ANDM    A,IAR1                                                  
2088  033A  3282                        SET     IAR1.KEY_STABLEF                                        
2089  033B  2800     R                  JMP     END_STATE_CHK                                           
2090  033C                                                                                              
2091  033C                                                                                              
2092  033C                                                                                              
2093  033C              WAIT_REF_STABLE:;-WAIT REFERENCE STABLE                                         
2094  033C                                                                                              
2095  033C  3B02                        SNZ     IAR1.KEY_PRESSF                                         
2096  033D  2800     R                  JMP     WAIT_POS_STABLE                                         
2097  033E                                                                                              
2098  033E                              ;-CHECK MAXIMUM COUNT                                           
2099  033E  4717                        MOV     A,NEG_COUNT                                             
2100  033F  0200                        SUB     A,IAR0;THRESHOLD                                        
2101  0340  4093                        MOV     _DATA_BUF[0],A                                          
2102  0341  4219                        SUB     A,MAX_COUNT                                             
2103  0342  380A                        SNZ     C                                                       
2104  0343  2800     R                  JMP     $+5                                                     
2105  0344  4713                        MOV     A,_DATA_BUF[0]                                          
2106  0345  4099                        MOV     MAX_COUNT,A                                             
2107  0346  4726                        MOV     A,CHANNEL_INDEX                                         
2108  0347  409A                        MOV     MAX_COUNT_KEY,A                                         
2109  0348                                                                                              
2110  0348                              ;-WAIT KEY DEBOUNCE DONE  
2111  0348  5624                        SIZA    KEY_DBCE        ;20130425
2112  0349  2800     R                  JMP     END_STATE_CHK 
2113  034A              
2114  034A              
2115  034A                              ;-NEG_COUNT_BACKUP - THRESHOLD
2116  034A  4718                        MOV     A,NEG_COUNT_BACKUP
2117  034B  0200                        SUB     A,IAR0
2118  034C                              ;-CHECK IF CS INTERFERE & CAN BE PRESS
2119  034C  3F82                        SZ      IAR1.CS_INTERFEREF
2120  034D  380A                        SNZ     C
2121  034E  2800     R                  JMP     $+6;NO_CSI
2122  034F                              ;-RESET CS INTERFERE
2123  034F  3782                        CLR     IAR1.CS_INTERFEREF
2124  0350  1483                        INC     MP1                 ;KEY TIMER
2125  0351  1483                        INC     MP1                 ;KEY CS DBCE
2126  0352  1F02                        CLR     IAR1                ;CLEAR CS DBCE
2127  0353  2800     R                  JMP     END_STATE_CHK
2128  0354              
2129  0354              
2130  0354                              ;-CHECK IF DON'T NEED UPDATA REFERENCE VALUE                    
2131  0354  3B82                        SNZ     IAR1.CS_INTERFEREF  ;20131227
2132  0355  7B82                        SNZ     _GLOBE_VARIES[TKS_OPTIONC].ACTIVE_LOGIC                 
2133  0356  2800     R                  JMP     STABLE_DBCE                                             
2134  0357                                                                                              
2135  0357                              ;-IF OVER 2.0 THRESOLD - 1                                     
"File: BS82C16A_LIBV413.asm  Holtek Cross-Assembler  Version 2.92      Page 37

2136  0357  1500                        DECA    IAR0                          ;
2137  0358  0300                        ADD     A,IAR0
2138  0359  380A                        SNZ     C
2139  035A  4297                        SUBM    A,NEG_COUNT                                             
2140  035B  3C0A                        SZ      C                                                       
2141  035C  2800     R                  JMP     STABLE_DBCE                                             
2142  035D                                                                                              
2143  035D                              ;-CLEAR STABLE DEBOUNCE  
2144  035D                          ;;  CALL    GET_KEY_STATUS_MPX             
2145  035D  0FF0                        MOV     A,11110000B                                             
2146  035E  0682                        ANDM    A,IAR1        
2147  035F                              ;-CLEAR KEY TIMER
2148  035F  1483                        INC     MP1
2149  0360  1F02                        CLR     IAR1
2150  0361                              ;-UPDATE REF                                                    
2151  0361  2000     R                  CALL    GET_KEY_REF_MPX
2152  0362  4717                        MOV     A,NEG_COUNT                                             
2153  0363  0382                        ADDM    A,IAR1 
2154  0364  380A                        SNZ     C
2155  0365  1F02                        CLR     IAR1            ;MIN IS 0       
2156  0366  2800     R                  JMP     END_STATE_CHK                                           
2157  0367                                                                                              
2158  0367                                                                                              
2159  0367              WAIT_POS_STABLE:;-WIAT POS COUNT STABLE                                         
2160  0367                              ;-WAIT KEY DEBOUNCE DONE
2161  0367  5624                        SIZA    KEY_DBCE        ;20130425
2162  0368  2800     R                  JMP     END_STATE_CHK
2163  0369                              ;--                 
2164  0369  5096                        SZ      POS_COUNT                                               
2165  036A  2800     R                  JMP     $+2                     ;
2166  036B  2800     R                  JMP     STABLE_DBCE                                             
2167  036C                              ;-CLEAR STABLE DEBOUNCE                                         
2168  036C  0FF0                        MOV     A,11110000B                                             
2169  036D  0682                        ANDM    A,IAR1   
2170  036E                              ;-TEMP SAVE KEY STATUS
2171  036E  0702                        MOV     A,IAR1
2172  036F  4093                        MOV     _DATA_BUF[0],A
2173  0370                              ;-CLEAR KEY TIMER
2174  0370  1483                        INC     MP1
2175  0371  1F02                        CLR     IAR1
2176  0372                              
2177  0372                              ;-UPDATE REF
2178  0372  2000     R                  CALL    GET_KEY_FREQ_MPX        ;FREQ
2179  0373  7F93                        SZ      _DATA_BUF[0].CS_INTERFEREF
2180  0374  1483                        INC     MP1                     ;FREQ BOT
2181  0375                              ;-IF OVER 128 IN CS INTERFERE
2182  0375  0F80                        MOV     A,BalanceCentralPoint   ;MAX
2183  0376  7F93                        SZ      _DATA_BUF[0].CS_INTERFEREF
2184  0377  3B82                        SNZ     IAR1.7
2185  0378  0702                        MOV     A,IAR1
2186  0379                              ;--
2187  0379  1583                        DEC     MP1                     
2188  037A  7F93                        SZ      _DATA_BUF[0].CS_INTERFEREF
2189  037B  1583                        DEC     MP1
2190  037C  0082                        MOV     IAR1,A                  ;KEY REF
2191  037D  2800     R                  JMP     END_STATE_CHK
2192  037E                                                                                              
2193  037E                                                                                              
2194  037E              STABLE_DBCE:    ;-DEBOUNCE 4 TIMES  
2195  037E                           ;; CALL    GET_KEY_STATUS_MPX  
"File: BS82C16A_LIBV413.asm  Holtek Cross-Assembler  Version 2.92      Page 38

2196  037E  1482                        INC     IAR1                                                    
2197  037F  0FC0                        MOV     A,11000000B                                             
2198  0380  3D02                        SZ      IAR1.2                                                  
2199  0381  0682                        ANDM    A,IAR1          ;REFERENCE STABLE
2200  0382                                                     
2201  0382                                                                                              
2202  0382                                                                                              
2203  0382              END_STATE_CHK:  ;-END OF KEY STATE CHECK
2204  0382  2000     R                  CALL    CHECK_KEY_AMOUNT                                        
2205  0383  380A                        SNZ     C                                                       
2206  0384  2800     R                  JMP     STATE_CHK_LOOP                                          
2207  0385                                
2208  0385                                                                                              
2209  0385              
2210  0385              ;;***********************************************************   
2211  0385              ;;*SUB. NAME:                                               *   
2212  0385              ;;*INPUT    :                                               *   
2213  0385              ;;*OUTPUT   :                                               *   
2214  0385              ;;*USED REG.:                                               *   
2215  0385              ;;*FUNCTION :                                               *   
2216  0385              ;;***********************************************************  
2217  0385              _GET_KEY:            
2218  0385              
2219  0385                              ;----------------------
2220  0385                              ;-CHECK ALL KEY STATUS-
2221  0385                              ;----------------------
2222  0385  5F25                        CLR     KEY_STATE_BUF  
2223  0386  5F13                        CLR     _DATA_BUF[0]
2224  0387                      ;--------------------------------
2225  0387                      if      KeyAmount > 8
2226  0387  5F14                        CLR     _DATA_BUF[1]
2227  0388                      endif
2228  0388                      ;--------------------------------
2229  0388                      if      KeyAmount > 16
2230  0388                              CLR     _DATA_BUF[2]
2231  0388                      endif
2232  0388                      ;--------------------------------
2233  0388  5F17                        CLR     _DATA_BUF[4]
2234  0389  0F10                        MOV     A,KeyAmount
2235  038A  40A6                        MOV     CHANNEL_INDEX,A
2236  038B  2000     R                  CALL    GET_KEY_STATUS_MPX
2237  038C              GET_KSTS_LOOP:  ;-GET KEY STATUS LOOP & GET KEY PRESS AMOUNT
2238  038C                            ;;CALL    GET_KEY_STATUS_MPX
2239  038C  0FFD                        MOV     A,100H-3;4    ;OFFSET 3
2240  038D  0383                        ADDM    A,MP1
2241  038E                              ;-GET KEY ALL STATE
2242  038E  0702                        MOV     A,IAR1
2243  038F  45A5                        ORM     A,KEY_STATE_BUF
2244  0390              
2245  0390                              ;-GET WHICH KEY PRESS
2246  0390  7917                        SNZ     _DATA_BUF[4].2
2247  0391  3B02                        SNZ     IAR1.KEY_PRESSF
2248  0392  2800     R                  JMP     $+2
2249  0393  5497                        INC     _DATA_BUF[4]            ;COUNT PRESS KEY AMOUNT & MAX 4 KEY
2250  0394                              ;--
2251  0394  300A                        SET     C
2252  0395  3B02                        SNZ     IAR1.KEY_PRESSF
2253  0396  340A                        CLR     C
2254  0397  5A93                        RLC     _DATA_BUF[0]
2255  0398                      ;--------------------------------
"File: BS82C16A_LIBV413.asm  Holtek Cross-Assembler  Version 2.92      Page 39

2256  0398                      if      KeyAmount > 8
2257  0398  5A94                        RLC     _DATA_BUF[1]
2258  0399                      endif
2259  0399                      ;--------------------------------
2260  0399                      if      KeyAmount > 16
2261  0399                              RLC     _DATA_BUF[2]
2262  0399                      endif
2263  0399                      ;--------------------------------
2264  0399  57A6                        SDZ     CHANNEL_INDEX
2265  039A  2800     R                  JMP     GET_KSTS_LOOP
2266  039B              
2267  039B              
2268  039B                              ;-KEY DEBOUNCE
2269  039B  4713                        MOV     A,_DATA_BUF[0]
2270  039C  44A2                        XORM    A,KEY_BUF[0]
2271  039D  40A2                        MOV     KEY_BUF[0],A
2272  039E  390A                        SNZ     Z
2273  039F  5F24                        CLR     KEY_DBCE
2274  03A0              
2275  03A0                      ;--------------------------------
2276  03A0                      if      KeyAmount > 8
2277  03A0  4714                        MOV     A,_DATA_BUF[1]
2278  03A1  44A3                        XORM    A,KEY_BUF[1]
2279  03A2  40A3                        MOV     KEY_BUF[1],A
2280  03A3  390A                        SNZ     Z
2281  03A4  5F24                        CLR     KEY_DBCE
2282  03A5                      endif
2283  03A5                      ;--------------------------------
2284  03A5                      if      KeyAmount > 16
2285  03A5                              MOV     A,_DATA_BUF[2]
2286  03A5                              XORM    A,KEY_BUF[2]
2287  03A5                              MOV     KEY_BUF[2],A
2288  03A5                              SNZ     Z
2289  03A5                              CLR     KEY_DBCE
2290  03A5                      endif
2291  03A5                      ;--------------------------------
2292  03A5              
2293  03A5                              ;------------------------
2294  03A5                              ;-CHECK IF DEBOUNCE DONE-
2295  03A5                              ;------------------------
2296  03A5  5424                        INCA    KEY_DBCE
2297  03A6  3D0A                        SZ      Z
2298  03A7  0003                        RET
2299  03A8  40A4                        MOV     KEY_DBCE,A
2300  03A9              
2301  03A9              
2302  03A9                              ;-LOAD DEBOUNCE SETTING
2303  03A9  4700                        MOV     A,_GLOBE_VARIES[TKS_OPTIONA]
2304  03AA  0E0F                        AND     A,00001111B             ;MAX=15
2305  03AB  1485                        INC     ACC                     ;MIN=1
2306  03AC                              ;-IF ONE KEY ACTIVE THEN ADD MORE DEBOUNCE TIME
2307  03AC                            ;;SNZ     KEY_STATE_BUF.CS_INTERFEREF     ;IF CS INTERFERE THEN IS ONE KEY ACTIVE
2308  03AC                            ;;SNZ     _GLOBE_VARIES[TKS_OPTIONC].ONE_KEY_ACTIVE
2309  03AC                            ;;JMP     $+2
2310  03AC                            ;;JMP     $+6
2311  03AC  7A82                        SNZ     _GLOBE_VARIES[TKS_OPTIONC].ONE_KEY_ACTIVE
2312  03AD  2800     R                  JMP     $+6
2313  03AE  7917                        SNZ     _DATA_BUF[4].2
2314  03AF  7C97                        SZ      _DATA_BUF[4].1
2315  03B0  1885                        RL      ACC
"File: BS82C16A_LIBV413.asm  Holtek Cross-Assembler  Version 2.92      Page 40

2316  03B1  7D17                        SZ      _DATA_BUF[4].2
2317  03B2  1885                        RL      ACC
2318  03B3              
2319  03B3                              ;-CHECK DEBOUNCE TIME
2320  03B3  4224                        SUB     A,KEY_DBCE
2321  03B4  3C0A                        SZ      C
2322  03B5  0003                        RET
2323  03B6  5FA4                        SET     KEY_DBCE
2324  03B7              
2325  03B7              
2326  03B7                              ;-CLEAR KEY DBCE ; ADD 20130530
2327  03B7  5F26                        CLR     CHANNEL_INDEX
2328  03B8  2000     R                  CALL    GET_KEY_STATUS_MPX
2329  03B9  3602                        CLR     IAR1.KEY_DBCEF
2330  03BA  2000     R                  CALL    CHECK_KEY_AMOUNT
2331  03BB  380A                        SNZ     C
2332  03BC  2800     R                  JMP     $-4
2333  03BD              
2334  03BD              
2335  03BD                              ;-CHECK ONE KEY ACTIVE OPTION
2336  03BD  4717                        MOV     A,_DATA_BUF[4]
2337  03BE  0A02                        SUB     A,2
2338  03BF                              ;--
2339  03BF                            ;;SNZ     KEY_STATE_BUF.CS_INTERFEREF     ;IF CS INTERFERE THEN IS ONE KEY ACTIVE
2340  03BF  7E82                        SZ      _GLOBE_VARIES[TKS_OPTIONC].ONE_KEY_ACTIVE
2341  03C0  380A                        SNZ     C                       ;IF UNDER 2 KEY
2342  03C1  2800     R                  JMP     GET_NEW_KSTATUS   
2343  03C2                              ;-IF OVER 3 KEY
2344  03C2  7D17                        SZ      _DATA_BUF[4].2
2345  03C3  2800     R                  JMP     _FORCE_CALIBRATE        ;FORCE-CALIBRATE
2346  03C4                              ;-IF ANY KEY PRESS
2347  03C4  7DAD                        SZ      _ANY_KEY_PRESSF
2348  03C5  2800     R                  JMP     MASK_NEW_KEY
2349  03C6              
2350  03C6              
2351  03C6              
2352  03C6              
2353  03C6                              ;------------------
2354  03C6                              ;-GET MAX COUNT KEY
2355  03C6                              ;------------------
2356  03C6  5F20                        CLR     _KEY_DATA[0]
2357  03C7                      ;--------------------------------
2358  03C7                      if      KeyAmount > 8
2359  03C7  5F21                        CLR     _KEY_DATA[1]
2360  03C8                      endif
2361  03C8                      ;--------------------------------
2362  03C8                      if      KeyAmount > 16
2363  03C8                              CLR     _KEY_DATA[2]
2364  03C8                      endif
2365  03C8                      ;--------------------------------
2366  03C8  541A                        INCA    MAX_COUNT_KEY
2367  03C9  300A                        SET     C
2368  03CA              GET_MAXC_KEY:   ;-GET MAX COUNT KEY
2369  03CA  5AA0                        RLC     _KEY_DATA[0]
2370  03CB                      ;--------------------------------
2371  03CB                      if      KeyAmount > 8 
2372  03CB  5AA1                        RLC     _KEY_DATA[1]
2373  03CC                      endif
2374  03CC                      ;--------------------------------
2375  03CC                      if      KeyAmount > 16
"File: BS82C16A_LIBV413.asm  Holtek Cross-Assembler  Version 2.92      Page 41

2376  03CC                              RLC     _KEY_DATA[2]
2377  03CC                      endif
2378  03CC                      ;--------------------------------
2379  03CC  340A                        CLR     C
2380  03CD  1785                        SDZ     ACC
2381  03CE  2800     R                  JMP     GET_MAXC_KEY
2382  03CF              
2383  03CF              
2384  03CF              
2385  03CF                              ;------------------------
2386  03CF              MASK_NEW_KEY:   ;-MASK INVALID KEY STATUS
2387  03CF                              ;------------------------
2388  03CF                              ;-GET CHANGE KEY BIT
2389  03CF  4720                        MOV     A,_KEY_DATA[0]
2390  03D0  44A2                        XORM    A,KEY_BUF[0]
2391  03D1                      ;--------------------------------
2392  03D1                      if      KeyAmount > 8 
2393  03D1  4721                        MOV     A,_KEY_DATA[1]
2394  03D2  44A3                        XORM    A,KEY_BUF[1]
2395  03D3                      endif
2396  03D3                      ;--------------------------------
2397  03D3                      if      KeyAmount > 16
2398  03D3                              MOV     A,_KEY_DATA[2]
2399  03D3                              XORM    A,KEY_BUF[2]
2400  03D3                      endif
2401  03D3                      ;--------------------------------
2402  03D3              
2403  03D3  5F26                        CLR     CHANNEL_INDEX
2404  03D4              CLR_INVALID_KEY:;-CLEAR INVALID KEY STATUS
2405  03D4                      ;--------------------------------
2406  03D4                      if      KeyAmount > 16
2407  03D4                              RRC     KEY_BUF[2]
2408  03D4                      endif
2409  03D4                      ;--------------------------------
2410  03D4                      if      KeyAmount > 8 
2411  03D4  5BA3                        RRC     KEY_BUF[1]
2412  03D5                      endif
2413  03D5                      ;--------------------------------
2414  03D5  5BA2                        RRC     KEY_BUF[0]
2415  03D6  380A                        SNZ     C
2416  03D7  2800     R                  JMP     END_CLR_INVALIDK
2417  03D8              
2418  03D8  2000     R                  CALL    GET_KEY_STATUS_MPX
2419  03D9  0702                        MOV     A,IAR1
2420  03DA  4093                        MOV     _DATA_BUF[0],A
2421  03DB              
2422  03DB  2000     R                  CALL    GET_KEY_FREQ_MPX
2423  03DC  7F93                        SZ      _DATA_BUF[0].CS_INTERFEREF
2424  03DD  1483                        INC     MP1             ;FREQ B
2425  03DE  0702                        MOV     A,IAR1
2426  03DF  1583                        DEC     MP1                        
2427  03E0  7F93                        SZ      _DATA_BUF[0].CS_INTERFEREF
2428  03E1  1583                        DEC     MP1
2429  03E2  0082                        MOV     IAR1,A          ;UPDATE KEY REF
2430  03E3              
2431  03E3              END_CLR_INVALIDK:;-END OF CHECK INVALID KEY
2432  03E3  2000     R                  CALL    CHECK_KEY_AMOUNT
2433  03E4  380A                        SNZ     C
2434  03E5  2800     R                  JMP     CLR_INVALID_KEY
2435  03E6              
"File: BS82C16A_LIBV413.asm  Holtek Cross-Assembler  Version 2.92      Page 42

2436  03E6  4720                        MOV     A,_KEY_DATA[0]
2437  03E7  40A2                        MOV     KEY_BUF[0],A
2438  03E8                      ;--------------------------------
2439  03E8                      if      KeyAmount > 8 
2440  03E8  4721                        MOV     A,_KEY_DATA[1]
2441  03E9  40A3                        MOV     KEY_BUF[1],A
2442  03EA                      endif
2443  03EA                      ;--------------------------------
2444  03EA                      if      KeyAmount > 16
2445  03EA                              MOV     A,_KEY_DATA[2]
2446  03EA                              MOV     KEY_BUF[2],A
2447  03EA                      endif
2448  03EA                      ;--------------------------------
2449  03EA              
2450  03EA              
2451  03EA                              ;--------------------
2452  03EA              GET_NEW_KSTATUS:;-SAVE NEW KEY STATE
2453  03EA                              ;--------------------
2454  03EA  4722                        MOV     A,KEY_BUF[0]
2455  03EB  40A0                        MOV     _KEY_DATA[0],A
2456  03EC                      ;--------------------------------
2457  03EC                      if      KeyAmount > 8 
2458  03EC  4723                        MOV     A,KEY_BUF[1]
2459  03ED  40A1                        MOV     _KEY_DATA[1],A
2460  03EE                      endif
2461  03EE                      ;--------------------------------
2462  03EE                      if      KeyAmount > 16
2463  03EE                              MOV     A,KEY_BUF[2]
2464  03EE                              MOV     _KEY_DATA[2],A
2465  03EE                      endif
2466  03EE                      ;--------------------------------
2467  03EE              
2468  03EE                              ;--------------------
2469  03EE                              ;-CHECK ANY KEY PRESS
2470  03EE                              ;--------------------
2471  03EE                      ;--------------------------------
2472  03EE                      if      KeyAmount > 16
2473  03EE                              OR      A,_KEY_DATA[1]
2474  03EE                      endif
2475  03EE                      ;--------------------------------
2476  03EE  4520                        OR      A,_KEY_DATA[0]
2477  03EF  75AD                        CLR     _ANY_KEY_PRESSF
2478  03F0  390A                        SNZ     Z
2479  03F1  71AD                        SET     _ANY_KEY_PRESSF
2480  03F2  0003                        RET
2481  03F3              
2482  03F3              
2483  03F3              
2484  03F3              
2485  03F3              
2486  03F3                                                                              
2487  03F3              ;;***********************************************************   
2488  03F3              ;;*SUB. NAME:                                               *   
2489  03F3              ;;*INPUT    :                                               *   
2490  03F3              ;;*OUTPUT   :                                               *   
2491  03F3              ;;*USED REG.:                                               *   
2492  03F3              ;;*FUNCTION :                                               *   
2493  03F3              ;;***********************************************************
2494  03F3              _CS_NOISE_CHECK:
2495  03F3              
"File: BS82C16A_LIBV413.asm  Holtek Cross-Assembler  Version 2.92      Page 43

2496  03F3              
2497  03F3                              ;------------------------
2498  03F3                              ;-COUNT DOWN CS STAY TIME
2499  03F3                              ;------------------------
2500  03F3  50AA                        SZ      CS_STAY_TIME
2501  03F4  7B2D                        SNZ     _TKS_500MSF
2502  03F5  2800     R                  JMP     CSN_CHECK
2503  03F6                              ;--
2504  03F6  57AA                        SDZ     CS_STAY_TIME
2505  03F7  2800     R                  JMP     CSN_CHECK
2506  03F8                              ;-CLEAR CS FLAG
2507  03F8  5F26                        CLR     CHANNEL_INDEX
2508  03F9                              ;--
2509  03F9  2000     R                  CALL    GET_CS_DBCE_MPX
2510  03FA  1F02                        CLR     IAR1
2511  03FB  1583                        DEC     MP1     ;KEY TIMER
2512  03FC  1583                        DEC     MP1     ;KEY STATUS
2513  03FD  3782                        CLR     IAR1.CS_INTERFEREF
2514  03FE  2000     R                  CALL    CHECK_KEY_AMOUNT
2515  03FF  380A                        SNZ     C
2516  0400  2800     R                  JMP     $-7
2517  0401                                                                              
2518  0401              
2519  0401              CSN_CHECK:      ;-CHECK IF SAMPLE TIMES =XXXX0111B = 40MS
2520  0401  471B                        MOV     A,_SAMPLE_TIMES
2521  0402  0C07                        XOR     A,00000111B
2522  0403  390A                        SNZ     Z
2523  0404  0003                        RET
2524  0405                            ;;CLR     PAC.7
2525  0405                            ;;MOV     A,10000000B
2526  0405                            ;;XORM    A,PA
2527  0405                              ;--                                             
2528  0405  5F26                        CLR     CHANNEL_INDEX    
2529  0406                              
2530  0406                            ;;;-TEST
2531  0406                            ;;INC     CHANNEL_INDEX
2532  0406                            
2533  0406                                                                              
2534  0406              CSN_CHK_LOOP:   ;-CS NOISE CHECK LOOP
2535  0406  2000     R                  CALL    GET_KEY_FREQB_MPX
2536  0407  0702                        MOV     A,IAR1
2537  0408  4094                        MOV     _DATA_BUF[1],A
2538  0409  4095                        MOV     _DATA_BUF[2],A
2539  040A  4096                        MOV     _DATA_BUF[3],A
2540  040B                              ;--
2541  040B  1583                        DEC     MP1             ;FREQ
2542  040C  0702                        MOV     A,IAR1
2543  040D  4294                        SUBM    A,_DATA_BUF[1]  ;SAVE FREQ-FREQB
2544  040E  380A                        SNZ     C
2545  040F  5F14                        CLR     _DATA_BUF[1]
2546  0410                              ;--
2547  0410  1583                        DEC     MP1             ;REF
2548  0411  0702                        MOV     A,IAR1
2549  0412  4295                        SUBM    A,_DATA_BUF[2]  ;SAVE REF-FREQB
2550  0413  380A                        SNZ     C
2551  0414  5F15                        CLR     _DATA_BUF[2]                         
2552  0415              
2553  0415              
2554  0415                              ;-CHECK KEY STATUS
2555  0415  2000     R                  CALL    GET_KEY_STATUS_MPX
"File: BS82C16A_LIBV413.asm  Holtek Cross-Assembler  Version 2.92      Page 44

2556  0416  0702                        MOV     A,IAR1
2557  0417  4093                        MOV     _DATA_BUF[0],A
2558  0418  1483                        INC     MP1             ;KEY TIMER
2559  0419  1483                        INC     MP1             ;CS DBCE
2560  041A                              ;-------------------------
2561  041A                              ;-CHECK CS DISAPPEAR LEVEL
2562  041A                              ;-------------------------
2563  041A                              ;-GET NOISE LEVEL                                   
2564  041A  2000     R                  CALL    GET_KEY_THR_MP0
2565  041B  2000     R                  CALL    GET_NOISE_LEVEL ;USER _DATA_BUF[7] ; ACC=1/2 NOISE LEVEL
2566  041C                            ;;SWAPA   IAR0
2567  041C                            ;;AND     A,00001111B
2568  041C                            ;;SZ      Z
2569  041C                            ;;MOV     A,IAR0  ;UNDER 16
2570  041C                            ;;SNZ     Z
2571  041C                            ;;ADD     A,16    ;OVER 16 THEN + 16
2572  041C                            ;;MOV     _DATA_BUF[7],A          ;SAVE NOISE LEVEL
2573  041C                            ;;;-IF FREQB < Central + 1/2 NoiseLevel  NO CHECK CS DISAPPEAR
2574  041C                            ;;CLR     C
2575  041C                            ;;RRC     ACC
2576  041C                              ;-IF FREQB < Central + 1/2 NoiseLevel  NO CHECK CS DISAPPEAR
2577  041C  4098                        MOV     _DATA_BUF[5],A          ;SAVE 1/2 NOISE LEVEL
2578  041D  0B80                        ADD     A,BalanceCentralPoint
2579  041E  4216                        SUB     A,_DATA_BUF[3]
2580  041F  3C0A                        SZ      C
2581  0420  2800     R                  JMP     CHECK_CS_APPEAR
2582  0421              
2583  0421                              ;-IF NOISE LEVEL UNDER 1/2 NOISE LEVEL CHECK CS DISAPPEAR
2584  0421  5518                        DECA    _DATA_BUF[5]
2585  0422  4214                        SUB     A,_DATA_BUF[1]          ;BY FREQ-FREQB
2586  0423  3C0A                        SZ      C
2587  0424  2800     R                  JMP     CS_DISAPPEAR_DBCE
2588  0425              
2589  0425              CHECK_CS_APPEAR:;-IF KEY PRESS OR NON STABLE
2590  0425  7F13                        SZ      _DATA_BUF[0].KEY_PRESSF
2591  0426  3782                        CLR     IAR1.CS_STRONGF                 ;IF KEY PRESS THEN CLEAR CS STRONG
2592  0427  7F13                        SZ      _DATA_BUF[0].KEY_PRESSF
2593  0428  2800     R                  JMP     CLR_CS_DBCE
2594  0429              
2595  0429                              ;-CHECK CS INTERFERE WITH 1TH+1/2NOISE LEVEL  OR 1 NOISE LEVEL
2596  0429                            ;;CALL    GET_KEY_THR_MP0
2597  0429  7F93                        SZ      _DATA_BUF[0].CS_INTERFEREF
2598  042A  2800     R                  JMP     CHECK_CS_STRONG
2599  042B                              ;-IF OVER 1TH + 1/2 NOISE LEVEL
2600  042B  1500                        DECA    IAR0
2601  042C  4318                        ADD     A,_DATA_BUF[5]
2602  042D  4215                        SUB     A,_DATA_BUF[2]  ;BY REF-FREQB
2603  042E                              ;-IF OVER 1 NOISE LEVEL
2604  042E  471A                        MOV     A,_DATA_BUF[7];[4]
2605  042F  3C0A                        SZ      C
2606  0430  4214                        SUB     A,_DATA_BUF[1]
2607  0431  380A                        SNZ     C
2608  0432  2800     R                  JMP     CS_APPEAR_DBCE
2609  0433  2800     R                  JMP     CLR_CS_DBCE
2610  0434              
2611  0434              CHECK_CS_STRONG:;-CHECK IF CS STRONG
2612  0434                            ;;SZ      IAR1.CS_STRONGF
2613  0434                            ;;JMP     CLR_CS_DBCE
2614  0434                              ;;CLR     C
2615  0434                              ;;RRCA    IAR0            ;2 THR
"File: BS82C16A_LIBV413.asm  Holtek Cross-Assembler  Version 2.92      Page 45

2616  0434                              ;;ADD     A,IAR0          ;1.5 THR
2617  0434                              ;;ADD     A,_DATA_BUF[5]  ;1.5 THR + 0.5 NOISE LEVEL
2618  0434  340A                        CLR     C
2619  0435  1A00                        RLCA    IAR0
2620  0436  380A                        SNZ     C
2621  0437  4214                        SUB     A,_DATA_BUF[1]  ;BY FREQ-FREQB
2622  0438  380A                        SNZ     C
2623  0439  2800     R                  JMP     CS_APPEAR_DBCE
2624  043A                              ;--
2625  043A  7E93                        SZ      _DATA_BUF[0].KEY_STABLEF
2626  043B  2800     R                  JMP     END_CSN_CHK
2627  043C              
2628  043C              CLR_CS_DBCE:    ;-CLEAR CS DEBOUNCE
2629  043C                            ;;CALL    GET_CS_DBCE_MPX
2630  043C  0FE0                        MOV     A,11100000B
2631  043D  0682                        ANDM    A,IAR1
2632  043E                            ;;CLR     IAR1.CS_PRESTRONGF
2633  043E  2800     R                  JMP     END_CSN_CHK
2634  043F                             
2635  043F                              ;------------------------
2636  043F              CS_DISAPPEAR_DBCE:;-CS DISAPPEAR DEBOUNCE  
2637  043F                              ;------------------------
2638  043F  1402                        INCA    IAR1            ;CS_DBCE + 1 & CLEAR HIGH NIBBLE
2639  0440  3F02                        SZ      IAR1.CS_APPEARF
2640  0441  0EE0                        AND     A,11100000B
2641  0442  0082                        MOV     IAR1,A
2642  0443  3702                        CLR     IAR1.CS_APPEARF
2643  0444                              ;--
2644  0444  0E1F                        AND     A,00011111B
2645  0445  0A14                        SUB     A,800/40        ;ABOUT 800MS
2646  0446  380A                        SNZ     C
2647  0447  2800     R                  JMP     END_CSN_CHK
2648  0448                              ;-CLEAR CS DEBOUNCE
2649  0448  1F02                        CLR     IAR1
2650  0449  1583                        DEC     MP1             ;KEY TIMER
2651  044A  1583                        DEC     MP1             ;KEY STATUS
2652  044B  3782                        CLR     IAR1.CS_INTERFEREF
2653  044C  2800     R                  JMP     END_CSN_CHK
2654  044D              
2655  044D                              ;------------------------
2656  044D              CS_APPEAR_DBCE: ;-CS APPEAR DEBOUNCE ----
2657  044D                              ;------------------------
2658  044D  1402                        INCA    IAR1
2659  044E  3B02                        SNZ     IAR1.CS_APPEARF
2660  044F  0EE0                        AND     A,11100000B     ;CLEAR CS DEBOUNCE
2661  0450  0082                        MOV     IAR1,A
2662  0451  3302                        SET     IAR1.CS_APPEARF
2663  0452                              ;--
2664  0452  0E1F                        AND     A,00011111B
2665  0453  7F93                        SZ      _DATA_BUF[0].CS_INTERFEREF
2666  0454  0A0D                        SUB     A,520/40        ;520MS FOR CS STRONG
2667  0455  7B93                        SNZ     _DATA_BUF[0].CS_INTERFEREF
2668  0456  0A03                        SUB     A,120/40        ;ABOUT 120MS
2669  0457  380A                        SNZ     C
2670  0458  2800     R                  JMP     END_CSN_CHK
2671  0459              
2672  0459              
2673  0459                              ;-CLEAR CS DEBOUNCE
2674  0459                            ;;MOV     A,11100000B
2675  0459                            ;;ANDM    A,IAR1 
"File: BS82C16A_LIBV413.asm  Holtek Cross-Assembler  Version 2.92      Page 46

2676  0459  1F02                        CLR     IAR1
2677  045A                              ;-CHECK CS STRONG WITH 1.5 NOISE LEVEL
2678  045A  7F93                        SZ      _DATA_BUF[0].CS_INTERFEREF
2679  045B  3382                        SET     IAR1.CS_STRONGF ;SET CS STRONG
2680  045C              
2681  045C                            ;;SZ      _DATA_BUF[0].CS_INTERFEREF
2682  045C                            ;;MOV     A,30*1000/500   ;30 SEC CLEAR CS STRONG STATE
2683  045C                            ;;SZ      IAR1.CS_STRONGF
2684  045C  5FAA                        SET     CS_STAY_TIME
2685  045D                            ;;JMP     $+5
2686  045D                                              
2687  045D  1583                        DEC     MP1             ;KEY TIMER
2688  045E  1583                        DEC     MP1             ;KEY STATUS
2689  045F  3382                        SET     IAR1.CS_INTERFEREF
2690  0460              
2691  0460                            ;;JMP     CLEAR_REF
2692  0460                            ;;;-SET CS STRONG
2693  0460                            ;;SZ      IAR1.CS_PRESTRONGF
2694  0460                            ;;SET     IAR1.CS_STRONGF
2695  0460                            ;;SET     IAR1.CS_PRESTRONGF
2696  0460              
2697  0460              CLEAR_REF:      ;-CLEAR REF
2698  0460  2000     R                  CALL    GET_KEY_REF_MPX
2699  0461  1F02                        CLR     IAR1
2700  0462                                                                              
2701  0462                                                                              
2702  0462              END_CSN_CHK:    ;-END OF CS NOISE CHECK                         
2703  0462  2000     R                  CALL    CHECK_KEY_AMOUNT                        
2704  0463  380A                        SNZ     C                                       
2705  0464  2800     R                  JMP     CSN_CHK_LOOP                            
2706  0465  0003                        RET                                             
2707  0466              
2708  0466              
2709  0466              
2710  0466              
2711  0466              
2712  0466              ;;***********************************************************   
2713  0466              ;;******GET NOISE LEVEL**************************************   
2714  0466              ;;***********************************************************   
2715  0466              GET_NOISE_LEVEL:
2716  0466  1100                        SWAPA   IAR0
2717  0467  0E0F                        AND     A,00001111B
2718  0468  3D0A                        SZ      Z
2719  0469  0700                        MOV     A,IAR0  ;UNDER 16
2720  046A  390A                        SNZ     Z
2721  046B  0B10                        ADD     A,16    ;OVER 16 THEN + 16
2722  046C  409A                        MOV     _DATA_BUF[7],A          ;SAVE NOISE LEVEL
2723  046D                              ;-1/2 NOISE LEVEL
2724  046D  340A                        CLR     C
2725  046E  1B85                        RRC     ACC
2726  046F  0003                        RET
2727  0470              
2728  0470              
2729  0470                                                                              
2730  0470                                                                              
2731  0470              ;;***********************************************************   
2732  0470              ;;*SUB. NAME:                                               *   
2733  0470              ;;*INPUT    :                                               *   
2734  0470              ;;*OUTPUT   :                                               *   
2735  0470              ;;*USED REG.:                                               *   
"File: BS82C16A_LIBV413.asm  Holtek Cross-Assembler  Version 2.92      Page 47

2736  0470              ;;*FUNCTION :                                               *   
2737  0470              ;;***********************************************************   
2738  0470              _TKS_TIMER:        
2739  0470                            ;;;-TEST
2740  0470                            ;;MOV     A,00000010B
2741  0470                            ;;SZ      _TKS_500MSF
2742  0470                            ;;XORM    A,PA
2743  0470              
2744  0470                              ;-CLEAR TIMER FLAG
2745  0470  772D                        CLR     _TKS_500MSF     ;500 MSF
2746  0471  76AD                        CLR     _TKS_250MSF     ;250 MSF
2747  0472  762D                        CLR     _TKS_63MSF      ;62.5 MSF
2748  0473              
2749  0473                              ;-CHECK 31.25MS
2750  0473  54AB                        INC     TKS_TIMER
2751  0474  472B                        MOV     A,TKS_TIMER
2752  0475  0A0C                        SUB     A,12            ;31.25MS BASE ON 2.56MS
2753  0476  380A                        SNZ     C
2754  0477  0003                        RET
2755  0478  5F2B                        CLR     TKS_TIMER
2756  0479              
2757  0479                              ;--
2758  0479  54AC                        INC     TKS_TIMERB
2759  047A  7FAC                        SZ      TKS_TIMERB.7
2760  047B  73AD                        SET     POWER_ON_STABLEF;POWER ON STABLE AFTER 4 SEC
2761  047C              
2762  047C                              ;--
2763  047C  472C                        MOV     A,TKS_TIMERB
2764  047D  0E0F                        AND     A,00001111B;00000111B          
2765  047E  3D0A                        SZ      Z
2766  047F  732D                        SET     _TKS_500MSF     ;500 MSF
2767  0480                              ;--
2768  0480  0E07                        AND     A,00000111B;00000011B
2769  0481  3D0A                        SZ      Z
2770  0482  72AD                        SET     _TKS_250MSF     ;250 MSF
2771  0483              
2772  0483  782C                        SNZ     TKS_TIMERB.0
2773  0484  722D                        SET     _TKS_63MSF      ;62.5NSF
2774  0485              
2775  0485  0003                        RET
2776  0486                                                
2777  0486              
2778  0486              
2779  0486              
2780  0486              
2781  0486                                             
2782  0486              ;;***********************************************************   
2783  0486              ;;*SUB. NAME:                                               *   
2784  0486              ;;*INPUT    :CHANNEL_INDEX                                  *   
2785  0486              ;;*OUTPUT   :                                               *   
2786  0486              ;;*USED REG.:                                               *   
2787  0486              ;;*FUNCTION :                                               *   
2788  0486              ;;***********************************************************
2789  0486              CHECK_IP_AMOUNT:
2790  0486  0F03                        MOV     A,3
2791  0487  43A6                        ADDM    A,CHANNEL_INDEX
2792  0488              CHECK_KEY_AMOUNT:
2793  0488  54A6                        INC     CHANNEL_INDEX
2794  0489  4726                        MOV     A,CHANNEL_INDEX
2795  048A  0A10                        SUB     A,KeyAmount
"File: BS82C16A_LIBV413.asm  Holtek Cross-Assembler  Version 2.92      Page 48

2796  048B                            ;;;-TEST
2797  048B                            ;;SUB     A,8
2798  048B  0003                        RET
2799  048C              
2800  048C              ;;***********************************************************   
2801  048C              ;;*SUB. NAME:                                               *   
2802  048C              ;;*INPUT    :CHANNEL_INDEX                                  *   
2803  048C              ;;*OUTPUT   :                                               *   
2804  048C              ;;*USED REG.:                                               *   
2805  048C              ;;*FUNCTION :                                               *   
2806  048C              ;;***********************************************************
2807  048C              GET_CS_DBCE_MPX:
2808  048C  0F82                        MOV     A,OFFSET _CS_DBCE      
2809  048D  2800     R                  JMP     GET_3OFFSET_MPX
2810  048E              GET_KEY_STATUS_MPX:
2811  048E  0F80                        MOV     A,OFFSET _KEY_STATUS
2812  048F              GET_3OFFSET_MPX:;--
2813  048F  0083                        MOV     MP1,A
2814  0490  5826                        RLA     CHANNEL_INDEX   ;OFFSET 3 BYTE
2815  0491  4326                        ADD     A,CHANNEL_INDEX
2816  0492  0383                        ADDM    A,MP1
2817  0493                              ;-SET BANK
2818  0493  0F00     R                  MOV     A,BANK _KEY_STATUS
2819  0494  0084                        MOV     BP,A
2820  0495  0003                        RET
2821  0496              
2822  0496              
2823  0496              ;;***********************************************************   
2824  0496              ;;*SUB. NAME:                                               *   
2825  0496              ;;*INPUT    :CHANNEL_INDEX                                  *   
2826  0496              ;;*OUTPUT   :                                               *   
2827  0496              ;;*USED REG.:                                               *   
2828  0496              ;;*FUNCTION :                                               *   
2829  0496              ;;***********************************************************
2830  0496              GET_BALANCE_CAP_MPX:
2831  0496  0F83                        MOV     A,OFFSET _BALANCE_CAP
2832  0497  2800     R                  JMP     GET_REF_BANK_MPX
2833  0498              ;;***********************************************************   
2834  0498              ;;*SUB. NAME:                                               *   
2835  0498              ;;*INPUT    :CHANNEL_INDEX                                  *   
2836  0498              ;;*OUTPUT   :                                               *   
2837  0498              ;;*USED REG.:                                               *   
2838  0498              ;;*FUNCTION :                                               *   
2839  0498              ;;***********************************************************
2840  0498              GET_KEY_FREQB_MPX:
2841  0498  0F82                        MOV     A,OFFSET _KEY_FREQ_BOT
2842  0499  2800     R                  JMP     GET_REF_BANK_MPX
2843  049A              ;;***********************************************************   
2844  049A              ;;*SUB. NAME:                                               *   
2845  049A              ;;*INPUT    :CHANNEL_INDEX                                  *   
2846  049A              ;;*OUTPUT   :                                               *   
2847  049A              ;;*USED REG.:                                               *   
2848  049A              ;;*FUNCTION :                                               *   
2849  049A              ;;***********************************************************
2850  049A              GET_KEY_FREQ_MPX:
2851  049A  0F81                        MOV     A,OFFSET _KEY_FREQ
2852  049B  2800     R                  JMP     GET_REF_BANK_MPX
2853  049C              ;;***********************************************************   
2854  049C              ;;*SUB. NAME:                                               *   
2855  049C              ;;*INPUT    :CHANNEL_INDEX                                  *   
"File: BS82C16A_LIBV413.asm  Holtek Cross-Assembler  Version 2.92      Page 49

2856  049C              ;;*OUTPUT   :                                               *   
2857  049C              ;;*USED REG.:                                               *   
2858  049C              ;;*FUNCTION :                                               *   
2859  049C              ;;***********************************************************
2860  049C              GET_KEY_REF_MPX:
2861  049C  0F80                        MOV     A,OFFSET _KEY_REF
2862  049D              GET_REF_BANK_MPX:
2863  049D  0083                        MOV     MP1,A
2864  049E  0F00     R                  MOV     A,BANK _KEY_REF                                                 
2865  049F  2800     R                  JMP     GET_4OFFSET_MPX
2866  04A0              
2867  04A0              ;;***********************************************************   
2868  04A0              ;;*SUB. NAME:                                               *   
2869  04A0              ;;*INPUT    :CHANNEL_INDEX                                  *   
2870  04A0              ;;*OUTPUT   :                                               *   
2871  04A0              ;;*USED REG.:                                               *   
2872  04A0              ;;*FUNCTION :                                               *   
2873  04A0              ;;***********************************************************
2874  04A0              GET_KEY_LIMIT_MPX:
2875  04A0  0FC0                        MOV     A,OFFSET _KEY_LIMIT
2876  04A1  0083                        MOV     MP1,A
2877  04A2  0F00     R                  MOV     A,BANK _KEY_LIMIT                                               
2878  04A3                            ;;JMP     GET_4OFFSET_MPX
2879  04A3              
2880  04A3              GET_4OFFSET_MPX:;-GET RAM MPX WITH 4 OFFSET
2881  04A3  0084                        MOV     BP,A
2882  04A4  5826                        RLA     CHANNEL_INDEX
2883  04A5  1885                        RL      ACC
2884  04A6  0383                        ADDM    A,MP1
2885  04A7  0003                        RET                  
2886  04A8              
2887  04A8              ;;***********************************************************   
2888  04A8              ;;*SUB. NAME:                                               *   
2889  04A8              ;;*INPUT    :                                               *   
2890  04A8              ;;*OUTPUT   :                                               *   
2891  04A8              ;;*USED REG.:                                               *   
2892  04A8              ;;*FUNCTION :                                               *   
2893  04A8              ;;***********************************************************
2894  04A8              GET_KEY_THR_MP0:
2895  04A8  4726                        MOV     A,CHANNEL_INDEX
2896  04A9  0B83                        ADD     A,OFFSET _GLOBE_VARIES[KEY1_THR]
2897  04AA  0081                        MOV     MP0,A
2898  04AB  0003                        RET
2899  04AC              
2900  04AC              
2901  04AC              
2902  04AC              
2903  04AC              
2904  04AC                                             
2905  04AC                                                                               
2906  04AC              ;;===============================                                
2907  04AC              ;;=EXTERNAL REFERENCE SUBROUTIN==                                
2908  04AC              ;;===============================                                
2909  04AC                                                                              
2910  04AC                                                                              
2911  04AC                                                                              
2912  04AC              ;;***********************************************************   
2913  04AC              ;;*SUB. NAME:                                               *   
2914  04AC              ;;*INPUT    :NONE                                           *   
2915  04AC              ;;*USED REG.:ACC , _DATA_BUF[0] ,_DATA_BUF[1]               *   
"File: BS82C16A_LIBV413.asm  Holtek Cross-Assembler  Version 2.92      Page 50

2916  04AC              ;;*USED REG.:                                               *   
2917  04AC              ;;*FUNCTION :                                               *   
2918  04AC              ;;***********************************************************   
2919  04AC              _GET_LIB_VER:                                                   
2920  04AC  0F13                        MOV     A,LOW LibraryVersion                    
2921  04AD  4093                        MOV     _DATA_BUF[0],A                          
2922  04AE  0F04                        MOV     A,HIGH LibraryVersion                   
2923  04AF  4094                        MOV     _DATA_BUF[1],A                          
2924  04B0  0003                        RET
2925  04B1                              
2926  04B1                                                           
2927  04B1              ;;***********************************************************   
2928  04B1              ;;*SUB. NAME:                                               *   
2929  04B1              ;;*INPUT    :NONE                                           *   
2930  04B1              ;;*OUTPUT   :ACC                                            *   
2931  04B1              ;;*USED REG.:                                               *   
2932  04B1              ;;*FUNCTION :                                               *   
2933  04B1              ;;***********************************************************   
2934  04B1              _GET_KEY_AMOUNT:                                                
2935  04B1  0F10                        MOV     A,KeyAmount                             
2936  04B2  0003                        RET                                             
2937  04B3                                                                              
2938  04B3                                                                              
2939  04B3              ;;***********************************************************   
2940  04B3              ;;*SUB. NAME:                                               *   
2941  04B3              ;;*INPUT    :NONE                                           *   
2942  04B3              ;;*OUTPUT   :_DATA_BUF[1];_DATA_BUF[0]                      *   
2943  04B3              ;;*USED REG.:                                               *   
2944  04B3              ;;*FUNCTION :                                               *   
2945  04B3              ;;***********************************************************   
2946  04B3                              ;---------------                                
2947  04B3              _GET_KEY_BITMAP:;-READ KEY LEVEL                                
2948  04B3                              ;---------------
2949  04B3                            ;;CLR     _DATA_BUF[1]
2950  04B3  4720                        MOV     A,_KEY_DATA[0]
2951  04B4  4093                        MOV     _DATA_BUF[0],A
2952  04B5                      ;--------------------------------
2953  04B5                      if      KeyAmount > 8
2954  04B5  4721                        MOV     A,_KEY_DATA[1]
2955  04B6  4094                        MOV     _DATA_BUF[1],A
2956  04B7                      endif
2957  04B7                      ;--------------------------------
2958  04B7                      if      KeyAmount > 16
2959  04B7                              MOV     A,_KEY_DATA[2]
2960  04B7                              MOV     _DATA_BUF[2],A
2961  04B7                      endif
2962  04B7                      ;--------------------------------
2963  04B7  0003                        RET
2964  04B8              
2965  04B8                                                                              
2966  04B8                                                                              
2967  04B8              ;;***********************************************************   
2968  04B8              ;;*SUB. NAME:                                               *   
2969  04B8              ;;*INPUT    :ACC                                            *   
2970  04B8              ;;*OUTPUT   :_DATA_BUF[0],_DATA_BUF[1]                      *   
2971  04B8              ;;*USED REG.:ACC , _DATA_BUF[0] , MP1 , IAR1 , BP           *   
2972  04B8              ;;*FUNCTION :GET "RCC" VALUE                                *   
2973  04B8              ;;***********************************************************   
2974  04B8              _GET_RCC_VALUE:               
2975  04B8  4093                        MOV     _DATA_BUF[0],A
"File: BS82C16A_LIBV413.asm  Holtek Cross-Assembler  Version 2.92      Page 51

2976  04B9  0F83                        MOV     A,OFFSET _BALANCE_CAP
2977  04BA  2800     R                  JMP     GET_VALUE
2978  04BB              
2979  04BB              
2980  04BB              
2981  04BB                            ;;MOV     _DATA_BUF[0],A
2982  04BB                            ;;;--
2983  04BB                            ;;MOV     A,MP1
2984  04BB                            ;;MOV     MP_BUF,A
2985  04BB                            ;;MOV     A,BP
2986  04BB                            ;;MOV     BP_BUF,A
2987  04BB                            ;;;--
2988  04BB                            ;;MOV     A,BANK _KEY_REF      
2989  04BB                            ;;MOV     BP,A
2990  04BB                            ;;MOV     A,OFFSET _BALANCE_CAP
2991  04BB                            ;;JMP     GET_VALUE
2992  04BB              
2993  04BB                                                                              
2994  04BB                                                                              
2995  04BB                                                                              
2996  04BB              ;;***********************************************************   
2997  04BB              ;;*SUB. NAME:                                               *   
2998  04BB              ;;*INPUT    :ACC 0=KEY1 ; 1=KEY2....                        *   
2999  04BB              ;;*OUTPUT   :_DATA_BUF[1],_DATA_BUF[0]                      *   
3000  04BB              ;;*USED REG.:ACC,_DATA_BUF[0]~_DATA_BUF[3],MP1,IAR1,BP      *   
3001  04BB              ;;*FUNCTION :GET "ENV" VALUE                                *   
3002  04BB              ;;***********************************************************   
3003  04BB              _GET_ENV_VALUE:     
3004  04BB  4093                        MOV     _DATA_BUF[0],A
3005  04BC  0F81                        MOV     A,OFFSET _KEY_FREQ
3006  04BD  2800     R                  JMP     GET_VALUE
3007  04BE                            ;;;--
3008  04BE                            ;;MOV     A,MP1
3009  04BE                            ;;MOV     MP_BUF,A
3010  04BE                            ;;MOV     A,BP
3011  04BE                            ;;MOV     BP_BUF,A
3012  04BE                            ;;;--
3013  04BE                            ;;MOV     A,BANK _KEY_REF;FREQ
3014  04BE                            ;;MOV     BP,A
3015  04BE                            ;;MOV     A,OFFSET _KEY_FREQ
3016  04BE                            ;;JMP     GET_VALUE
3017  04BE              
3018  04BE                                                                              
3019  04BE                                                                              
3020  04BE              ;;***********************************************************   
3021  04BE              ;;*SUB. NAME:                                               *   
3022  04BE              ;;*INPUT    :ACC 0=KEY1 ; 1=KEY2....                        *   
3023  04BE              ;;*OUTPUT   :_DATA_BUF[0],_DATA_BUF[1]                      *   
3024  04BE              ;;*USED REG.:ACC,_DATA_BUF[0]~_DATA_BUF[3],MP1,IAR1,BP      *   
3025  04BE              ;;*FUNCTION :GET "REF" VALUE                                *   
3026  04BE              ;;***********************************************************   
3027  04BE              _GET_REF_VALUE:          
3028  04BE  4093                        MOV     _DATA_BUF[0],A
3029  04BF  0F80                        MOV     A,OFFSET _KEY_REF
3030  04C0              
3031  04C0              GET_VALUE:      ;-----
3032  04C0  4094                        MOV     _DATA_BUF[1],A
3033  04C1                              ;-PUSH MP1,BP
3034  04C1  0703                        MOV     A,MP1
3035  04C2  4096                        MOV     MP_BUF,A
"File: BS82C16A_LIBV413.asm  Holtek Cross-Assembler  Version 2.92      Page 52

3036  04C3  0704                        MOV     A,BP
3037  04C4  4095                        MOV     BP_BUF,A
3038  04C5                              ;--
3039  04C5  0F00     R                  MOV     A,BANK _KEY_REF 
3040  04C6  0084                        MOV     BP,A
3041  04C7                              ;-OFFSET 4 BYTE
3042  04C7  5813                        RLA     _DATA_BUF[0]
3043  04C8  1885                        RL      ACC             
3044  04C9  4314                        ADD     A,_DATA_BUF[1]
3045  04CA  0083                        MOV     MP1,A
3046  04CB  0702                        MOV     A,IAR1
3047  04CC  4093                        MOV     _DATA_BUF[0],A
3048  04CD  5F14                        CLR     _DATA_BUF[1]
3049  04CE              
3050  04CE              POP_MP1_BP:     ;-POP BP & MP1 CONTENT  
3051  04CE  4715                        MOV     A,BP_BUF
3052  04CF  0084                        MOV     BP,A
3053  04D0  4716                        MOV     A,MP_BUF            
3054  04D1  0083                        MOV     MP1,A                                   
3055  04D2  0003                        RET                                             
3056  04D3                                                                              
3057  04D3                                                                              
3058  04D3                                                                      
3059  04D3              
3060  04D3                              END


        0 Errors